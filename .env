# ==================================================
# 🧭 Noctria Kingdom: Global .env (merged for Levia Gate / Fintokei)
# ==================================================

# -------- Airflow (inside docker-compose) --------
AIRFLOW_HOME=/opt/airflow
PYTHONPATH=/opt/airflow/src
AIRFLOW__API__AUTH_BACKENDS=airflow.api.auth.backend.basic_auth

# Airflow metadata DB (docker-compose の postgres サービス)
POSTGRES_USER=airflow
POSTGRES_PASSWORD=airflow
POSTGRES_DB=airflow
POSTGRES_HOST=postgres
POSTGRES_PORT=5432
AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}

# Airflow UI / API
AIRFLOW_WEBSERVER_SECRET_KEY=change-me
# NOTE: king_noctria.py は core.path_config の AIRFLOW_API_BASE を参照する想定。
# 互換のため両方置く（どちらかを参照）。
AIRFLOW_API_URL=http://localhost:8080/api/v1
AIRFLOW_API_BASE=http://localhost:8080

AIRFLOW_USERNAME=admin
AIRFLOW_PASSWORD=admin

# -------- Observability (Noctria obs_* 用) --------
# 実行場所で切替：ホストで実行するなら (A) を使う。コンテナ内でGUIを動かすなら (B)。

# (A) Host-run（GUIはホスト上の venv で動作）
NOCTRIA_OBS_PG_DSN=postgresql://noctria:noctria@127.0.0.1:5432/noctria_db

# (B) Docker-run（GUIもコンテナ内で動かす場合だけ使う）
# NOCTRIA_OBS_PG_DSN=postgresql://noctria:noctria@postgres:5432/noctria_db

# -------- Optional generic DB aliases (任意) --------
DB_HOST=localhost
DB_PORT=5432
DB_NAME=airflow
DB_USER=airflow
DB_PASSWORD=airflow
DATABASE_URL=postgresql://airflow:airflow@postgres:5432/airflow

# -------- Models / Paths (任意) --------
MODEL_DIR=/opt/airflow/models/nous-hermes-2
# EVENT_CALENDAR（必要なら上書き）例：
# EVENT_CALENDAR=data/market/event_calendar.csv

# -------- External API keys --------
FRED_API_KEY=REPLACE_ME
GNEWS_API_KEY=REPLACE_ME
GNEWS_PAGE_SIZE=50
GNEWS_MAX_PAGES=2
GNEWS_RETRY=3
GNEWS_BACKOFF=1.5
GNEWS_RATE_PER_MIN=12
ALPHAVANTAGE_API_KEY=REPLACE_ME


# ===== LLM / GPT (オンライン) =====
NOCTRIA_LLM_ENABLED=true

# OpenAI/互換エンドポイント
OPENAI_API_BASE=https://api.openai.com/v1
OPENAI_BASE_URL=https://api.openai.com/v1
OPENAI_API_KEY=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   # ←実キーを入れる
NOCTRIA_GPT_MODEL=gpt-4o-mini      # 例: gpt-4.1 / gpt-4o
OPENAI_MODEL=gpt-4o-mini

# エージェント動作
NOCTRIA_HARMONIA_MODE=auto   # auto|online|offline（autoはキー有ならonline）
NOCTRIA_HERMES_ENABLED=auto  # on|off|auto（autoはキー有ならon）

# （任意）タイムアウト/再試行
LLM_HTTP_TIMEOUT_SECS=45
LLM_MAX_RETRIES=2
LLM_RETRY_BACKOFF=1.5


# -------- Misc --------
TZ=Asia/Tokyo

# ==================================================
# 🔰 Plan入力（Levia Gate / PDCAランナー用）
#   - run_pdca_agents.py / levia_gate / LeviaTempest.decide_with_gate で使用
#   - 空なら無視。必要に応じて埋める。
# ==================================================
# 直接Planを環境変数で与える場合（どれか不足すればスキップ）
# NOCTRIA_PLAN_SYMBOL=USDJPY
# NOCTRIA_PLAN_SIDE=buy
# NOCTRIA_PLAN_ENTRY=157.2
# NOCTRIA_PLAN_SL=156.7
# NOCTRIA_PLAN_LOT=0.8
# NOCTRIA_PLAN_CAPITAL=200000
# NOCTRIA_PLAN_TARGET_PROFIT=20000

# JSONでPlanを与える場合（上より優先）
# NOCTRIA_PLAN_JSON=/opt/airflow/noctria_kingdom/plan.json

# ==================================================
# ⚙️ LeviaTempest / Gate の暫定デフォルト
#   - decide_with_gate() で資本/ロットを補完する値
#   - King側の Gate 用 lot/TP でも使用されます
# ==================================================
NOCTRIA_PLAN_CAPITAL=200000
NOCTRIA_PLAN_LOT_DEFAULT=0.1
# Gateで使う暫定lot（King._build_gate_plan でも参照）
NOCTRIA_PLAN_LOT=0.1
# Gateで使う暫定TP（未指定なら資本の10%を暫定採用）
#NOCTRIA_PLAN_TARGET_PROFIT=

# ==================================================
# 🛡 Fintokei Enforcer 閾値（将来のENV外だし想定 / 必要時に有効化）
#   - 使わない場合はコメントのままでOK（コード側のデフォルトが使われます）
# ==================================================
# FINTOKEI_MIN_LOT=0.1
# FINTOKEI_MAX_LOT=2.0
# FINTOKEI_MAX_RISK_PCT=2.0
# FINTOKEI_MAX_TP_SHARE_PCT=50.0
# FINTOKEI_SUDDEN_LOT_JUMP=3.0

# .github/workflows/codex_quality.yml
name: Codex Quality Gate (Ruff)

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [ main ]
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      run_all:
        description: 'Check entire repo (true/false)'
        required: false
        default: 'false'

permissions:
  contents: read
  pull-requests: write

concurrency:
  group: codex-quality-${{ github.event.pull_request.number || github.ref_name }}
  cancel-in-progress: true

jobs:
  lint:
    name: Ruff Lint
    runs-on: ubuntu-latest

    env:
      PYTHONUNBUFFERED: "1"

    steps:
      - name: Checkout (full history for diffs)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Ruff
        run: |
          python -m pip install --upgrade pip
          pip install ruff==0.6.9

      - name: Determine target set (diff-only or full)
        id: target
        shell: bash
        run: |
          set -euo pipefail

          RUN_ALL_INPUT="${{ github.event.inputs.run_all || 'false' }}"
          EVENT="${{ github.event_name }}"

          if [[ "$EVENT" == "push" ]]; then
            # push to main → 常に全体チェック
            echo "mode=all" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          if [[ "${RUN_ALL_INPUT,,}" == "true" ]]; then
            echo "mode=all" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          # PR の場合は base ブランチとの差分だけ
          BASE_REF="${{ github.base_ref }}"
          if [[ -z "$BASE_REF" ]]; then
            # 念のためフォールバック（通常はPRで必ず入る）
            BASE_REF="main"
          fi

          echo "Using BASE_REF=$BASE_REF"
          git fetch origin "$BASE_REF" --quiet

          MERGE_BASE="$(git merge-base HEAD "origin/$BASE_REF")"
          echo "merge-base: $MERGE_BASE"

          # 追加/変更/コピー/改名/型変更を対象（削除は除外）
          mapfile -t CHANGED < <(git diff --name-only --diff-filter=ACMRT "$MERGE_BASE"...HEAD | grep -E '\.py$' || true)

          if [[ ${#CHANGED[@]} -eq 0 ]]; then
            echo "mode=none" >> "$GITHUB_OUTPUT"
          else
            printf '%s\n' "${CHANGED[@]}" > .changed_py.txt
            echo "mode=diff" >> "$GITHUB_OUTPUT"
          fi

      - name: Ruff (diff-only)
        if: steps.target.outputs.mode == 'diff'
        run: |
          echo "Changed Python files:"
          cat .changed_py.txt
          # GitHub Annotation に出す
          xargs -a .changed_py.txt ruff check --output-format=github --force-exclude

      - name: Ruff (full repo)
        if: steps.target.outputs.mode == 'all'
        run: |
          ruff check . --output-format=github --force-exclude

      - name: Nothing to lint (no changed .py)
        if: steps.target.outputs.mode == 'none'
        run: |
          echo "No changed Python files detected. Skipping Ruff."

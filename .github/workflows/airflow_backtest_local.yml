name: Airflow Backtest (Local)

on:
  workflow_dispatch:
    inputs:
      strategy_glob:
        description: "実行対象戦略のグロブ（例: src/strategies/veritas_generated/**.py）"
        required: false
        default: "src/strategies/veritas_generated/**.py"
      extra_args:
        description: "追加引数（任意）"
        required: false
        default: ""

permissions:
  contents: read

concurrency:
  group: airflow-backtest
  cancel-in-progress: true

jobs:
  backtest:
    # self-hosted runner があるならこちらに変更: runs-on: self-hosted
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Show context
        run: |
          echo "strategy_glob=${{ github.event.inputs.strategy_glob }}"
          echo "extra_args=${{ github.event.inputs.extra_args }}"

      - name: Install minimal deps
        run: |
          python -m pip install --upgrade pip
          # Airflow は重いので、ここではバックテストで必要な軽依存のみ（必要に応じて調整）
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run local backtest (script)
        shell: bash
        run: |
          set -euo pipefail
          # 例）あなたのリポにある軽量バックテストスクリプトに合わせてコマンドを調整してください
          # 参考になりそうな既存ファイル:
          #   airflow_docker/scripts/veritas_local_test.py
          #   src/scripts/evaluate_single_strategy.py など
          if [ -f "airflow_docker/scripts/veritas_local_test.py" ]; then
            python3 airflow_docker/scripts/veritas_local_test.py \
              --pattern "${{ github.event.inputs.strategy_glob }}" \
              ${{ github.event.inputs.extra_args }}
          else
            echo "No local backtest script found; running a dry-run placeholder."
            python - <<'PY'
print("Dry run: backtest step placeholder OK")
PY
          fi

      - name: Collect results
        if: always()
        run: |
          mkdir -p handoff_out
          # 代表的な成果物を拾う（存在するものだけ）
          for p in \
            airflow_docker/logs/veritas_generate.log \
            airflow_docker/logs/veritas_eval_result.json \
            logs/veritas_evaluate.log \
            logs/veritas_eval_result.json \
            data/stats/*.json \
            handoff/handoff_*.md \
            handoff/handoff_*.json
          do
            if ls $p >/dev/null 2>&1; then
              cp -r $p handoff_out/ 2>/dev/null || true
            fi
          done
          ls -al handoff_out || true

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: airflow-backtest-${{ github.run_id }}
          path: handoff_out
          retention-days: 14

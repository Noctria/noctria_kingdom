name: Handoff Rollup

on:
  workflow_dispatch:
    inputs:
      pinned_issue_number:
        description: "コメント先のピン留めIssue番号"
        required: true
        default: "1"
      lookback_hours:
        description: "直近何時間の更新を集計するか"
        required: true
        default: "1"
      next_from:
        description: "次アクション読込ファイルパス（任意）"
        required: false
        default: ""
  schedule:
    - cron: "0 * * * *"  # 毎時00分（UTC）

permissions:
  contents: read
  pull-requests: read
  issues: write

concurrency:
  group: handoff-rollup
  cancel-in-progress: true

env:
  PINNED_ISSUE_NUMBER: ${{ github.event.inputs.pinned_issue_number || '1' }}
  LOOKBACK_HOURS: ${{ github.event.inputs.lookback_hours || '1' }}
  NEXT_FROM: ${{ github.event.inputs.next_from || '' }}

jobs:
  rollup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Generate handoff (markdown + json)
        run: |
          set -euo pipefail
          python3 scripts/generate_handoff.py --lookback-hours "${LOOKBACK_HOURS}" ${NEXT_FROM:+--next-from "${NEXT_FROM}"}
          ls -al handoff/

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: handoff-${{ github.run_id }}
          path: |
            handoff/handoff_*.md
            handoff/handoff_*.json
          retention-days: 14

      - name: Post to pinned issue
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            const dir = path.join(process.env.GITHUB_WORKSPACE, "handoff");
            // 最新ファイル（更新時刻最大の .md）を選ぶ
            const mds = fs.readdirSync(dir).filter(f => f.endsWith(".md"))
              .map(f => ({ f, t: fs.statSync(path.join(dir, f)).mtimeMs }))
              .sort((a,b) => b.t - a.t);
            if (mds.length === 0) {
              core.setFailed("handoff/*.md not found");
            }
            const latest = path.join(dir, mds[0].f);
            const body = fs.readFileSync(latest, 'utf-8');

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: parseInt(process.env.PINNED_ISSUE_NUMBER || "1", 10),
              body
            });

# .github/workflows/handoff_rollup.yml
# Generate a small "handoff" note, upload it as an artifact,
# and (safely) comment to the PR when permissions allow.

name: Handoff Rollup

on:
  workflow_dispatch:
    inputs:
      lookback_hours:
        description: "How many hours to look back for the handoff note"
        required: false
        default: "1"
  pull_request:
    branches: [ main ]
  push:
    branches:
      - adopt/**
      - main
  schedule:
    - cron: "0 * * * *"  # hourly (UTC)

permissions:
  contents: read
  pull-requests: write
  issues: write

concurrency:
  group: handoff-rollup
  cancel-in-progress: true

jobs:
  rollup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Resolve inputs / defaults
        id: cfg
        shell: bash
        run: |
          set -euo pipefail
          # normalize lookback_hours (string -> int-ish)
          LB="${{ github.event.inputs.lookback_hours || '1' }}"
          [[ -z "$LB" ]] && LB="1"
          echo "lookback_hours=$LB" >> "$GITHUB_OUTPUT"

      - name: Prepare handoff file (safe filename; relative path)
        id: handoff_file
        shell: bash
        run: |
          set -euo pipefail
          # Safe timestamp without colon (e.g., 2025-09-14T180633Z)
          NOW_SAFE="$(date -u +'%Y-%m-%dT%H%M%SZ')"
          DIR="handoff_out"
          FILE="handoff_${NOW_SAFE}.md"
          mkdir -p "$DIR"

          {
            echo "# 📝 引き継ぎレポート (${NOW_SAFE})"
            echo "_直近 **${{ steps.cfg.outputs.lookback_hours }}h** の更新を集計_"
            echo
            echo "## ✅ 最近のコミット（サンプル）"
            # 直近コミット（最大10件・省略表示）
            git log --since="${{ steps.cfg.outputs.lookback_hours }} hours ago" --pretty='- %h %s (%an)' -n 10 || true
            echo
            echo "## 🚩 次アクション（サンプル）"
            echo "- [ ] DAG 本処理の組み込み"
            echo "- [ ] 戦略指定パラメータの対応"
            echo "- [ ] 結果の artifact / PR コメント出力"
            echo
            echo "<!--HANDOFF_META"
            echo "{\"generated_at\":\"${NOW_SAFE}\",\"lookback_hours\":${{ steps.cfg.outputs.lookback_hours }}}"
            echo "HANDOFF_META-->"
          } > "${DIR}/${FILE}"

          echo "HANDOFF_DIR=${DIR}"  >> "$GITHUB_ENV"
          echo "HANDOFF_FILE=${FILE}" >> "$GITHUB_ENV"

      - name: Upload handoff artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: handoff-${{ github.run_id }}
          path: ${{ env.HANDOFF_DIR }}/
          retention-days: 14

      # Safely comment to PR only when:
      # - This workflow is running on a PR event
      # - The PR is NOT from a fork (GITHUB_TOKEN has write on same-repo PR)
      - name: Comment to PR (when allowed)
        if: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork == false }}
        uses: actions/github-script@v7
        env:
          HANDOFF_DIR: ${{ env.HANDOFF_DIR }}
          HANDOFF_FILE: ${{ env.HANDOFF_FILE }}
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            const filePath = path.join(process.env.HANDOFF_DIR, process.env.HANDOFF_FILE);
            let body = '';
            try {
              body = fs.readFileSync(filePath, 'utf8');
            } catch (e) {
              body = '# 📝 引き継ぎレポート\nファイルの読込に失敗しましたが、artifact に同梱されています。';
            }

            try {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body
              });
              core.info('Posted handoff note to PR.');
            } catch (err) {
              core.warning(`Skip PR comment (likely permissions). ${err}`);
            }

# .github/workflows/repo_xray.yml
name: Repo X-Ray

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  workflow_dispatch: {}

permissions:
  contents: read
  pull-requests: write

concurrency:
  group: repo-xray-${{ github.event.pull_request.number || github.ref_name }}
  cancel-in-progress: true

jobs:
  xray:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Run Repo X-Ray
        run: |
          set -euo pipefail
          python3 scripts/repo_xray.py --root . --out codex_reports/repo_xray
          echo "---- repo_xray.md (head) ----"
          sed -n '1,80p' codex_reports/repo_xray.md || true

      - name: Sanitize ref for artifact name
        id: saferef
        run: |
          REF="${{ github.ref_name || 'manual' }}"
          SAFE_REF="$(printf '%s' "$REF" | tr '/:\"<>|*?\r\n\\' '-' )"
          echo "ref=$SAFE_REF" >> "$GITHUB_OUTPUT"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: repo-xray-${{ github.run_id }}-${{ steps.saferef.outputs.ref }}
          path: |
            codex_reports/repo_xray.json
            codex_reports/repo_xray.md
          retention-days: 14

      - name: Comment summary to PR
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const md = fs.readFileSync('codex_reports/repo_xray.md','utf-8');
            const head = md.split('\n').slice(0, 40).join('\n');
            const runUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;
            const body = [
              `### ðŸ”Ž Repo X-Ray (this PR)`,
              '',
              'Top summary (first lines):',
              '```md',
              head,
              '```',
              `- Full artifacts: [Actions run](${runUrl})`,
            ].join('\n');
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body
            });

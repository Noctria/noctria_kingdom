F404 `from __future__` imports must occur at the beginning of the file
   --> _graveyard/2025-09-06/airflow_docker/dags/noctria_act_pipeline.py:157:1
    |
155 | """
156 |
157 | from __future__ import annotations
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
158 | import os
159 | import json
    |

E402 Module level import not at top of file
   --> _graveyard/2025-09-06/airflow_docker/dags/noctria_act_pipeline.py:157:1
    |
155 | """
156 |
157 | from __future__ import annotations
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
158 | import os
159 | import json
    |

E402 Module level import not at top of file
   --> _graveyard/2025-09-06/airflow_docker/dags/noctria_act_pipeline.py:158:1
    |
157 | from __future__ import annotations
158 | import os
    | ^^^^^^^^^
159 | import json
160 | from glob import glob
    |

E402 Module level import not at top of file
   --> _graveyard/2025-09-06/airflow_docker/dags/noctria_act_pipeline.py:159:1
    |
157 | from __future__ import annotations
158 | import os
159 | import json
    | ^^^^^^^^^^^
160 | from glob import glob
161 | from typing import Dict, Any, List
    |

E402 Module level import not at top of file
   --> _graveyard/2025-09-06/airflow_docker/dags/noctria_act_pipeline.py:160:1
    |
158 | import os
159 | import json
160 | from glob import glob
    | ^^^^^^^^^^^^^^^^^^^^^
161 | from typing import Dict, Any, List
162 | from datetime import datetime
    |

E402 Module level import not at top of file
   --> _graveyard/2025-09-06/airflow_docker/dags/noctria_act_pipeline.py:161:1
    |
159 | import json
160 | from glob import glob
161 | from typing import Dict, Any, List
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
162 | from datetime import datetime
    |

E402 Module level import not at top of file
   --> _graveyard/2025-09-06/airflow_docker/dags/noctria_act_pipeline.py:162:1
    |
160 | from glob import glob
161 | from typing import Dict, Any, List
162 | from datetime import datetime
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
163 |
164 | PROJECT_ROOT = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
    |

F404 `from __future__` imports must occur at the beginning of the file
   --> _graveyard/2025-09-06/airflow_docker/dags/noctria_act_pipeline.py:304:1
    |
302 | """
303 |
304 | from __future__ import annotations
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
305 | import os
306 | from datetime import datetime
    |

E402 Module level import not at top of file
   --> _graveyard/2025-09-06/airflow_docker/dags/noctria_act_pipeline.py:304:1
    |
302 | """
303 |
304 | from __future__ import annotations
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
305 | import os
306 | from datetime import datetime
    |

E402 Module level import not at top of file
   --> _graveyard/2025-09-06/airflow_docker/dags/noctria_act_pipeline.py:305:1
    |
304 | from __future__ import annotations
305 | import os
    | ^^^^^^^^^
306 | from datetime import datetime
    |

E402 Module level import not at top of file
   --> _graveyard/2025-09-06/airflow_docker/dags/noctria_act_pipeline.py:306:1
    |
304 | from __future__ import annotations
305 | import os
306 | from datetime import datetime
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
307 |
308 | PROJECT_ROOT = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
    |

E402 Module level import not at top of file
  --> _graveyard/2025-09-06/airflow_docker/dags/train_prometheus_obs8_dag.py:41:1
   |
39 |         sys.path.append(p)
40 |
41 | from airflow import DAG
   | ^^^^^^^^^^^^^^^^^^^^^^^
42 | from airflow.operators.python import PythonOperator
   |

E402 Module level import not at top of file
  --> _graveyard/2025-09-06/airflow_docker/dags/train_prometheus_obs8_dag.py:42:1
   |
41 | from airflow import DAG
42 | from airflow.operators.python import PythonOperator
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |

E402 Module level import not at top of file
  --> _graveyard/2025-09-06/airflow_docker/dags/veritas_eval_dag.py:24:1
   |
22 |     sys.path.insert(0, project_root)
23 |
24 | from src.core.path_config import STRATEGIES_VERITAS_GENERATED_DIR
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
25 | from src.core.strategy_evaluator import evaluate_strategy, log_evaluation_result
   |

E402 Module level import not at top of file
  --> _graveyard/2025-09-06/airflow_docker/dags/veritas_eval_dag.py:25:1
   |
24 | from src.core.path_config import STRATEGIES_VERITAS_GENERATED_DIR
25 | from src.core.strategy_evaluator import evaluate_strategy, log_evaluation_result
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
26 |
27 | default_args = {
   |

E402 Module level import not at top of file
  --> _graveyard/2025-09-06/airflow_docker/dags/veritas_pdca_dag.py:24:1
   |
23 | # --- Veritas戦略関連スクリプトのインポート ---
24 | from src.veritas.veritas_generate_strategy import main as generate_main
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
25 | from src.veritas.evaluate_veritas import main as evaluate_main
26 | from src.scripts.github_push_adopted_strategies import main as push_main
   |

E402 Module level import not at top of file
  --> _graveyard/2025-09-06/airflow_docker/dags/veritas_pdca_dag.py:25:1
   |
23 | # --- Veritas戦略関連スクリプトのインポート ---
24 | from src.veritas.veritas_generate_strategy import main as generate_main
25 | from src.veritas.evaluate_veritas import main as evaluate_main
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
26 | from src.scripts.github_push_adopted_strategies import main as push_main
   |

E402 Module level import not at top of file
  --> _graveyard/2025-09-06/airflow_docker/dags/veritas_pdca_dag.py:26:1
   |
24 | from src.veritas.veritas_generate_strategy import main as generate_main
25 | from src.veritas.evaluate_veritas import main as evaluate_main
26 | from src.scripts.github_push_adopted_strategies import main as push_main
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
27 |
28 | # === DAG内ヘルパー関数 ===
   |

E402 Module level import not at top of file
  --> _graveyard/2025-09-06/airflow_docker/dags/veritas_to_order_dag.py:25:1
   |
23 | # ✅ 修正: 各スクリプトからメインの処理関数をインポート
24 | # 存在しないモジュールを削除し、必要なものを正しくインポート
25 | from src.veritas.evaluate_veritas import main as evaluate_main
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
26 | # from src.veritas.promote_accepted_strategies import main as promote_main # このスクリプトは存在しない可能性
27 | from src.execution.generate_order_json import main as generate_order_main
   |

E402 Module level import not at top of file
  --> _graveyard/2025-09-06/airflow_docker/dags/veritas_to_order_dag.py:27:1
   |
25 | from src.veritas.evaluate_veritas import main as evaluate_main
26 | # from src.veritas.promote_accepted_strategies import main as promote_main # このスクリプトは存在しない可能性
27 | from src.execution.generate_order_json import main as generate_order_main
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
28 |
29 | # === DAG基本設定 ===
   |

F841 Local variable `git_ok` is assigned to but never used
  --> _graveyard/2025-09-06/noctria_gui/routes/adoptions.py:78:13
   |
76 |             git_ok = True
77 |         except Exception:
78 |             git_ok = False
   |             ^^^^^^
79 |
80 |     idx = _build_registry_index()
   |
help: Remove assignment to unused variable `git_ok`

E402 Module level import not at top of file
  --> _graveyard/2025-09-06/noctria_gui/routes/ai_detail.py:26:1
   |
24 | # ───────────────────────────────
25 |
26 | from src.core.path_config import NOCTRIA_GUI_TEMPLATES_DIR, DATA_DIR
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
27 |
28 | # STATS_DIRを絶対パス化（dataディレクトリのstatsフォルダ）
   |

E402 Module level import not at top of file
  --> _graveyard/2025-09-06/noctria_gui/routes/ai_routes.py:21:1
   |
19 |     sys.path.append(str(PROJECT_ROOT))
20 |
21 | from fastapi import APIRouter, Request
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
22 | from fastapi.responses import HTMLResponse
23 | from fastapi.templating import Jinja2Templates
   |

E402 Module level import not at top of file
  --> _graveyard/2025-09-06/noctria_gui/routes/ai_routes.py:22:1
   |
21 | from fastapi import APIRouter, Request
22 | from fastapi.responses import HTMLResponse
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
23 | from fastapi.templating import Jinja2Templates
24 | from src.core.path_config import NOCTRIA_GUI_TEMPLATES_DIR, STATS_DIR
   |

E402 Module level import not at top of file
  --> _graveyard/2025-09-06/noctria_gui/routes/ai_routes.py:23:1
   |
21 | from fastapi import APIRouter, Request
22 | from fastapi.responses import HTMLResponse
23 | from fastapi.templating import Jinja2Templates
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
24 | from src.core.path_config import NOCTRIA_GUI_TEMPLATES_DIR, STATS_DIR
   |

E402 Module level import not at top of file
  --> _graveyard/2025-09-06/noctria_gui/routes/ai_routes.py:24:1
   |
22 | from fastapi.responses import HTMLResponse
23 | from fastapi.templating import Jinja2Templates
24 | from src.core.path_config import NOCTRIA_GUI_TEMPLATES_DIR, STATS_DIR
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
25 |
26 | router = APIRouter(prefix="/ai", tags=["AI"])
   |

F821 Undefined name `chat_manager`
  --> _graveyard/2025-09-06/noctria_gui/routes/chat_api.py:28:5
   |
27 |     # ユーザーメッセージを履歴に追加
28 |     chat_manager.add_message("user", user_msg)
   |     ^^^^^^^^^^^^
29 |
30 |     # OpenAI API へ履歴を渡して応答を取得
   |

F821 Undefined name `chat_manager`
  --> _graveyard/2025-09-06/noctria_gui/routes/chat_api.py:34:22
   |
32 |         lambda: client.chat.completions.create(
33 |             model="gpt-4o",
34 |             messages=chat_manager.get_history()
   |                      ^^^^^^^^^^^^
35 |         )
36 |     )
   |

F821 Undefined name `chat_manager`
  --> _graveyard/2025-09-06/noctria_gui/routes/chat_api.py:40:5
   |
39 |     # アシスタント応答を履歴に追加
40 |     chat_manager.add_message("assistant", assistant_msg)
   |     ^^^^^^^^^^^^
41 |
42 |     return JSONResponse({"reply": assistant_msg})
   |

E402 Module level import not at top of file
  --> _graveyard/2025-09-06/noctria_gui/routes/hermes.py:16:1
   |
14 |     sys.path.insert(0, src_path)  # insertが望ましい（優先度高い）
15 |
16 | from src.hermes.strategy_generator import build_prompt, generate_strategy_code, save_to_file, save_to_db
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
17 |
18 | router = APIRouter()
   |

E701 Multiple statements on one line (colon)
   --> _graveyard/2025-09-06/noctria_gui/routes/king_routes.py:331:60
    |
330 |     # 3) 画面入力（最優先）
331 |     if (v := _maybe_cast(TOTAL_TIMESTEPS, int)) is not None: conf["TOTAL_TIMESTEPS"] = v
    |                                                            ^
332 |     if (v := _maybe_cast(learning_rate, float)) is not None: conf["learning_rate"] = v
333 |     if (v := _maybe_cast(n_steps, int)) is not None: conf["n_steps"] = v
    |

E701 Multiple statements on one line (colon)
   --> _graveyard/2025-09-06/noctria_gui/routes/king_routes.py:332:60
    |
330 |     # 3) 画面入力（最優先）
331 |     if (v := _maybe_cast(TOTAL_TIMESTEPS, int)) is not None: conf["TOTAL_TIMESTEPS"] = v
332 |     if (v := _maybe_cast(learning_rate, float)) is not None: conf["learning_rate"] = v
    |                                                            ^
333 |     if (v := _maybe_cast(n_steps, int)) is not None: conf["n_steps"] = v
334 |     if (v := _maybe_cast(batch_size, int)) is not None: conf["batch_size"] = v
    |

E701 Multiple statements on one line (colon)
   --> _graveyard/2025-09-06/noctria_gui/routes/king_routes.py:333:52
    |
331 |     if (v := _maybe_cast(TOTAL_TIMESTEPS, int)) is not None: conf["TOTAL_TIMESTEPS"] = v
332 |     if (v := _maybe_cast(learning_rate, float)) is not None: conf["learning_rate"] = v
333 |     if (v := _maybe_cast(n_steps, int)) is not None: conf["n_steps"] = v
    |                                                    ^
334 |     if (v := _maybe_cast(batch_size, int)) is not None: conf["batch_size"] = v
335 |     if (v := _maybe_cast(n_epochs, int)) is not None: conf["n_epochs"] = v
    |

E701 Multiple statements on one line (colon)
   --> _graveyard/2025-09-06/noctria_gui/routes/king_routes.py:334:55
    |
332 |     if (v := _maybe_cast(learning_rate, float)) is not None: conf["learning_rate"] = v
333 |     if (v := _maybe_cast(n_steps, int)) is not None: conf["n_steps"] = v
334 |     if (v := _maybe_cast(batch_size, int)) is not None: conf["batch_size"] = v
    |                                                       ^
335 |     if (v := _maybe_cast(n_epochs, int)) is not None: conf["n_epochs"] = v
336 |     if (v := _maybe_cast(gamma, float)) is not None: conf["gamma"] = v
    |

E701 Multiple statements on one line (colon)
   --> _graveyard/2025-09-06/noctria_gui/routes/king_routes.py:335:53
    |
333 |     if (v := _maybe_cast(n_steps, int)) is not None: conf["n_steps"] = v
334 |     if (v := _maybe_cast(batch_size, int)) is not None: conf["batch_size"] = v
335 |     if (v := _maybe_cast(n_epochs, int)) is not None: conf["n_epochs"] = v
    |                                                     ^
336 |     if (v := _maybe_cast(gamma, float)) is not None: conf["gamma"] = v
337 |     if (v := _maybe_cast(gae_lambda, float)) is not None: conf["gae_lambda"] = v
    |

E701 Multiple statements on one line (colon)
   --> _graveyard/2025-09-06/noctria_gui/routes/king_routes.py:336:52
    |
334 |     if (v := _maybe_cast(batch_size, int)) is not None: conf["batch_size"] = v
335 |     if (v := _maybe_cast(n_epochs, int)) is not None: conf["n_epochs"] = v
336 |     if (v := _maybe_cast(gamma, float)) is not None: conf["gamma"] = v
    |                                                    ^
337 |     if (v := _maybe_cast(gae_lambda, float)) is not None: conf["gae_lambda"] = v
338 |     if (v := _maybe_cast(ent_coef, float)) is not None: conf["ent_coef"] = v
    |

E701 Multiple statements on one line (colon)
   --> _graveyard/2025-09-06/noctria_gui/routes/king_routes.py:337:57
    |
335 |     if (v := _maybe_cast(n_epochs, int)) is not None: conf["n_epochs"] = v
336 |     if (v := _maybe_cast(gamma, float)) is not None: conf["gamma"] = v
337 |     if (v := _maybe_cast(gae_lambda, float)) is not None: conf["gae_lambda"] = v
    |                                                         ^
338 |     if (v := _maybe_cast(ent_coef, float)) is not None: conf["ent_coef"] = v
339 |     if (v := _maybe_cast(vf_coef, float)) is not None: conf["vf_coef"] = v
    |

E701 Multiple statements on one line (colon)
   --> _graveyard/2025-09-06/noctria_gui/routes/king_routes.py:338:55
    |
336 |     if (v := _maybe_cast(gamma, float)) is not None: conf["gamma"] = v
337 |     if (v := _maybe_cast(gae_lambda, float)) is not None: conf["gae_lambda"] = v
338 |     if (v := _maybe_cast(ent_coef, float)) is not None: conf["ent_coef"] = v
    |                                                       ^
339 |     if (v := _maybe_cast(vf_coef, float)) is not None: conf["vf_coef"] = v
340 |     if (v := _maybe_cast(max_grad_norm, float)) is not None: conf["max_grad_norm"] = v
    |

E701 Multiple statements on one line (colon)
   --> _graveyard/2025-09-06/noctria_gui/routes/king_routes.py:339:54
    |
337 |     if (v := _maybe_cast(gae_lambda, float)) is not None: conf["gae_lambda"] = v
338 |     if (v := _maybe_cast(ent_coef, float)) is not None: conf["ent_coef"] = v
339 |     if (v := _maybe_cast(vf_coef, float)) is not None: conf["vf_coef"] = v
    |                                                      ^
340 |     if (v := _maybe_cast(max_grad_norm, float)) is not None: conf["max_grad_norm"] = v
341 |     if (v := _maybe_cast(clip_range, float)) is not None: conf["clip_range"] = v
    |

E701 Multiple statements on one line (colon)
   --> _graveyard/2025-09-06/noctria_gui/routes/king_routes.py:340:60
    |
338 |     if (v := _maybe_cast(ent_coef, float)) is not None: conf["ent_coef"] = v
339 |     if (v := _maybe_cast(vf_coef, float)) is not None: conf["vf_coef"] = v
340 |     if (v := _maybe_cast(max_grad_norm, float)) is not None: conf["max_grad_norm"] = v
    |                                                            ^
341 |     if (v := _maybe_cast(clip_range, float)) is not None: conf["clip_range"] = v
342 |     if (v := _maybe_cast(clip_range_vf, float)) is not None: conf["clip_range_vf"] = v
    |

E701 Multiple statements on one line (colon)
   --> _graveyard/2025-09-06/noctria_gui/routes/king_routes.py:341:57
    |
339 |     if (v := _maybe_cast(vf_coef, float)) is not None: conf["vf_coef"] = v
340 |     if (v := _maybe_cast(max_grad_norm, float)) is not None: conf["max_grad_norm"] = v
341 |     if (v := _maybe_cast(clip_range, float)) is not None: conf["clip_range"] = v
    |                                                         ^
342 |     if (v := _maybe_cast(clip_range_vf, float)) is not None: conf["clip_range_vf"] = v
343 |     if (v := _maybe_cast(seed, int)) is not None: conf["seed"] = v
    |

E701 Multiple statements on one line (colon)
   --> _graveyard/2025-09-06/noctria_gui/routes/king_routes.py:342:60
    |
340 |     if (v := _maybe_cast(max_grad_norm, float)) is not None: conf["max_grad_norm"] = v
341 |     if (v := _maybe_cast(clip_range, float)) is not None: conf["clip_range"] = v
342 |     if (v := _maybe_cast(clip_range_vf, float)) is not None: conf["clip_range_vf"] = v
    |                                                            ^
343 |     if (v := _maybe_cast(seed, int)) is not None: conf["seed"] = v
344 |     if (v := _maybe_cast(eval_n_episodes, int)) is not None: conf["eval_n_episodes"] = v
    |

E701 Multiple statements on one line (colon)
   --> _graveyard/2025-09-06/noctria_gui/routes/king_routes.py:343:49
    |
341 |     if (v := _maybe_cast(clip_range, float)) is not None: conf["clip_range"] = v
342 |     if (v := _maybe_cast(clip_range_vf, float)) is not None: conf["clip_range_vf"] = v
343 |     if (v := _maybe_cast(seed, int)) is not None: conf["seed"] = v
    |                                                 ^
344 |     if (v := _maybe_cast(eval_n_episodes, int)) is not None: conf["eval_n_episodes"] = v
345 |     conf["eval_deterministic"] = _to_bool(eval_deterministic, True)
    |

E701 Multiple statements on one line (colon)
   --> _graveyard/2025-09-06/noctria_gui/routes/king_routes.py:344:60
    |
342 |     if (v := _maybe_cast(clip_range_vf, float)) is not None: conf["clip_range_vf"] = v
343 |     if (v := _maybe_cast(seed, int)) is not None: conf["seed"] = v
344 |     if (v := _maybe_cast(eval_n_episodes, int)) is not None: conf["eval_n_episodes"] = v
    |                                                            ^
345 |     conf["eval_deterministic"] = _to_bool(eval_deterministic, True)
    |

F841 Local variable `result` is assigned to but never used
  --> _graveyard/2025-09-06/noctria_gui/routes/logs_routes.py:34:9
   |
33 |     try:
34 |         result = subprocess.run(
   |         ^^^^^^
35 |             ["python3", str(script_path)],
36 |             capture_output=True,
   |
help: Remove assignment to unused variable `result`

E701 Multiple statements on one line (colon)
  --> _graveyard/2025-09-06/noctria_gui/routes/pdca_api_details.py:33:13
   |
32 | def _parse_date(s: Optional[str]) -> Optional[date]:
33 |     if not s: return None
   |             ^
34 |     return date.fromisoformat(s)
   |

F821 Undefined name `logger`
  --> _graveyard/2025-09-06/noctria_gui/routes/statistics_detail.py:40:17
   |
38 |             except Exception as e:
39 |                 # 他のエラーはログに記録してスキップ
40 |                 logger.error(f"ログファイル {file} の読み込みに失敗しました: {e}")
   |                 ^^^^^^
41 |                 continue
42 |     return logs
   |

E701 Multiple statements on one line (colon)
   --> _graveyard/2025-09-06/noctria_gui/routes/strategy_detail.py:192:39
    |
190 |                 if hasattr(obj, "compute_kpis"):
191 |                     k = obj.compute_kpis()
192 |                     if is_dataclass(k): k = asdict(k)
    |                                       ^
193 |                     if not isinstance(k, dict): k = dict(k)
194 |                     return k
    |

E701 Multiple statements on one line (colon)
   --> _graveyard/2025-09-06/noctria_gui/routes/strategy_detail.py:193:47
    |
191 |                     k = obj.compute_kpis()
192 |                     if is_dataclass(k): k = asdict(k)
193 |                     if not isinstance(k, dict): k = dict(k)
    |                                               ^
194 |                     return k
195 |             except Exception:
    |

E701 Multiple statements on one line (colon)
   --> _graveyard/2025-09-06/noctria_gui/routes/strategy_detail.py:203:35
    |
201 |             try:
202 |                 k = fn()
203 |                 if is_dataclass(k): k = asdict(k)
    |                                   ^
204 |                 if not isinstance(k, dict): k = dict(k)
205 |                 return k
    |

E701 Multiple statements on one line (colon)
   --> _graveyard/2025-09-06/noctria_gui/routes/strategy_detail.py:204:43
    |
202 |                 k = fn()
203 |                 if is_dataclass(k): k = asdict(k)
204 |                 if not isinstance(k, dict): k = dict(k)
    |                                           ^
205 |                 return k
206 |             except Exception:
    |

E701 Multiple statements on one line (colon)
   --> _graveyard/2025-09-06/noctria_gui/routes/strategy_detail.py:215:35
    |
213 |             if isinstance(ret, tuple) and len(ret) >= 1:
214 |                 k = ret[0]
215 |                 if is_dataclass(k): k = asdict(k)
    |                                   ^
216 |                 if not isinstance(k, dict): k = dict(k)
217 |                 return k
    |

E701 Multiple statements on one line (colon)
   --> _graveyard/2025-09-06/noctria_gui/routes/strategy_detail.py:216:43
    |
214 |                 k = ret[0]
215 |                 if is_dataclass(k): k = asdict(k)
216 |                 if not isinstance(k, dict): k = dict(k)
    |                                           ^
217 |                 return k
218 |         except Exception:
    |

E702 Multiple statements on one line (semicolon)
   --> _graveyard/2025-09-06/noctria_gui/routes/strategy_detail.py:289:30
    |
287 |             tags = s.get("tags") or []
288 |             if any(t in (tags or []) for t in current_tags):
289 |                 rel.append(s); seen.add(name)
    |                              ^
290 |             if len(rel) >= 4:
291 |                 break
    |

E701 Multiple statements on one line (colon)
  --> _graveyard/2025-09-06/noctria_gui/routes/strategy_heatmap.py:60:28
   |
59 |             date_str = data.get("promoted_at") or data.get("timestamp")
60 |             if not date_str: continue
   |                            ^
61 |             
62 |             date_obj = datetime.fromisoformat(date_str.replace("Z", "+00:00"))
   |

E701 Multiple statements on one line (colon)
  --> _graveyard/2025-09-06/noctria_gui/routes/strategy_heatmap.py:64:64
   |
62 |             date_obj = datetime.fromisoformat(date_str.replace("Z", "+00:00"))
63 |
64 |             if from_date and date_obj.date() < from_date.date(): continue
   |                                                                ^
65 |             if to_date and date_obj.date() > to_date.date(): continue
   |

E701 Multiple statements on one line (colon)
  --> _graveyard/2025-09-06/noctria_gui/routes/strategy_heatmap.py:65:60
   |
64 |             if from_date and date_obj.date() < from_date.date(): continue
65 |             if to_date and date_obj.date() > to_date.date(): continue
   |                                                            ^
66 |
67 |             name = data.get("strategy", "").strip()
   |

E701 Multiple statements on one line (colon)
  --> _graveyard/2025-09-06/noctria_gui/routes/strategy_heatmap.py:68:24
   |
67 |             name = data.get("strategy", "").strip()
68 |             if not name: continue
   |                        ^
69 |             if strategy_keyword and strategy_keyword.lower() not in name.lower(): continue
   |

E701 Multiple statements on one line (colon)
  --> _graveyard/2025-09-06/noctria_gui/routes/strategy_heatmap.py:69:81
   |
67 |             name = data.get("strategy", "").strip()
68 |             if not name: continue
69 |             if strategy_keyword and strategy_keyword.lower() not in name.lower(): continue
   |                                                                                 ^
70 |
71 |             score = data.get("score", {})
   |

E701 Multiple statements on one line (colon)
  --> _graveyard/2025-09-06/noctria_gui/routes/strategy_heatmap.py:76:45
   |
75 |             stats[name]["count"] += 1
76 |             if isinstance(win, (int, float)): stats[name]["win_rates"].append(win)
   |                                             ^
77 |             if isinstance(dd, (int, float)): stats[name]["drawdowns"].append(dd)
   |

E701 Multiple statements on one line (colon)
  --> _graveyard/2025-09-06/noctria_gui/routes/strategy_heatmap.py:77:44
   |
75 |             stats[name]["count"] += 1
76 |             if isinstance(win, (int, float)): stats[name]["win_rates"].append(win)
77 |             if isinstance(dd, (int, float)): stats[name]["drawdowns"].append(dd)
   |                                            ^
78 |
79 |         except (json.JSONDecodeError, KeyError) as e:
   |

F821 Undefined name `Path`
   --> _graveyard/2025-09-06/src/core/meta_ai.py:121:12
    |
119 |     # 実際のパスに合わせて要調整
120 |     df_path = "data/sample_test_data.csv"
121 |     if not Path(df_path).exists():
    |            ^^^^
122 |         # ダミーデータ作成
123 |         dates = pd.date_range(start="2024-01-01", periods=200)
    |

F841 Local variable `dd_diff` is assigned to but never used
  --> _graveyard/2025-09-06/src/core/pdca_log_parser.py:94:9
   |
92 |         avg_dd_before = sum(dd_before_vals) / len(group) if group else 0.0
93 |         avg_dd_after = sum(dd_after_vals) / len(group) if group else 0.0
94 |         dd_diff = round(avg_dd_before - avg_dd_after, 2)
   |         ^^^^^^^
95 |
96 |         adopted = any(g["status"] == "adopted" for g in group)
   |
help: Remove assignment to unused variable `dd_diff`

F811 Redefinition of unused `simulate_strategy_adjusted` from line 17
  --> _graveyard/2025-09-06/src/core/strategy_optimizer_adjusted.py:51:5
   |
49 |     return risk_control.current_capital
50 |
51 | def simulate_strategy_adjusted(strategy_path: str, market_data: pd.DataFrame) -> dict:
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ `simulate_strategy_adjusted` redefined here
52 |     try:
53 |         namespace = {}
   |
  ::: _graveyard/2025-09-06/src/core/strategy_optimizer_adjusted.py:17:5
   |
15 |         return None
16 |
17 | def simulate_strategy_adjusted(prices, entry_threshold, exit_threshold, initial_capital=1000000):
   |     -------------------------- previous definition of `simulate_strategy_adjusted` here
18 |     risk_control = RiskControl(initial_capital)
19 |     position = 0
   |
help: Remove definition: `simulate_strategy_adjusted`

F841 Local variable `state` is assigned to but never used
  --> _graveyard/2025-09-06/src/core/task_scheduler.py:21:9
   |
19 |         """市場データをAIへ適用し、最適戦略を動的選定"""
20 |
21 |         state = np.array([market_data["price_change"], market_data["volatility"], market_data["liquidity_index"], market_data["news_se…
   |         ^^^^^
22 |         strategy_scores = {}
   |
help: Remove assignment to unused variable `state`

F821 Undefined name `initial_capital`
  --> _graveyard/2025-09-06/src/execution/simulate_official_strategy.py:64:25
   |
62 |         capital = self.initial_capital
63 |         position = 0  # 0: No position, 1: Long, -1: Short
64 |         equity_curve = [initial_capital]
   |                         ^^^^^^^^^^^^^^^
65 |
66 |         for i in range(1, len(self.data)):
   |

F821 Undefined name `json`
   --> _graveyard/2025-09-06/src/execution/simulate_official_strategy.py:154:13
    |
153 |         with open(report_path.with_suffix('.json'), 'w') as f:
154 |             json.dump(metrics, f, indent=2)
    |             ^^^^
155 |         logger.info(f"📋 パフォーマンスレポートを保存しました: {report_path.with_suffix('.json')}")
    |

F821 Undefined name `datetime`
   --> _graveyard/2025-09-06/src/execution/simulate_official_strategy.py:188:55
    |
186 |     logger.info(f"🏆 シミュレーション結果: {metrics}")
187 |     
188 |     report_file_path = log_dir / f"simulation_report_{datetime.now().strftime('%Y%m%d_%H%M%S')}"
    |                                                       ^^^^^^^^
189 |     Backtester.generate_report(equity_curve, metrics, report_file_path)
    |

E402 Module level import not at top of file
 --> _graveyard/2025-09-06/src/execution/trade_analysis.py:3:1
  |
1 | print("=== Trade Analysis Script Started ===")
2 |
3 | import pandas as pd
  | ^^^^^^^^^^^^^^^^^^^
4 | import matplotlib.pyplot as plt
5 | import glob
  |

E402 Module level import not at top of file
 --> _graveyard/2025-09-06/src/execution/trade_analysis.py:4:1
  |
3 | import pandas as pd
4 | import matplotlib.pyplot as plt
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
5 | import glob
6 | import os
  |

E402 Module level import not at top of file
 --> _graveyard/2025-09-06/src/execution/trade_analysis.py:5:1
  |
3 | import pandas as pd
4 | import matplotlib.pyplot as plt
5 | import glob
  | ^^^^^^^^^^^
6 | import os
  |

E402 Module level import not at top of file
 --> _graveyard/2025-09-06/src/execution/trade_analysis.py:6:1
  |
4 | import matplotlib.pyplot as plt
5 | import glob
6 | import os
  | ^^^^^^^^^
7 |
8 | print("[INFO] Checking logs directory for trade history CSVs...")
  |

invalid-syntax: Got unexpected token `
 --> _graveyard/2025-09-06/src/plan_data/kpi_minidemo.py:2:1
  |
1 | #### 📂 src/plan_data/kpi_minidemo.py
2 | ```python
  | ^
3 | # -*- coding: utf-8 -*-
4 | """
  |

invalid-syntax: Got unexpected token `
 --> _graveyard/2025-09-06/src/plan_data/kpi_minidemo.py:2:2
  |
1 | #### 📂 src/plan_data/kpi_minidemo.py
2 | ```python
  |  ^
3 | # -*- coding: utf-8 -*-
4 | """
  |

invalid-syntax: Got unexpected token `
 --> _graveyard/2025-09-06/src/plan_data/kpi_minidemo.py:2:3
  |
1 | #### 📂 src/plan_data/kpi_minidemo.py
2 | ```python
  |   ^
3 | # -*- coding: utf-8 -*-
4 | """
  |

invalid-syntax: Got unexpected token `
  --> _graveyard/2025-09-06/src/plan_data/kpi_minidemo.py:59:1
   |
57 |     for k, v in kpis.items():
58 |         print(f"  {k}: {v}")
59 | ```
   | ^
60 |
61 | ---
   |

invalid-syntax: Got unexpected token `
  --> _graveyard/2025-09-06/src/plan_data/kpi_minidemo.py:59:2
   |
57 |     for k, v in kpis.items():
58 |         print(f"  {k}: {v}")
59 | ```
   |  ^
60 |
61 | ---
   |

invalid-syntax: Got unexpected token `
  --> _graveyard/2025-09-06/src/plan_data/kpi_minidemo.py:59:3
   |
57 |     for k, v in kpis.items():
58 |         print(f"  {k}: {v}")
59 | ```
   |   ^
60 |
61 | ---
   |

invalid-syntax: Expected a statement
  --> _graveyard/2025-09-06/src/plan_data/kpi_minidemo.py:59:4
   |
57 |     for k, v in kpis.items():
58 |         print(f"  {k}: {v}")
59 | ```
   |    ^
60 |
61 | ---
   |

invalid-syntax: Expected an expression
  --> _graveyard/2025-09-06/src/plan_data/kpi_minidemo.py:61:4
   |
59 | ```
60 |
61 | ---
   |    ^
   |

F403 `from core.path_config import *` used; unable to detect undefined names
 --> _graveyard/2025-09-06/src/scripts/meta_ai_tensorboard_train.py:1:1
  |
1 | from core.path_config import *
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2 | #!/usr/bin/env python3
3 | # coding: utf-8
  |

F821 Undefined name `pr`
  --> _graveyard/2025-09-06/src/tools/dependency_analyzer.py:46:5
   |
45 | def main():
46 |     pr
   |     ^^
   |

F601 Dictionary key literal `'from strategies.noctus_sentinella import'` repeated
  --> _graveyard/2025-09-06/src/tools/fix_import_paths.py:14:5
   |
12 |     'from scripts.apply_best_params_to_metaai import': 'from scripts.apply_best_params_to_metaai import',
13 |     # 念のため strategies から直接も置換
14 |     'from strategies.noctus_sentinella import': 'from strategies.noctus_sentinella import',
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
15 | }
   |
help: Remove repeated key literal `'from strategies.noctus_sentinella import'`

E741 Ambiguous variable name: `l`
  --> _graveyard/2025-09-06/src/tools/fix_path_violations.py:49:60
   |
47 |     if modified:
48 |         # import path_config が含まれていなければ追加
49 |         if not any("from core.path_config import" in l for l in new_lines):
   |                                                            ^
50 |             new_lines.insert(0, IMPORT_LINE + "\n")
51 |         with open(file_path, "w", encoding="utf-8") as f:
   |

F841 Local variable `keep` is assigned to but never used
  --> _graveyard/2025-09-06/src/tools/generate_cleanup_script.py:34:13
   |
32 |             # 原則として1つを残し、他は削除（要レビュー）
33 |             paths = issue["paths"]
34 |             keep = paths[0]
   |             ^^^^
35 |             for path in paths[1:]:
36 |                 cmds.append(f"# ⚠️ 重複: '{issue['name']}' → 一方を残す\n")
   |
help: Remove assignment to unused variable `keep`

E722 Do not use bare `except`
  --> _graveyard/2025-09-06/src/tools/push_official_strategy_to_github.py:41:9
   |
39 |                 if isinstance(data, dict):
40 |                     logs.append((file, data))
41 |         except:
   |         ^^^^^^
42 |             continue
43 |     return logs
   |

E402 Module level import not at top of file
  --> _graveyard/2025-09-06/src/tools/show_timeline.py:52:1
   |
51 | # We reuse observability helpers (for ensure_* only).
52 | from plan_data.observability import ensure_tables, ensure_views, refresh_materialized  # type: ignore
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |

E402 Module level import not at top of file
  --> _graveyard/2025-09-06/src/tools/structure_refactor.py:14:1
   |
13 | # === 各種モジュールインポート ===
14 | from tools.hardcoded_path_replacer import replace_paths
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
15 | from tools.structure_auditor import audit_structure  # ← 明示的に audit_structure を呼ぶ
   |

E402 Module level import not at top of file
  --> _graveyard/2025-09-06/src/tools/structure_refactor.py:15:1
   |
13 | # === 各種モジュールインポート ===
14 | from tools.hardcoded_path_replacer import replace_paths
15 | from tools.structure_auditor import audit_structure  # ← 明示的に audit_structure を呼ぶ
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
16 |
17 | # === 対象ディレクトリ（v3.0構成）===
   |

F841 Local variable `entry_price` is assigned to but never used
  --> _graveyard/2025-09-06/src/veritas/generate/templates/strategy_template.py:23:13
   |
21 |         if position == 0 and rsi > 50 and spread < 2:
22 |             position = capital / price
23 |             entry_price = price
   |             ^^^^^^^^^^^
24 |
25 |         elif position > 0 and (rsi < 50 or spread > 2):
   |
help: Remove assignment to unused variable `entry_price`

E402 Module level import not at top of file
  --> _graveyard/2025-09-06/src/veritas/strategy_generator.py:11:1
   |
 9 |     sys.path.insert(0, str(src_path))
10 |
11 | import os
   | ^^^^^^^^^
12 | import torch
13 | import psycopg2
   |

E402 Module level import not at top of file
  --> _graveyard/2025-09-06/src/veritas/strategy_generator.py:12:1
   |
11 | import os
12 | import torch
   | ^^^^^^^^^^^^
13 | import psycopg2
14 | from datetime import datetime
   |

E402 Module level import not at top of file
  --> _graveyard/2025-09-06/src/veritas/strategy_generator.py:13:1
   |
11 | import os
12 | import torch
13 | import psycopg2
   | ^^^^^^^^^^^^^^^
14 | from datetime import datetime
   |

E402 Module level import not at top of file
  --> _graveyard/2025-09-06/src/veritas/strategy_generator.py:14:1
   |
12 | import torch
13 | import psycopg2
14 | from datetime import datetime
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
15 |
16 | from core.path_config import VERITAS_MODELS_DIR, STRATEGIES_DIR, LOGS_DIR
   |

E402 Module level import not at top of file
  --> _graveyard/2025-09-06/src/veritas/strategy_generator.py:16:1
   |
14 | from datetime import datetime
15 |
16 | from core.path_config import VERITAS_MODELS_DIR, STRATEGIES_DIR, LOGS_DIR
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
17 | from core.logger import setup_logger
   |

E402 Module level import not at top of file
  --> _graveyard/2025-09-06/src/veritas/strategy_generator.py:17:1
   |
16 | from core.path_config import VERITAS_MODELS_DIR, STRATEGIES_DIR, LOGS_DIR
17 | from core.logger import setup_logger
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
18 |
19 | from veritas.models.ml_model.simple_model import SimpleModel
   |

E402 Module level import not at top of file
  --> _graveyard/2025-09-06/src/veritas/strategy_generator.py:19:1
   |
17 | from core.logger import setup_logger
18 |
19 | from veritas.models.ml_model.simple_model import SimpleModel
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
20 |
21 | logger = setup_logger("VeritasGenerator", LOGS_DIR / "veritas" / "generator.log")
   |

F841 Local variable `model` is assigned to but never used
  --> _graveyard/2025-09-06/src/veritas/strategy_generator.py:68:9
   |
66 |     """
67 |     try:
68 |         model = load_ml_model()
   |         ^^^^^
69 |         # TODO: 入力ベクトル・推論ロジックを本番仕様で置き換え
70 |         import random
   |
help: Remove assignment to unused variable `model`

F404 `from __future__` imports must occur at the beginning of the file
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/airflow_docker/dags/noctria_act_pipeline.py:157:1
    |
155 | """
156 |
157 | from __future__ import annotations
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
158 | import os
159 | import json
    |

E402 Module level import not at top of file
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/airflow_docker/dags/noctria_act_pipeline.py:157:1
    |
155 | """
156 |
157 | from __future__ import annotations
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
158 | import os
159 | import json
    |

E402 Module level import not at top of file
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/airflow_docker/dags/noctria_act_pipeline.py:158:1
    |
157 | from __future__ import annotations
158 | import os
    | ^^^^^^^^^
159 | import json
160 | from glob import glob
    |

E402 Module level import not at top of file
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/airflow_docker/dags/noctria_act_pipeline.py:159:1
    |
157 | from __future__ import annotations
158 | import os
159 | import json
    | ^^^^^^^^^^^
160 | from glob import glob
161 | from typing import Dict, Any, List
    |

E402 Module level import not at top of file
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/airflow_docker/dags/noctria_act_pipeline.py:160:1
    |
158 | import os
159 | import json
160 | from glob import glob
    | ^^^^^^^^^^^^^^^^^^^^^
161 | from typing import Dict, Any, List
162 | from datetime import datetime
    |

E402 Module level import not at top of file
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/airflow_docker/dags/noctria_act_pipeline.py:161:1
    |
159 | import json
160 | from glob import glob
161 | from typing import Dict, Any, List
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
162 | from datetime import datetime
    |

E402 Module level import not at top of file
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/airflow_docker/dags/noctria_act_pipeline.py:162:1
    |
160 | from glob import glob
161 | from typing import Dict, Any, List
162 | from datetime import datetime
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
163 |
164 | PROJECT_ROOT = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
    |

F404 `from __future__` imports must occur at the beginning of the file
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/airflow_docker/dags/noctria_act_pipeline.py:304:1
    |
302 | """
303 |
304 | from __future__ import annotations
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
305 | import os
306 | from datetime import datetime
    |

E402 Module level import not at top of file
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/airflow_docker/dags/noctria_act_pipeline.py:304:1
    |
302 | """
303 |
304 | from __future__ import annotations
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
305 | import os
306 | from datetime import datetime
    |

E402 Module level import not at top of file
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/airflow_docker/dags/noctria_act_pipeline.py:305:1
    |
304 | from __future__ import annotations
305 | import os
    | ^^^^^^^^^
306 | from datetime import datetime
    |

E402 Module level import not at top of file
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/airflow_docker/dags/noctria_act_pipeline.py:306:1
    |
304 | from __future__ import annotations
305 | import os
306 | from datetime import datetime
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
307 |
308 | PROJECT_ROOT = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
    |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/airflow_docker/dags/train_prometheus_obs8_dag.py:41:1
   |
39 |         sys.path.append(p)
40 |
41 | from airflow import DAG
   | ^^^^^^^^^^^^^^^^^^^^^^^
42 | from airflow.operators.python import PythonOperator
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/airflow_docker/dags/train_prometheus_obs8_dag.py:42:1
   |
41 | from airflow import DAG
42 | from airflow.operators.python import PythonOperator
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/airflow_docker/dags/veritas_eval_dag.py:24:1
   |
22 |     sys.path.insert(0, project_root)
23 |
24 | from src.core.path_config import STRATEGIES_VERITAS_GENERATED_DIR
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
25 | from src.core.strategy_evaluator import evaluate_strategy, log_evaluation_result
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/airflow_docker/dags/veritas_eval_dag.py:25:1
   |
24 | from src.core.path_config import STRATEGIES_VERITAS_GENERATED_DIR
25 | from src.core.strategy_evaluator import evaluate_strategy, log_evaluation_result
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
26 |
27 | default_args = {
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/airflow_docker/dags/veritas_pdca_dag.py:24:1
   |
23 | # --- Veritas戦略関連スクリプトのインポート ---
24 | from src.veritas.veritas_generate_strategy import main as generate_main
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
25 | from src.veritas.evaluate_veritas import main as evaluate_main
26 | from src.scripts.github_push_adopted_strategies import main as push_main
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/airflow_docker/dags/veritas_pdca_dag.py:25:1
   |
23 | # --- Veritas戦略関連スクリプトのインポート ---
24 | from src.veritas.veritas_generate_strategy import main as generate_main
25 | from src.veritas.evaluate_veritas import main as evaluate_main
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
26 | from src.scripts.github_push_adopted_strategies import main as push_main
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/airflow_docker/dags/veritas_pdca_dag.py:26:1
   |
24 | from src.veritas.veritas_generate_strategy import main as generate_main
25 | from src.veritas.evaluate_veritas import main as evaluate_main
26 | from src.scripts.github_push_adopted_strategies import main as push_main
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
27 |
28 | # === DAG内ヘルパー関数 ===
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/airflow_docker/dags/veritas_to_order_dag.py:25:1
   |
23 | # ✅ 修正: 各スクリプトからメインの処理関数をインポート
24 | # 存在しないモジュールを削除し、必要なものを正しくインポート
25 | from src.veritas.evaluate_veritas import main as evaluate_main
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
26 | # from src.veritas.promote_accepted_strategies import main as promote_main # このスクリプトは存在しない可能性
27 | from src.execution.generate_order_json import main as generate_order_main
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/airflow_docker/dags/veritas_to_order_dag.py:27:1
   |
25 | from src.veritas.evaluate_veritas import main as evaluate_main
26 | # from src.veritas.promote_accepted_strategies import main as promote_main # このスクリプトは存在しない可能性
27 | from src.execution.generate_order_json import main as generate_order_main
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
28 |
29 | # === DAG基本設定 ===
   |

F841 Local variable `git_ok` is assigned to but never used
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/noctria_gui/routes/adoptions.py:78:13
   |
76 |             git_ok = True
77 |         except Exception:
78 |             git_ok = False
   |             ^^^^^^
79 |
80 |     idx = _build_registry_index()
   |
help: Remove assignment to unused variable `git_ok`

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/noctria_gui/routes/ai_detail.py:26:1
   |
24 | # ───────────────────────────────
25 |
26 | from src.core.path_config import NOCTRIA_GUI_TEMPLATES_DIR, DATA_DIR
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
27 |
28 | # STATS_DIRを絶対パス化（dataディレクトリのstatsフォルダ）
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/noctria_gui/routes/ai_routes.py:21:1
   |
19 |     sys.path.append(str(PROJECT_ROOT))
20 |
21 | from fastapi import APIRouter, Request
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
22 | from fastapi.responses import HTMLResponse
23 | from fastapi.templating import Jinja2Templates
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/noctria_gui/routes/ai_routes.py:22:1
   |
21 | from fastapi import APIRouter, Request
22 | from fastapi.responses import HTMLResponse
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
23 | from fastapi.templating import Jinja2Templates
24 | from src.core.path_config import NOCTRIA_GUI_TEMPLATES_DIR, STATS_DIR
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/noctria_gui/routes/ai_routes.py:23:1
   |
21 | from fastapi import APIRouter, Request
22 | from fastapi.responses import HTMLResponse
23 | from fastapi.templating import Jinja2Templates
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
24 | from src.core.path_config import NOCTRIA_GUI_TEMPLATES_DIR, STATS_DIR
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/noctria_gui/routes/ai_routes.py:24:1
   |
22 | from fastapi.responses import HTMLResponse
23 | from fastapi.templating import Jinja2Templates
24 | from src.core.path_config import NOCTRIA_GUI_TEMPLATES_DIR, STATS_DIR
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
25 |
26 | router = APIRouter(prefix="/ai", tags=["AI"])
   |

F821 Undefined name `chat_manager`
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/noctria_gui/routes/chat_api.py:28:5
   |
27 |     # ユーザーメッセージを履歴に追加
28 |     chat_manager.add_message("user", user_msg)
   |     ^^^^^^^^^^^^
29 |
30 |     # OpenAI API へ履歴を渡して応答を取得
   |

F821 Undefined name `chat_manager`
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/noctria_gui/routes/chat_api.py:34:22
   |
32 |         lambda: client.chat.completions.create(
33 |             model="gpt-4o",
34 |             messages=chat_manager.get_history()
   |                      ^^^^^^^^^^^^
35 |         )
36 |     )
   |

F821 Undefined name `chat_manager`
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/noctria_gui/routes/chat_api.py:40:5
   |
39 |     # アシスタント応答を履歴に追加
40 |     chat_manager.add_message("assistant", assistant_msg)
   |     ^^^^^^^^^^^^
41 |
42 |     return JSONResponse({"reply": assistant_msg})
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/noctria_gui/routes/hermes.py:16:1
   |
14 |     sys.path.insert(0, src_path)  # insertが望ましい（優先度高い）
15 |
16 | from src.hermes.strategy_generator import build_prompt, generate_strategy_code, save_to_file, save_to_db
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
17 |
18 | router = APIRouter()
   |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/noctria_gui/routes/king_routes.py:331:60
    |
330 |     # 3) 画面入力（最優先）
331 |     if (v := _maybe_cast(TOTAL_TIMESTEPS, int)) is not None: conf["TOTAL_TIMESTEPS"] = v
    |                                                            ^
332 |     if (v := _maybe_cast(learning_rate, float)) is not None: conf["learning_rate"] = v
333 |     if (v := _maybe_cast(n_steps, int)) is not None: conf["n_steps"] = v
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/noctria_gui/routes/king_routes.py:332:60
    |
330 |     # 3) 画面入力（最優先）
331 |     if (v := _maybe_cast(TOTAL_TIMESTEPS, int)) is not None: conf["TOTAL_TIMESTEPS"] = v
332 |     if (v := _maybe_cast(learning_rate, float)) is not None: conf["learning_rate"] = v
    |                                                            ^
333 |     if (v := _maybe_cast(n_steps, int)) is not None: conf["n_steps"] = v
334 |     if (v := _maybe_cast(batch_size, int)) is not None: conf["batch_size"] = v
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/noctria_gui/routes/king_routes.py:333:52
    |
331 |     if (v := _maybe_cast(TOTAL_TIMESTEPS, int)) is not None: conf["TOTAL_TIMESTEPS"] = v
332 |     if (v := _maybe_cast(learning_rate, float)) is not None: conf["learning_rate"] = v
333 |     if (v := _maybe_cast(n_steps, int)) is not None: conf["n_steps"] = v
    |                                                    ^
334 |     if (v := _maybe_cast(batch_size, int)) is not None: conf["batch_size"] = v
335 |     if (v := _maybe_cast(n_epochs, int)) is not None: conf["n_epochs"] = v
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/noctria_gui/routes/king_routes.py:334:55
    |
332 |     if (v := _maybe_cast(learning_rate, float)) is not None: conf["learning_rate"] = v
333 |     if (v := _maybe_cast(n_steps, int)) is not None: conf["n_steps"] = v
334 |     if (v := _maybe_cast(batch_size, int)) is not None: conf["batch_size"] = v
    |                                                       ^
335 |     if (v := _maybe_cast(n_epochs, int)) is not None: conf["n_epochs"] = v
336 |     if (v := _maybe_cast(gamma, float)) is not None: conf["gamma"] = v
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/noctria_gui/routes/king_routes.py:335:53
    |
333 |     if (v := _maybe_cast(n_steps, int)) is not None: conf["n_steps"] = v
334 |     if (v := _maybe_cast(batch_size, int)) is not None: conf["batch_size"] = v
335 |     if (v := _maybe_cast(n_epochs, int)) is not None: conf["n_epochs"] = v
    |                                                     ^
336 |     if (v := _maybe_cast(gamma, float)) is not None: conf["gamma"] = v
337 |     if (v := _maybe_cast(gae_lambda, float)) is not None: conf["gae_lambda"] = v
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/noctria_gui/routes/king_routes.py:336:52
    |
334 |     if (v := _maybe_cast(batch_size, int)) is not None: conf["batch_size"] = v
335 |     if (v := _maybe_cast(n_epochs, int)) is not None: conf["n_epochs"] = v
336 |     if (v := _maybe_cast(gamma, float)) is not None: conf["gamma"] = v
    |                                                    ^
337 |     if (v := _maybe_cast(gae_lambda, float)) is not None: conf["gae_lambda"] = v
338 |     if (v := _maybe_cast(ent_coef, float)) is not None: conf["ent_coef"] = v
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/noctria_gui/routes/king_routes.py:337:57
    |
335 |     if (v := _maybe_cast(n_epochs, int)) is not None: conf["n_epochs"] = v
336 |     if (v := _maybe_cast(gamma, float)) is not None: conf["gamma"] = v
337 |     if (v := _maybe_cast(gae_lambda, float)) is not None: conf["gae_lambda"] = v
    |                                                         ^
338 |     if (v := _maybe_cast(ent_coef, float)) is not None: conf["ent_coef"] = v
339 |     if (v := _maybe_cast(vf_coef, float)) is not None: conf["vf_coef"] = v
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/noctria_gui/routes/king_routes.py:338:55
    |
336 |     if (v := _maybe_cast(gamma, float)) is not None: conf["gamma"] = v
337 |     if (v := _maybe_cast(gae_lambda, float)) is not None: conf["gae_lambda"] = v
338 |     if (v := _maybe_cast(ent_coef, float)) is not None: conf["ent_coef"] = v
    |                                                       ^
339 |     if (v := _maybe_cast(vf_coef, float)) is not None: conf["vf_coef"] = v
340 |     if (v := _maybe_cast(max_grad_norm, float)) is not None: conf["max_grad_norm"] = v
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/noctria_gui/routes/king_routes.py:339:54
    |
337 |     if (v := _maybe_cast(gae_lambda, float)) is not None: conf["gae_lambda"] = v
338 |     if (v := _maybe_cast(ent_coef, float)) is not None: conf["ent_coef"] = v
339 |     if (v := _maybe_cast(vf_coef, float)) is not None: conf["vf_coef"] = v
    |                                                      ^
340 |     if (v := _maybe_cast(max_grad_norm, float)) is not None: conf["max_grad_norm"] = v
341 |     if (v := _maybe_cast(clip_range, float)) is not None: conf["clip_range"] = v
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/noctria_gui/routes/king_routes.py:340:60
    |
338 |     if (v := _maybe_cast(ent_coef, float)) is not None: conf["ent_coef"] = v
339 |     if (v := _maybe_cast(vf_coef, float)) is not None: conf["vf_coef"] = v
340 |     if (v := _maybe_cast(max_grad_norm, float)) is not None: conf["max_grad_norm"] = v
    |                                                            ^
341 |     if (v := _maybe_cast(clip_range, float)) is not None: conf["clip_range"] = v
342 |     if (v := _maybe_cast(clip_range_vf, float)) is not None: conf["clip_range_vf"] = v
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/noctria_gui/routes/king_routes.py:341:57
    |
339 |     if (v := _maybe_cast(vf_coef, float)) is not None: conf["vf_coef"] = v
340 |     if (v := _maybe_cast(max_grad_norm, float)) is not None: conf["max_grad_norm"] = v
341 |     if (v := _maybe_cast(clip_range, float)) is not None: conf["clip_range"] = v
    |                                                         ^
342 |     if (v := _maybe_cast(clip_range_vf, float)) is not None: conf["clip_range_vf"] = v
343 |     if (v := _maybe_cast(seed, int)) is not None: conf["seed"] = v
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/noctria_gui/routes/king_routes.py:342:60
    |
340 |     if (v := _maybe_cast(max_grad_norm, float)) is not None: conf["max_grad_norm"] = v
341 |     if (v := _maybe_cast(clip_range, float)) is not None: conf["clip_range"] = v
342 |     if (v := _maybe_cast(clip_range_vf, float)) is not None: conf["clip_range_vf"] = v
    |                                                            ^
343 |     if (v := _maybe_cast(seed, int)) is not None: conf["seed"] = v
344 |     if (v := _maybe_cast(eval_n_episodes, int)) is not None: conf["eval_n_episodes"] = v
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/noctria_gui/routes/king_routes.py:343:49
    |
341 |     if (v := _maybe_cast(clip_range, float)) is not None: conf["clip_range"] = v
342 |     if (v := _maybe_cast(clip_range_vf, float)) is not None: conf["clip_range_vf"] = v
343 |     if (v := _maybe_cast(seed, int)) is not None: conf["seed"] = v
    |                                                 ^
344 |     if (v := _maybe_cast(eval_n_episodes, int)) is not None: conf["eval_n_episodes"] = v
345 |     conf["eval_deterministic"] = _to_bool(eval_deterministic, True)
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/noctria_gui/routes/king_routes.py:344:60
    |
342 |     if (v := _maybe_cast(clip_range_vf, float)) is not None: conf["clip_range_vf"] = v
343 |     if (v := _maybe_cast(seed, int)) is not None: conf["seed"] = v
344 |     if (v := _maybe_cast(eval_n_episodes, int)) is not None: conf["eval_n_episodes"] = v
    |                                                            ^
345 |     conf["eval_deterministic"] = _to_bool(eval_deterministic, True)
    |

F841 Local variable `result` is assigned to but never used
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/noctria_gui/routes/logs_routes.py:34:9
   |
33 |     try:
34 |         result = subprocess.run(
   |         ^^^^^^
35 |             ["python3", str(script_path)],
36 |             capture_output=True,
   |
help: Remove assignment to unused variable `result`

E701 Multiple statements on one line (colon)
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/noctria_gui/routes/pdca_api_details.py:33:13
   |
32 | def _parse_date(s: Optional[str]) -> Optional[date]:
33 |     if not s: return None
   |             ^
34 |     return date.fromisoformat(s)
   |

F821 Undefined name `logger`
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/noctria_gui/routes/statistics_detail.py:40:17
   |
38 |             except Exception as e:
39 |                 # 他のエラーはログに記録してスキップ
40 |                 logger.error(f"ログファイル {file} の読み込みに失敗しました: {e}")
   |                 ^^^^^^
41 |                 continue
42 |     return logs
   |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/noctria_gui/routes/strategy_detail.py:192:39
    |
190 |                 if hasattr(obj, "compute_kpis"):
191 |                     k = obj.compute_kpis()
192 |                     if is_dataclass(k): k = asdict(k)
    |                                       ^
193 |                     if not isinstance(k, dict): k = dict(k)
194 |                     return k
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/noctria_gui/routes/strategy_detail.py:193:47
    |
191 |                     k = obj.compute_kpis()
192 |                     if is_dataclass(k): k = asdict(k)
193 |                     if not isinstance(k, dict): k = dict(k)
    |                                               ^
194 |                     return k
195 |             except Exception:
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/noctria_gui/routes/strategy_detail.py:203:35
    |
201 |             try:
202 |                 k = fn()
203 |                 if is_dataclass(k): k = asdict(k)
    |                                   ^
204 |                 if not isinstance(k, dict): k = dict(k)
205 |                 return k
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/noctria_gui/routes/strategy_detail.py:204:43
    |
202 |                 k = fn()
203 |                 if is_dataclass(k): k = asdict(k)
204 |                 if not isinstance(k, dict): k = dict(k)
    |                                           ^
205 |                 return k
206 |             except Exception:
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/noctria_gui/routes/strategy_detail.py:215:35
    |
213 |             if isinstance(ret, tuple) and len(ret) >= 1:
214 |                 k = ret[0]
215 |                 if is_dataclass(k): k = asdict(k)
    |                                   ^
216 |                 if not isinstance(k, dict): k = dict(k)
217 |                 return k
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/noctria_gui/routes/strategy_detail.py:216:43
    |
214 |                 k = ret[0]
215 |                 if is_dataclass(k): k = asdict(k)
216 |                 if not isinstance(k, dict): k = dict(k)
    |                                           ^
217 |                 return k
218 |         except Exception:
    |

E702 Multiple statements on one line (semicolon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/noctria_gui/routes/strategy_detail.py:289:30
    |
287 |             tags = s.get("tags") or []
288 |             if any(t in (tags or []) for t in current_tags):
289 |                 rel.append(s); seen.add(name)
    |                              ^
290 |             if len(rel) >= 4:
291 |                 break
    |

E701 Multiple statements on one line (colon)
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/noctria_gui/routes/strategy_heatmap.py:60:28
   |
59 |             date_str = data.get("promoted_at") or data.get("timestamp")
60 |             if not date_str: continue
   |                            ^
61 |             
62 |             date_obj = datetime.fromisoformat(date_str.replace("Z", "+00:00"))
   |

E701 Multiple statements on one line (colon)
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/noctria_gui/routes/strategy_heatmap.py:64:64
   |
62 |             date_obj = datetime.fromisoformat(date_str.replace("Z", "+00:00"))
63 |
64 |             if from_date and date_obj.date() < from_date.date(): continue
   |                                                                ^
65 |             if to_date and date_obj.date() > to_date.date(): continue
   |

E701 Multiple statements on one line (colon)
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/noctria_gui/routes/strategy_heatmap.py:65:60
   |
64 |             if from_date and date_obj.date() < from_date.date(): continue
65 |             if to_date and date_obj.date() > to_date.date(): continue
   |                                                            ^
66 |
67 |             name = data.get("strategy", "").strip()
   |

E701 Multiple statements on one line (colon)
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/noctria_gui/routes/strategy_heatmap.py:68:24
   |
67 |             name = data.get("strategy", "").strip()
68 |             if not name: continue
   |                        ^
69 |             if strategy_keyword and strategy_keyword.lower() not in name.lower(): continue
   |

E701 Multiple statements on one line (colon)
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/noctria_gui/routes/strategy_heatmap.py:69:81
   |
67 |             name = data.get("strategy", "").strip()
68 |             if not name: continue
69 |             if strategy_keyword and strategy_keyword.lower() not in name.lower(): continue
   |                                                                                 ^
70 |
71 |             score = data.get("score", {})
   |

E701 Multiple statements on one line (colon)
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/noctria_gui/routes/strategy_heatmap.py:76:45
   |
75 |             stats[name]["count"] += 1
76 |             if isinstance(win, (int, float)): stats[name]["win_rates"].append(win)
   |                                             ^
77 |             if isinstance(dd, (int, float)): stats[name]["drawdowns"].append(dd)
   |

E701 Multiple statements on one line (colon)
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/noctria_gui/routes/strategy_heatmap.py:77:44
   |
75 |             stats[name]["count"] += 1
76 |             if isinstance(win, (int, float)): stats[name]["win_rates"].append(win)
77 |             if isinstance(dd, (int, float)): stats[name]["drawdowns"].append(dd)
   |                                            ^
78 |
79 |         except (json.JSONDecodeError, KeyError) as e:
   |

F821 Undefined name `Path`
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/src/core/meta_ai.py:121:12
    |
119 |     # 実際のパスに合わせて要調整
120 |     df_path = "data/sample_test_data.csv"
121 |     if not Path(df_path).exists():
    |            ^^^^
122 |         # ダミーデータ作成
123 |         dates = pd.date_range(start="2024-01-01", periods=200)
    |

F841 Local variable `dd_diff` is assigned to but never used
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/src/core/pdca_log_parser.py:94:9
   |
92 |         avg_dd_before = sum(dd_before_vals) / len(group) if group else 0.0
93 |         avg_dd_after = sum(dd_after_vals) / len(group) if group else 0.0
94 |         dd_diff = round(avg_dd_before - avg_dd_after, 2)
   |         ^^^^^^^
95 |
96 |         adopted = any(g["status"] == "adopted" for g in group)
   |
help: Remove assignment to unused variable `dd_diff`

F811 Redefinition of unused `simulate_strategy_adjusted` from line 17
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/src/core/strategy_optimizer_adjusted.py:51:5
   |
49 |     return risk_control.current_capital
50 |
51 | def simulate_strategy_adjusted(strategy_path: str, market_data: pd.DataFrame) -> dict:
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ `simulate_strategy_adjusted` redefined here
52 |     try:
53 |         namespace = {}
   |
  ::: actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/src/core/strategy_optimizer_adjusted.py:17:5
   |
15 |         return None
16 |
17 | def simulate_strategy_adjusted(prices, entry_threshold, exit_threshold, initial_capital=1000000):
   |     -------------------------- previous definition of `simulate_strategy_adjusted` here
18 |     risk_control = RiskControl(initial_capital)
19 |     position = 0
   |
help: Remove definition: `simulate_strategy_adjusted`

F841 Local variable `state` is assigned to but never used
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/src/core/task_scheduler.py:21:9
   |
19 |         """市場データをAIへ適用し、最適戦略を動的選定"""
20 |
21 |         state = np.array([market_data["price_change"], market_data["volatility"], market_data["liquidity_index"], market_data["news_se…
   |         ^^^^^
22 |         strategy_scores = {}
   |
help: Remove assignment to unused variable `state`

F821 Undefined name `initial_capital`
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/src/execution/simulate_official_strategy.py:64:25
   |
62 |         capital = self.initial_capital
63 |         position = 0  # 0: No position, 1: Long, -1: Short
64 |         equity_curve = [initial_capital]
   |                         ^^^^^^^^^^^^^^^
65 |
66 |         for i in range(1, len(self.data)):
   |

F821 Undefined name `json`
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/src/execution/simulate_official_strategy.py:154:13
    |
153 |         with open(report_path.with_suffix('.json'), 'w') as f:
154 |             json.dump(metrics, f, indent=2)
    |             ^^^^
155 |         logger.info(f"📋 パフォーマンスレポートを保存しました: {report_path.with_suffix('.json')}")
    |

F821 Undefined name `datetime`
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/src/execution/simulate_official_strategy.py:188:55
    |
186 |     logger.info(f"🏆 シミュレーション結果: {metrics}")
187 |     
188 |     report_file_path = log_dir / f"simulation_report_{datetime.now().strftime('%Y%m%d_%H%M%S')}"
    |                                                       ^^^^^^^^
189 |     Backtester.generate_report(equity_curve, metrics, report_file_path)
    |

E402 Module level import not at top of file
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/src/execution/trade_analysis.py:3:1
  |
1 | print("=== Trade Analysis Script Started ===")
2 |
3 | import pandas as pd
  | ^^^^^^^^^^^^^^^^^^^
4 | import matplotlib.pyplot as plt
5 | import glob
  |

E402 Module level import not at top of file
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/src/execution/trade_analysis.py:4:1
  |
3 | import pandas as pd
4 | import matplotlib.pyplot as plt
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
5 | import glob
6 | import os
  |

E402 Module level import not at top of file
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/src/execution/trade_analysis.py:5:1
  |
3 | import pandas as pd
4 | import matplotlib.pyplot as plt
5 | import glob
  | ^^^^^^^^^^^
6 | import os
  |

E402 Module level import not at top of file
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/src/execution/trade_analysis.py:6:1
  |
4 | import matplotlib.pyplot as plt
5 | import glob
6 | import os
  | ^^^^^^^^^
7 |
8 | print("[INFO] Checking logs directory for trade history CSVs...")
  |

invalid-syntax: Got unexpected token `
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/src/plan_data/kpi_minidemo.py:2:1
  |
1 | #### 📂 src/plan_data/kpi_minidemo.py
2 | ```python
  | ^
3 | # -*- coding: utf-8 -*-
4 | """
  |

invalid-syntax: Got unexpected token `
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/src/plan_data/kpi_minidemo.py:2:2
  |
1 | #### 📂 src/plan_data/kpi_minidemo.py
2 | ```python
  |  ^
3 | # -*- coding: utf-8 -*-
4 | """
  |

invalid-syntax: Got unexpected token `
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/src/plan_data/kpi_minidemo.py:2:3
  |
1 | #### 📂 src/plan_data/kpi_minidemo.py
2 | ```python
  |   ^
3 | # -*- coding: utf-8 -*-
4 | """
  |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/src/plan_data/kpi_minidemo.py:59:1
   |
57 |     for k, v in kpis.items():
58 |         print(f"  {k}: {v}")
59 | ```
   | ^
60 |
61 | ---
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/src/plan_data/kpi_minidemo.py:59:2
   |
57 |     for k, v in kpis.items():
58 |         print(f"  {k}: {v}")
59 | ```
   |  ^
60 |
61 | ---
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/src/plan_data/kpi_minidemo.py:59:3
   |
57 |     for k, v in kpis.items():
58 |         print(f"  {k}: {v}")
59 | ```
   |   ^
60 |
61 | ---
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/src/plan_data/kpi_minidemo.py:59:4
   |
57 |     for k, v in kpis.items():
58 |         print(f"  {k}: {v}")
59 | ```
   |    ^
60 |
61 | ---
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/src/plan_data/kpi_minidemo.py:61:4
   |
59 | ```
60 |
61 | ---
   |    ^
   |

F403 `from core.path_config import *` used; unable to detect undefined names
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/src/scripts/meta_ai_tensorboard_train.py:1:1
  |
1 | from core.path_config import *
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2 | #!/usr/bin/env python3
3 | # coding: utf-8
  |

F821 Undefined name `pr`
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/src/tools/dependency_analyzer.py:46:5
   |
45 | def main():
46 |     pr
   |     ^^
   |

F601 Dictionary key literal `'from strategies.noctus_sentinella import'` repeated
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/src/tools/fix_import_paths.py:14:5
   |
12 |     'from scripts.apply_best_params_to_metaai import': 'from scripts.apply_best_params_to_metaai import',
13 |     # 念のため strategies から直接も置換
14 |     'from strategies.noctus_sentinella import': 'from strategies.noctus_sentinella import',
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
15 | }
   |
help: Remove repeated key literal `'from strategies.noctus_sentinella import'`

E741 Ambiguous variable name: `l`
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/src/tools/fix_path_violations.py:49:60
   |
47 |     if modified:
48 |         # import path_config が含まれていなければ追加
49 |         if not any("from core.path_config import" in l for l in new_lines):
   |                                                            ^
50 |             new_lines.insert(0, IMPORT_LINE + "\n")
51 |         with open(file_path, "w", encoding="utf-8") as f:
   |

F841 Local variable `keep` is assigned to but never used
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/src/tools/generate_cleanup_script.py:34:13
   |
32 |             # 原則として1つを残し、他は削除（要レビュー）
33 |             paths = issue["paths"]
34 |             keep = paths[0]
   |             ^^^^
35 |             for path in paths[1:]:
36 |                 cmds.append(f"# ⚠️ 重複: '{issue['name']}' → 一方を残す\n")
   |
help: Remove assignment to unused variable `keep`

E722 Do not use bare `except`
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/src/tools/push_official_strategy_to_github.py:41:9
   |
39 |                 if isinstance(data, dict):
40 |                     logs.append((file, data))
41 |         except:
   |         ^^^^^^
42 |             continue
43 |     return logs
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/src/tools/show_timeline.py:52:1
   |
51 | # We reuse observability helpers (for ensure_* only).
52 | from plan_data.observability import ensure_tables, ensure_views, refresh_materialized  # type: ignore
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/src/tools/structure_refactor.py:14:1
   |
13 | # === 各種モジュールインポート ===
14 | from tools.hardcoded_path_replacer import replace_paths
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
15 | from tools.structure_auditor import audit_structure  # ← 明示的に audit_structure を呼ぶ
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/src/tools/structure_refactor.py:15:1
   |
13 | # === 各種モジュールインポート ===
14 | from tools.hardcoded_path_replacer import replace_paths
15 | from tools.structure_auditor import audit_structure  # ← 明示的に audit_structure を呼ぶ
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
16 |
17 | # === 対象ディレクトリ（v3.0構成）===
   |

F841 Local variable `entry_price` is assigned to but never used
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/src/veritas/generate/templates/strategy_template.py:23:13
   |
21 |         if position == 0 and rsi > 50 and spread < 2:
22 |             position = capital / price
23 |             entry_price = price
   |             ^^^^^^^^^^^
24 |
25 |         elif position > 0 and (rsi < 50 or spread > 2):
   |
help: Remove assignment to unused variable `entry_price`

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/src/veritas/strategy_generator.py:11:1
   |
 9 |     sys.path.insert(0, str(src_path))
10 |
11 | import os
   | ^^^^^^^^^
12 | import torch
13 | import psycopg2
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/src/veritas/strategy_generator.py:12:1
   |
11 | import os
12 | import torch
   | ^^^^^^^^^^^^
13 | import psycopg2
14 | from datetime import datetime
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/src/veritas/strategy_generator.py:13:1
   |
11 | import os
12 | import torch
13 | import psycopg2
   | ^^^^^^^^^^^^^^^
14 | from datetime import datetime
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/src/veritas/strategy_generator.py:14:1
   |
12 | import torch
13 | import psycopg2
14 | from datetime import datetime
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
15 |
16 | from core.path_config import VERITAS_MODELS_DIR, STRATEGIES_DIR, LOGS_DIR
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/src/veritas/strategy_generator.py:16:1
   |
14 | from datetime import datetime
15 |
16 | from core.path_config import VERITAS_MODELS_DIR, STRATEGIES_DIR, LOGS_DIR
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
17 | from core.logger import setup_logger
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/src/veritas/strategy_generator.py:17:1
   |
16 | from core.path_config import VERITAS_MODELS_DIR, STRATEGIES_DIR, LOGS_DIR
17 | from core.logger import setup_logger
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
18 |
19 | from veritas.models.ml_model.simple_model import SimpleModel
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/src/veritas/strategy_generator.py:19:1
   |
17 | from core.logger import setup_logger
18 |
19 | from veritas.models.ml_model.simple_model import SimpleModel
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
20 |
21 | logger = setup_logger("VeritasGenerator", LOGS_DIR / "veritas" / "generator.log")
   |

F841 Local variable `model` is assigned to but never used
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/_graveyard/2025-09-06/src/veritas/strategy_generator.py:68:9
   |
66 |     """
67 |     try:
68 |         model = load_ml_model()
   |         ^^^^^
69 |         # TODO: 入力ベクトル・推論ロジックを本番仕様で置き換え
70 |         import random
   |
help: Remove assignment to unused variable `model`

F404 `from __future__` imports must occur at the beginning of the file
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/airflow_docker/dags/noctria_act_pipeline.py:157:1
    |
155 | """
156 |
157 | from __future__ import annotations
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
158 | import os
159 | import json
    |

E402 Module level import not at top of file
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/airflow_docker/dags/noctria_act_pipeline.py:157:1
    |
155 | """
156 |
157 | from __future__ import annotations
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
158 | import os
159 | import json
    |

E402 Module level import not at top of file
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/airflow_docker/dags/noctria_act_pipeline.py:158:1
    |
157 | from __future__ import annotations
158 | import os
    | ^^^^^^^^^
159 | import json
160 | from glob import glob
    |

E402 Module level import not at top of file
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/airflow_docker/dags/noctria_act_pipeline.py:159:1
    |
157 | from __future__ import annotations
158 | import os
159 | import json
    | ^^^^^^^^^^^
160 | from glob import glob
161 | from typing import Dict, Any, List
    |

E402 Module level import not at top of file
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/airflow_docker/dags/noctria_act_pipeline.py:160:1
    |
158 | import os
159 | import json
160 | from glob import glob
    | ^^^^^^^^^^^^^^^^^^^^^
161 | from typing import Dict, Any, List
162 | from datetime import datetime
    |

E402 Module level import not at top of file
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/airflow_docker/dags/noctria_act_pipeline.py:161:1
    |
159 | import json
160 | from glob import glob
161 | from typing import Dict, Any, List
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
162 | from datetime import datetime
    |

E402 Module level import not at top of file
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/airflow_docker/dags/noctria_act_pipeline.py:162:1
    |
160 | from glob import glob
161 | from typing import Dict, Any, List
162 | from datetime import datetime
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
163 |
164 | PROJECT_ROOT = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
    |

F404 `from __future__` imports must occur at the beginning of the file
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/airflow_docker/dags/noctria_act_pipeline.py:304:1
    |
302 | """
303 |
304 | from __future__ import annotations
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
305 | import os
306 | from datetime import datetime
    |

E402 Module level import not at top of file
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/airflow_docker/dags/noctria_act_pipeline.py:304:1
    |
302 | """
303 |
304 | from __future__ import annotations
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
305 | import os
306 | from datetime import datetime
    |

E402 Module level import not at top of file
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/airflow_docker/dags/noctria_act_pipeline.py:305:1
    |
304 | from __future__ import annotations
305 | import os
    | ^^^^^^^^^
306 | from datetime import datetime
    |

E402 Module level import not at top of file
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/airflow_docker/dags/noctria_act_pipeline.py:306:1
    |
304 | from __future__ import annotations
305 | import os
306 | from datetime import datetime
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
307 |
308 | PROJECT_ROOT = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
    |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/airflow_docker/dags/train_prometheus_obs8_dag.py:41:1
   |
39 |         sys.path.append(p)
40 |
41 | from airflow import DAG
   | ^^^^^^^^^^^^^^^^^^^^^^^
42 | from airflow.operators.python import PythonOperator
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/airflow_docker/dags/train_prometheus_obs8_dag.py:42:1
   |
41 | from airflow import DAG
42 | from airflow.operators.python import PythonOperator
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/airflow_docker/dags/veritas_eval_dag.py:24:1
   |
22 |     sys.path.insert(0, project_root)
23 |
24 | from src.core.path_config import STRATEGIES_VERITAS_GENERATED_DIR
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
25 | from src.core.strategy_evaluator import evaluate_strategy, log_evaluation_result
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/airflow_docker/dags/veritas_eval_dag.py:25:1
   |
24 | from src.core.path_config import STRATEGIES_VERITAS_GENERATED_DIR
25 | from src.core.strategy_evaluator import evaluate_strategy, log_evaluation_result
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
26 |
27 | default_args = {
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/airflow_docker/dags/veritas_pdca_dag.py:24:1
   |
23 | # --- Veritas戦略関連スクリプトのインポート ---
24 | from src.veritas.veritas_generate_strategy import main as generate_main
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
25 | from src.veritas.evaluate_veritas import main as evaluate_main
26 | from src.scripts.github_push_adopted_strategies import main as push_main
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/airflow_docker/dags/veritas_pdca_dag.py:25:1
   |
23 | # --- Veritas戦略関連スクリプトのインポート ---
24 | from src.veritas.veritas_generate_strategy import main as generate_main
25 | from src.veritas.evaluate_veritas import main as evaluate_main
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
26 | from src.scripts.github_push_adopted_strategies import main as push_main
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/airflow_docker/dags/veritas_pdca_dag.py:26:1
   |
24 | from src.veritas.veritas_generate_strategy import main as generate_main
25 | from src.veritas.evaluate_veritas import main as evaluate_main
26 | from src.scripts.github_push_adopted_strategies import main as push_main
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
27 |
28 | # === DAG内ヘルパー関数 ===
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/airflow_docker/dags/veritas_to_order_dag.py:25:1
   |
23 | # ✅ 修正: 各スクリプトからメインの処理関数をインポート
24 | # 存在しないモジュールを削除し、必要なものを正しくインポート
25 | from src.veritas.evaluate_veritas import main as evaluate_main
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
26 | # from src.veritas.promote_accepted_strategies import main as promote_main # このスクリプトは存在しない可能性
27 | from src.execution.generate_order_json import main as generate_order_main
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/airflow_docker/dags/veritas_to_order_dag.py:27:1
   |
25 | from src.veritas.evaluate_veritas import main as evaluate_main
26 | # from src.veritas.promote_accepted_strategies import main as promote_main # このスクリプトは存在しない可能性
27 | from src.execution.generate_order_json import main as generate_order_main
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
28 |
29 | # === DAG基本設定 ===
   |

F403 `from core.path_config import *` used; unable to detect undefined names
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/airflow_docker/scripts/download_veritas_model.py:1:1
  |
1 | from core.path_config import *
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2 | from huggingface_hub import snapshot_download
3 | import os
  |

F405 `MODELS_DIR` may be undefined, or defined from star imports
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/airflow_docker/scripts/download_veritas_model.py:9:18
   |
 8 | # 保存先ディレクトリ（Airflow/Dockerマウントパスと一致させる）
 9 | TARGET_DIR = str(MODELS_DIR)
   |                  ^^^^^^^^^^
10 |
11 | # モデルダウンロード
   |

F403 `from core.path_config import *` used; unable to detect undefined names
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/airflow_docker/scripts/meta_ai_tensorboard_train.py:1:1
  |
1 | from core.path_config import *
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2 | #!/usr/bin/env python3
3 | # coding: utf-8
  |

E741 Ambiguous variable name: `l`
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/autogen_scripts/fix_missing_imports.py:35:85
   |
33 |         new_imports = []
34 |         for rule in IMPORT_RULES:
35 |             if re.search(rule["pattern"], code) and all(rule["import"] not in l for l in existing_import_lines):
   |                                                                                     ^
36 |                 new_imports.append(rule["import"])
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/conversation_history_manager.py:67:1
   |
66 | # 依存注入用ファクトリ関数例
67 | from fastapi import Request
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^
68 |
69 | def get_conversation_history_manager(
   |

E731 Do not assign a `lambda` expression, use a `def`
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/data/explainable_ai.py:73:9
   |
71 |         sample = market_data.flatten()
72 |         # 予測関数として、モデルの predict メソッドを指定
73 |         prediction_fn = lambda x: self.model.predict(x)
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
74 |         explanation = self.lime_explainer.explain_instance(
75 |             sample, 
   |
help: Rewrite `prediction_fn` as a `def`

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/data_collection.py:8:1
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | ```python
   | ^
 9 | # data_collection.py
10 | import requests
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/data_collection.py:8:2
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | ```python
   |  ^
 9 | # data_collection.py
10 | import requests
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/data_collection.py:8:3
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | ```python
   |   ^
 9 | # data_collection.py
10 | import requests
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/data_collection.py:20:1
   |
18 |     else:
19 |         raise ConnectionError(f"Failed to download data. Status code: {response.status_code}")
20 | ```
   | ^
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/data_collection.py:20:2
   |
18 |     else:
19 |         raise ConnectionError(f"Failed to download data. Status code: {response.status_code}")
20 | ```
   |  ^
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/data_collection.py:20:3
   |
18 |     else:
19 |         raise ConnectionError(f"Failed to download data. Status code: {response.status_code}")
20 | ```
   |   ^
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/data_collection.py:20:4
   |
18 |     else:
19 |         raise ConnectionError(f"Failed to download data. Status code: {response.status_code}")
20 | ```
   |    ^
   |

invalid-syntax: Got unexpected token `
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/data_preprocessing.py:8:1
  |
6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
7 |
8 | ```python
  | ^
9 | # generated_code/data_preprocessing.py
  |

invalid-syntax: Got unexpected token `
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/data_preprocessing.py:8:2
  |
6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
7 |
8 | ```python
  |  ^
9 | # generated_code/data_preprocessing.py
  |

invalid-syntax: Got unexpected token `
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/data_preprocessing.py:8:3
  |
6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
7 |
8 | ```python
  |   ^
9 | # generated_code/data_preprocessing.py
  |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/data_preprocessing.py:23:1
   |
21 |     def transform_data(self):
22 |         pass
23 | ```
   | ^
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/data_preprocessing.py:23:2
   |
21 |     def transform_data(self):
22 |         pass
23 | ```
   |  ^
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/data_preprocessing.py:23:3
   |
21 |     def transform_data(self):
22 |         pass
23 | ```
   |   ^
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/data_preprocessing.py:23:4
   |
21 |     def transform_data(self):
22 |         pass
23 | ```
   |    ^
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:8:21
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | 指定されたエラーメッセージから判断すると、`pytest`の実行時に必要なプラグインである`pytest-json-report`が不足している可能性があります。                                                    …
   |                                         ^^
 9 |
10 | ### 手順
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:8:22
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | 指定されたエラーメッセージから判断すると、`pytest`の実行時に必要なプラグインである`pytest-json-report`が不足している可能性があります。                                                    …
   |                                           ^
 9 |
10 | ### 手順
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:8:29
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | 指定されたエラーメッセージから判断すると、`pytest`の実行時に必要なプラグインである`pytest-json-report`が不足している可能性があります。                                                    …
   |                                                  ^
 9 |
10 | ### 手順
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:8:46
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | 指定されたエラーメッセージから判断すると、`pytest`の実行時に必要なプラグインである`pytest-json-report`が不足している可能性があります。                                                    …
   |                                                                                   ^
 9 |
10 | ### 手順
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:8:65
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | 指定されたエラーメッセージから判断すると、`pytest`の実行時に必要なプラグインである`pytest-json-report`が不足している可能性があります。                                                    …
   |                                                                                                      ^
 9 |
10 | ### 手順
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:8:81
   |
 6 | …
 7 | …
 8 | …足している可能性があります。このプラグインは、`pytest`のテスト結果をJSON形式で出力するためのオプションを提供します。以下の手順に従っ                                                            …
   |                             ^^
 9 | …
10 | …
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:8:90
   |
 6 | …
 7 | …
 8 | …グインは、`pytest`のテスト結果をJSON形式で出力するためのオプションを提供します。以下の手順に従って問題を解決できます。
   |           ^^
 9 | …
10 | …
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:8:91
   |
 6 | …
 7 | …
 8 | …インは、`pytest`のテスト結果をJSON形式で出力するためのオプションを提供します。以下の手順に従って問題を解決できます。
   |           ^
 9 | …
10 | …
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:8:98
   |
 6 | …
 7 | …
 8 | …test`のテスト結果をJSON形式で出力するためのオプションを提供します。以下の手順に従って問題を解決できます。
   |      ^
 9 | …
10 | …
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:8:131
   |
 6 | …
 7 | …
 8 | …
^  |
 9 | …
10 | …
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:8:150
   |
 6 | …
 7 | …
 8 | …
   ^^
 9 | …
10 | …
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:8:151
   |
 6 | …
 7 | …
 8 | …
   | ^
 9 | …
10 | …
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:12:6
   |
10 | ### 手順
11 |
12 | 1. **`pytest-json-report`のインストール**
   |      ^
13 |    - `pytest-json-report`プラグインをPython仮想環境内にインストールします。次のコマンドを実行してください。
14 |      ```bash
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:12:25
   |
10 | ### 手順
11 |
12 | 1. **`pytest-json-report`のインストール**
   |                         ^
13 |    - `pytest-json-report`プラグインをPython仮想環境内にインストールします。次のコマンドを実行してください。
14 |      ```bash
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:12:35
   |
10 | ### 手順
11 |
12 | 1. **`pytest-json-report`のインストール**
   |                                          ^
13 |    - `pytest-json-report`プラグインをPython仮想環境内にインストールします。次のコマンドを実行してください。
14 |      ```bash
   |

invalid-syntax: Unexpected indentation
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:13:1
   |
12 | 1. **`pytest-json-report`のインストール**
13 |    - `pytest-json-report`プラグインをPython仮想環境内にインストールします。次のコマンドを実行してください。
   | ^^^
14 |      ```bash
15 |      pip install pytest-json-report
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:13:6
   |
12 | 1. **`pytest-json-report`のインストール**
13 |    - `pytest-json-report`プラグインをPython仮想環境内にインストールします。次のコマンドを実行してください。
   |      ^
14 |      ```bash
15 |      pip install pytest-json-report
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:13:25
   |
12 | 1. **`pytest-json-report`のインストール**
13 |    - `pytest-json-report`プラグインをPython仮想環境内にインストールします。次のコマンドを実行してください。
   |                         ^
14 |      ```bash
15 |      pip install pytest-json-report
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:13:53
   |
12 | 1. **`pytest-json-report`のインストール**
13 |    - `pytest-json-report`プラグインをPython仮想環境内にインストールします。次のコマンドを実行してください。
   |                                                                          ^^
14 |      ```bash
15 |      pip install pytest-json-report
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:13:69
   |
12 | 1. **`pytest-json-report`のインストール**
13 |    - `pytest-json-report`プラグインをPython仮想環境内にインストールします。次のコマンドを実行してください。
   |                                                                                                          ^^
14 |      ```bash
15 |      pip install pytest-json-report
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:13:70
   |
12 | 1. **`pytest-json-report`のインストール**
13 |    - `pytest-json-report`プラグインをPython仮想環境内にインストールします。次のコマンドを実行してください。
   |                                                                                                            ^
14 |      ```bash
15 |      pip install pytest-json-report
   |

invalid-syntax: Unexpected indentation
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:14:1
   |
12 | 1. **`pytest-json-report`のインストール**
13 |    - `pytest-json-report`プラグインをPython仮想環境内にインストールします。次のコマンドを実行してください。
14 |      ```bash
   | ^^^^^
15 |      pip install pytest-json-report
16 |      ```
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:14:6
   |
12 | 1. **`pytest-json-report`のインストール**
13 |    - `pytest-json-report`プラグインをPython仮想環境内にインストールします。次のコマンドを実行してください。
14 |      ```bash
   |      ^
15 |      pip install pytest-json-report
16 |      ```
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:14:7
   |
12 | 1. **`pytest-json-report`のインストール**
13 |    - `pytest-json-report`プラグインをPython仮想環境内にインストールします。次のコマンドを実行してください。
14 |      ```bash
   |       ^
15 |      pip install pytest-json-report
16 |      ```
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:14:8
   |
12 | 1. **`pytest-json-report`のインストール**
13 |    - `pytest-json-report`プラグインをPython仮想環境内にインストールします。次のコマンドを実行してください。
14 |      ```bash
   |        ^
15 |      pip install pytest-json-report
16 |      ```
   |

invalid-syntax: Simple statements must be separated by newlines or semicolons
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:15:10
   |
13 |    - `pytest-json-report`プラグインをPython仮想環境内にインストールします。次のコマンドを実行してください。
14 |      ```bash
15 |      pip install pytest-json-report
   |          ^^^^^^^
16 |      ```
   |

invalid-syntax: Simple statements must be separated by newlines or semicolons
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:15:18
   |
13 |    - `pytest-json-report`プラグインをPython仮想環境内にインストールします。次のコマンドを実行してください。
14 |      ```bash
15 |      pip install pytest-json-report
   |                  ^^^^^^
16 |      ```
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:16:6
   |
14 |      ```bash
15 |      pip install pytest-json-report
16 |      ```
   |      ^
17 |
18 | 2. **インストールの確認**
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:16:7
   |
14 |      ```bash
15 |      pip install pytest-json-report
16 |      ```
   |       ^
17 |
18 | 2. **インストールの確認**
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:16:8
   |
14 |      ```bash
15 |      pip install pytest-json-report
16 |      ```
   |        ^
17 |
18 | 2. **インストールの確認**
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:16:9
   |
14 |      ```bash
15 |      pip install pytest-json-report
16 |      ```
   |         ^
17 |
18 | 2. **インストールの確認**
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:18:1
   |
16 |      ```
17 |
18 | 2. **インストールの確認**
   | ^
19 |    - プラグインが正しくインストールされているか確認するには、`pytest`のヘルプコマンドを使用してインストールされているプラグインリストを                                                            …
20 |      ```bash
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:18:17
   |
16 |      ```
17 |
18 | 2. **インストールの確認**
   |                          ^
19 |    - プラグインが正しくインストールされているか確認するには、`pytest`のヘルプコマンドを使用してインストールされているプラグインリストを                                                            …
20 |      ```bash
   |

invalid-syntax: Unexpected indentation
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:19:1
   |
18 | 2. **インストールの確認**
19 |    - プラグインが正しくインストールされているか確認するには、`pytest`のヘルプコマンドを使用してインストールされているプラグインリストを                                                            …
   | ^^^
20 |      ```bash
21 |      pytest --help
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:19:33
   |
18 | 2. **インストールの確認**
19 |    - プラグインが正しくインストールされているか確認するには、`pytest`のヘルプコマンドを使用してインストールされているプラグインリストを                                                            …
   |                                                            ^^
20 |      ```bash
21 |      pytest --help
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:19:34
   |
18 | 2. **インストールの確認**
19 |    - プラグインが正しくインストールされているか確認するには、`pytest`のヘルプコマンドを使用してインストールされているプラグインリストを                                                            …
   |                                                              ^
20 |      ```bash
21 |      pytest --help
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:19:41
   |
18 | 2. **インストールの確認**
19 |    - プラグインが正しくインストールされているか確認するには、`pytest`のヘルプコマンドを使用してインストールされているプラグインリストを                                                            …
   |                                                                     ^
20 |      ```bash
21 |      pytest --help
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:19:80
   |
18 | …
19 | …
   | ^^
20 | …
21 | …
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:19:81
   |
18 | …
19 | …
   | ^
20 | …
21 | …
   |

invalid-syntax: Unexpected indentation
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:20:1
   |
18 | 2. **インストールの確認**
19 |    - プラグインが正しくインストールされているか確認するには、`pytest`のヘルプコマンドを使用してインストールされているプラグインリストを                                                            …
20 |      ```bash
   | ^^^^^
21 |      pytest --help
22 |      ```
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:20:6
   |
18 | 2. **インストールの確認**
19 |    - プラグインが正しくインストールされているか確認するには、`pytest`のヘルプコマンドを使用してインストールされているプラグインリストを                                                            …
20 |      ```bash
   |      ^
21 |      pytest --help
22 |      ```
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:20:7
   |
18 | 2. **インストールの確認**
19 |    - プラグインが正しくインストールされているか確認するには、`pytest`のヘルプコマンドを使用してインストールされているプラグインリストを                                                            …
20 |      ```bash
   |       ^
21 |      pytest --help
22 |      ```
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:20:8
   |
18 | 2. **インストールの確認**
19 |    - プラグインが正しくインストールされているか確認するには、`pytest`のヘルプコマンドを使用してインストールされているプラグインリストを                                                            …
20 |      ```bash
   |        ^
21 |      pytest --help
22 |      ```
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:22:6
   |
20 |      ```bash
21 |      pytest --help
22 |      ```
   |      ^
23 |    - リストの中に`--json-report`オプションが表示されていることを確認します。
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:22:7
   |
20 |      ```bash
21 |      pytest --help
22 |      ```
   |       ^
23 |    - リストの中に`--json-report`オプションが表示されていることを確認します。
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:22:8
   |
20 |      ```bash
21 |      pytest --help
22 |      ```
   |        ^
23 |    - リストの中に`--json-report`オプションが表示されていることを確認します。
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:22:9
   |
20 |      ```bash
21 |      pytest --help
22 |      ```
   |         ^
23 |    - リストの中に`--json-report`オプションが表示されていることを確認します。
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:23:4
   |
21 |      pytest --help
22 |      ```
23 |    - リストの中に`--json-report`オプションが表示されていることを確認します。
   |    ^
24 |
25 | 3. **テストの再実行**
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:23:12
   |
21 |      pytest --help
22 |      ```
23 |    - リストの中に`--json-report`オプションが表示されていることを確認します。
   |                  ^
24 |
25 | 3. **テストの再実行**
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:23:26
   |
21 |      pytest --help
22 |      ```
23 |    - リストの中に`--json-report`オプションが表示されていることを確認します。
   |                                ^
24 |
25 | 3. **テストの再実行**
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:23:48
   |
21 |      pytest --help
22 |      ```
23 |    - リストの中に`--json-report`オプションが表示されていることを確認します。
   |                                                                           ^^
24 |
25 | 3. **テストの再実行**
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:23:49
   |
21 |      pytest --help
22 |      ```
23 |    - リストの中に`--json-report`オプションが表示されていることを確認します。
   |                                                                             ^
24 |
25 | 3. **テストの再実行**
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:25:1
   |
23 |    - リストの中に`--json-report`オプションが表示されていることを確認します。
24 |
25 | 3. **テストの再実行**
   | ^
26 |    - プラグインがインストールされていることを確認したら、もう一度`pytest`コマンドを実行して、テスト結果をJSON形式で出力することを試みて                                                          …
27 |      ```bash
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:25:15
   |
23 |    - リストの中に`--json-report`オプションが表示されていることを確認します。
24 |
25 | 3. **テストの再実行**
   |                      ^
26 |    - プラグインがインストールされていることを確認したら、もう一度`pytest`コマンドを実行して、テスト結果をJSON形式で出力することを試みて                                                          …
27 |      ```bash
   |

invalid-syntax: Unexpected indentation
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:26:1
   |
25 | 3. **テストの再実行**
26 |    - プラグインがインストールされていることを確認したら、もう一度`pytest`コマンドを実行して、テスト結果をJSON形式で出力することを試みて                                                          …
   | ^^^
27 |      ```bash
28 |      pytest --json-report --json-report-file=./generated_code/pytest_result.json
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:26:31
   |
25 | 3. **テストの再実行**
26 |    - プラグインがインストールされていることを確認したら、もう一度`pytest`コマンドを実行して、テスト結果をJSON形式で出力することを試みて                                                          …
   |                                                        ^^
27 |      ```bash
28 |      pytest --json-report --json-report-file=./generated_code/pytest_result.json
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:26:36
   |
25 | 3. **テストの再実行**
26 |    - プラグインがインストールされていることを確認したら、もう一度`pytest`コマンドを実行して、テスト結果をJSON形式で出力することを試みて                                                          …
   |                                                                  ^
27 |      ```bash
28 |      pytest --json-report --json-report-file=./generated_code/pytest_result.json
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:26:43
   |
25 | 3. **テストの再実行**
26 |    - プラグインがインストールされていることを確認したら、もう一度`pytest`コマンドを実行して、テスト結果をJSON形式で出力することを試みて                                                          …
   |                                                                         ^
27 |      ```bash
28 |      pytest --json-report --json-report-file=./generated_code/pytest_result.json
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:26:53
   |
25 | 3. **テストの再実行**
26 |    - プラグインがインストールされていることを確認したら、もう一度`pytest`コマンドを実行して、テスト結果をJSON形式で出力することを試みて                                                          …
   |                                                                                            ^^
27 |      ```bash
28 |      pytest --json-report --json-report-file=./generated_code/pytest_result.json
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:26:81
   |
25 | …
26 | …さい。
   |       ^^
27 | …
28 | …on
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:26:82
   |
25 | …
26 | …い。
   |       ^
27 | …
28 | …n
   |

invalid-syntax: Unexpected indentation
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:27:1
   |
25 | 3. **テストの再実行**
26 |    - プラグインがインストールされていることを確認したら、もう一度`pytest`コマンドを実行して、テスト結果をJSON形式で出力することを試みて                                                          …
27 |      ```bash
   | ^^^^^
28 |      pytest --json-report --json-report-file=./generated_code/pytest_result.json
29 |      ```
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:27:6
   |
25 | 3. **テストの再実行**
26 |    - プラグインがインストールされていることを確認したら、もう一度`pytest`コマンドを実行して、テスト結果をJSON形式で出力することを試みて                                                          …
27 |      ```bash
   |      ^
28 |      pytest --json-report --json-report-file=./generated_code/pytest_result.json
29 |      ```
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:27:7
   |
25 | 3. **テストの再実行**
26 |    - プラグインがインストールされていることを確認したら、もう一度`pytest`コマンドを実行して、テスト結果をJSON形式で出力することを試みて                                                          …
27 |      ```bash
   |       ^
28 |      pytest --json-report --json-report-file=./generated_code/pytest_result.json
29 |      ```
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:27:8
   |
25 | 3. **テストの再実行**
26 |    - プラグインがインストールされていることを確認したら、もう一度`pytest`コマンドを実行して、テスト結果をJSON形式で出力することを試みて                                                          …
27 |      ```bash
   |        ^
28 |      pytest --json-report --json-report-file=./generated_code/pytest_result.json
29 |      ```
   |

invalid-syntax: Invalid assignment target
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:28:6
   |
26 |    - プラグインがインストールされていることを確認したら、もう一度`pytest`コマンドを実行して、テスト結果をJSON形式で出力することを試みて                                                          …
27 |      ```bash
28 |      pytest --json-report --json-report-file=./generated_code/pytest_result.json
   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
29 |      ```
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:28:46
   |
26 |    - プラグインがインストールされていることを確認したら、もう一度`pytest`コマンドを実行して、テスト結果をJSON形式で出力することを試みて                                                          …
27 |      ```bash
28 |      pytest --json-report --json-report-file=./generated_code/pytest_result.json
   |                                              ^
29 |      ```
   |

invalid-syntax: Expected an identifier
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:28:47
   |
26 |    - プラグインがインストールされていることを確認したら、もう一度`pytest`コマンドを実行して、テスト結果をJSON形式で出力することを試みて                                                          …
27 |      ```bash
28 |      pytest --json-report --json-report-file=./generated_code/pytest_result.json
   |                                               ^
29 |      ```
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:29:6
   |
27 |      ```bash
28 |      pytest --json-report --json-report-file=./generated_code/pytest_result.json
29 |      ```
   |      ^
30 |
31 | ### 問題が解決しない場合
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:29:7
   |
27 |      ```bash
28 |      pytest --json-report --json-report-file=./generated_code/pytest_result.json
29 |      ```
   |       ^
30 |
31 | ### 問題が解決しない場合
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:29:8
   |
27 |      ```bash
28 |      pytest --json-report --json-report-file=./generated_code/pytest_result.json
29 |      ```
   |        ^
30 |
31 | ### 問題が解決しない場合
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:29:9
   |
27 |      ```bash
28 |      pytest --json-report --json-report-file=./generated_code/pytest_result.json
29 |      ```
   |         ^
30 |
31 | ### 問題が解決しない場合
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:33:1
   |
31 | ### 問題が解決しない場合
32 |
33 | - **仮想環境の確認**: 使用している仮想環境が正しく設定されているか確認してください。すべての依存関係が同じ環境にインストールされている                                                              …
   | ^
34 | - **異なる環境での試行**: もし可能であれば、異なる環境で同様の手順を試して問題の範囲を絞り込んでください。
   |

invalid-syntax: Invalid annotated assignment target
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:33:1
   |
31 | ### 問題が解決しない場合
32 |
33 | - **仮想環境の確認**: 使用している仮想環境が正しく設定されているか確認してください。すべての依存関係が同じ環境にインストールされている                                                              …
   | ^^^^^^^^^^^^^^^^^^^^
34 | - **異なる環境での試行**: もし可能であれば、異なる環境で同様の手順を試して問題の範囲を絞り込んでください。
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:33:3
   |
31 | ### 問題が解決しない場合
32 |
33 | - **仮想環境の確認**: 使用している仮想環境が正しく設定されているか確認してください。すべての依存関係が同じ環境にインストールされている                                                              …
   |   ^^
34 | - **異なる環境での試行**: もし可能であれば、異なる環境で同様の手順を試して問題の範囲を絞り込んでください。
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:33:14
   |
31 | ### 問題が解決しない場合
32 |
33 | - **仮想環境の確認**: 使用している仮想環境が正しく設定されているか確認してください。すべての依存関係が同じ環境にインストールされている                                                              …
   |                     ^
34 | - **異なる環境での試行**: もし可能であれば、異なる環境で同様の手順を試して問題の範囲を絞り込んでください。
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:33:46
   |
31 | ### 問題が解決しない場合
32 |
33 | - **仮想環境の確認**: 使用している仮想環境が正しく設定されているか確認してください。すべての依存関係が同じ環境にインストールされている                                                              …
   |                                                                                   ^^
34 | - **異なる環境での試行**: もし可能であれば、異なる環境で同様の手順を試して問題の範囲を絞り込んでください。
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:33:80
   |
31 | …
32 | …
33 | …
   ^^
34 | …
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:33:81
   |
31 | …
32 | …
33 | …
   | ^
34 | …
   |

invalid-syntax: Invalid annotated assignment target
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:34:1
   |
33 | - **仮想環境の確認**: 使用している仮想環境が正しく設定されているか確認してください。すべての依存関係が同じ環境にインストールされている                                                              …
34 | - **異なる環境での試行**: もし可能であれば、異なる環境で同様の手順を試して問題の範囲を絞り込んでください。
   | ^^^^^^^^^^^^^^^^^^^^^^^^
35 |
36 | この手順に従うことで、テスト結果をJSON形式で出力できるはずです。さらに、プラグインが正しくインストールされている環境か確認し、不足して                                                                …
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:34:3
   |
33 | - **仮想環境の確認**: 使用している仮想環境が正しく設定されているか確認してください。すべての依存関係が同じ環境にインストールされている                                                              …
34 | - **異なる環境での試行**: もし可能であれば、異なる環境で同様の手順を試して問題の範囲を絞り込んでください。
   |   ^^
35 |
36 | この手順に従うことで、テスト結果をJSON形式で出力できるはずです。さらに、プラグインが正しくインストールされている環境か確認し、不足して                                                                …
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:34:16
   |
33 | - **仮想環境の確認**: 使用している仮想環境が正しく設定されているか確認してください。すべての依存関係が同じ環境にインストールされている                                                              …
34 | - **異なる環境での試行**: もし可能であれば、異なる環境で同様の手順を試して問題の範囲を絞り込んでください。
   |                         ^
35 |
36 | この手順に従うことで、テスト結果をJSON形式で出力できるはずです。さらに、プラグインが正しくインストールされている環境か確認し、不足して                                                                …
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:34:26
   |
33 | - **仮想環境の確認**: 使用している仮想環境が正しく設定されているか確認してください。すべての依存関係が同じ環境にインストールされている                                                              …
34 | - **異なる環境での試行**: もし可能であれば、異なる環境で同様の手順を試して問題の範囲を絞り込んでください。
   |                                           ^^
35 |
36 | この手順に従うことで、テスト結果をJSON形式で出力できるはずです。さらに、プラグインが正しくインストールされている環境か確認し、不足して                                                                …
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:34:57
   |
33 | - **仮想環境の確認**: 使用している仮想環境が正しく設定されているか確認してください。すべての依存関係が同じ環境にインストールされている                                                              …
34 | - **異なる環境での試行**: もし可能であれば、異なる環境で同様の手順を試して問題の範囲を絞り込んでください。
   |                                                                                                         ^^
35 |
36 | この手順に従うことで、テスト結果をJSON形式で出力できるはずです。さらに、プラグインが正しくインストールされている環境か確認し、不足して                                                                …
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:34:58
   |
33 | - **仮想環境の確認**: 使用している仮想環境が正しく設定されているか確認してください。すべての依存関係が同じ環境にインストールされている                                                              …
34 | - **異なる環境での試行**: もし可能であれば、異なる環境で同様の手順を試して問題の範囲を絞り込んでください。
   |                                                                                                           ^
35 |
36 | この手順に従うことで、テスト結果をJSON形式で出力できるはずです。さらに、プラグインが正しくインストールされている環境か確認し、不足して                                                                …
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:36:11
   |
34 | - **異なる環境での試行**: もし可能であれば、異なる環境で同様の手順を試して問題の範囲を絞り込んでください。
35 |
36 | この手順に従うことで、テスト結果をJSON形式で出力できるはずです。さらに、プラグインが正しくインストールされている環境か確認し、不足して                                                                …
   |                     ^^
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:36:34
   |
34 | - **異なる環境での試行**: もし可能であれば、異なる環境で同様の手順を試して問題の範囲を絞り込んでください。
35 |
36 | この手順に従うことで、テスト結果をJSON形式で出力できるはずです。さらに、プラグインが正しくインストールされている環境か確認し、不足して                                                                …
   |                                                               ^^
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:36:38
   |
34 | - **異なる環境での試行**: もし可能であれば、異なる環境で同様の手順を試して問題の範囲を絞り込んでください。
35 |
36 | この手順に従うことで、テスト結果をJSON形式で出力できるはずです。さらに、プラグインが正しくインストールされている環境か確認し、不足して                                                                …
   |                                                                       ^^
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:36:65
   |
34 | - **異なる環境での試行**: もし可能であれば、異なる環境で同様の手順を試して問題の範囲を絞り込んでください。
35 |
36 | この手順に従うことで、テスト結果をJSON形式で出力できるはずです。さらに、プラグインが正しくインストールされている環境か確認し、不足して                                                                …
   |                                                                                                                             ^^
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:36:94
   |
34 | …
35 | …
36 | …
   ^^
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn1.py:36:95
   |
34 | …
35 | …
36 | …
   | ^
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:8:11
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | ありがとうございます。おっしゃる通り、特定のコマンドラインオプションが認識されない場合、対応するプラグインがインストールされていないこ                                                                  …
   |                     ^^
 9 |
10 | 1. **pytest-json-reportのインストール**:
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:8:19
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | ありがとうございます。おっしゃる通り、特定のコマンドラインオプションが認識されない場合、対応するプラグインがインストールされていないこ                                                                  …
   |                                     ^^
 9 |
10 | 1. **pytest-json-reportのインストール**:
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:8:44
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | ありがとうございます。おっしゃる通り、特定のコマンドラインオプションが認識されない場合、対応するプラグインがインストールされていないこ                                                                  …
   |                                                                                       ^^
 9 |
10 | 1. **pytest-json-reportのインストール**:
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:8:84
   |
 6 | …
 7 | …
 8 | …て、さらに詳細な説明と注意事項を加えさせていただきます。
^  |
 9 | …
10 | …
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:8:88
   |
 6 | …
 7 | …
 8 | …説明と注意事項を加えさせていただきます。
^  |
 9 | …
10 | …
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:8:103
   |
 6 | …
 7 | …
 8 | …
^  |
 9 | …
10 | …
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:8:129
   |
 6 | …
 7 | …
 8 | …
   ^^
 9 | …
10 | …
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:8:130
   |
 6 | …
 7 | …
 8 | …
   | ^
 9 | …
10 | …
   |

invalid-syntax: Invalid annotated assignment target
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:10:1
   |
 8 | ありがとうございます。おっしゃる通り、特定のコマンドラインオプションが認識されない場合、対応するプラグインがインストールされていないこ                                                                  …
 9 |
10 | 1. **pytest-json-reportのインストール**:
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
11 |    - 確認している仮想環境もしくはDocker環境がアクティブな状態で、以下のコマンドを実行します。
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:10:33
   |
 8 | ありがとうございます。おっしゃる通り、特定のコマンドラインオプションが認識されない場合、対応するプラグインがインストールされていないこ                                                                  …
 9 |
10 | 1. **pytest-json-reportのインストール**:
   |                                        ^
11 |    - 確認している仮想環境もしくはDocker環境がアクティブな状態で、以下のコマンドを実行します。
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:10:34
   |
 8 | ありがとうございます。おっしゃる通り、特定のコマンドラインオプションが認識されない場合、対応するプラグインがインストールされていないこ                                                                  …
 9 |
10 | 1. **pytest-json-reportのインストール**:
   |                                         ^
11 |    - 確認している仮想環境もしくはDocker環境がアクティブな状態で、以下のコマンドを実行します。
   |

invalid-syntax: Unexpected indentation
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:11:1
   |
10 | 1. **pytest-json-reportのインストール**:
11 |    - 確認している仮想環境もしくはDocker環境がアクティブな状態で、以下のコマンドを実行します。
   | ^^^
12 |
13 |      ```bash
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:11:38
   |
10 | 1. **pytest-json-reportのインストール**:
11 |    - 確認している仮想環境もしくはDocker環境がアクティブな状態で、以下のコマンドを実行します。
   |                                                                ^^
12 |
13 |      ```bash
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:11:52
   |
10 | 1. **pytest-json-reportのインストール**:
11 |    - 確認している仮想環境もしくはDocker環境がアクティブな状態で、以下のコマンドを実行します。
   |                                                                                            ^^
12 |
13 |      ```bash
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:11:53
   |
10 | 1. **pytest-json-reportのインストール**:
11 |    - 確認している仮想環境もしくはDocker環境がアクティブな状態で、以下のコマンドを実行します。
   |                                                                                              ^
12 |
13 |      ```bash
   |

invalid-syntax: Unexpected indentation
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:13:1
   |
11 |    - 確認している仮想環境もしくはDocker環境がアクティブな状態で、以下のコマンドを実行します。
12 |
13 |      ```bash
   | ^^^^^
14 |      pip install pytest-json-report
15 |      ```
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:13:6
   |
11 |    - 確認している仮想環境もしくはDocker環境がアクティブな状態で、以下のコマンドを実行します。
12 |
13 |      ```bash
   |      ^
14 |      pip install pytest-json-report
15 |      ```
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:13:7
   |
11 |    - 確認している仮想環境もしくはDocker環境がアクティブな状態で、以下のコマンドを実行します。
12 |
13 |      ```bash
   |       ^
14 |      pip install pytest-json-report
15 |      ```
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:13:8
   |
11 |    - 確認している仮想環境もしくはDocker環境がアクティブな状態で、以下のコマンドを実行します。
12 |
13 |      ```bash
   |        ^
14 |      pip install pytest-json-report
15 |      ```
   |

invalid-syntax: Simple statements must be separated by newlines or semicolons
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:14:10
   |
13 |      ```bash
14 |      pip install pytest-json-report
   |          ^^^^^^^
15 |      ```
   |

invalid-syntax: Simple statements must be separated by newlines or semicolons
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:14:18
   |
13 |      ```bash
14 |      pip install pytest-json-report
   |                  ^^^^^^
15 |      ```
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:15:6
   |
13 |      ```bash
14 |      pip install pytest-json-report
15 |      ```
   |      ^
16 |
17 |    - 仮想環境を使用している場合は、必ずその環境をアクティブにしたうえでインストールを行ってください。例えば、`source venv/bin/activate`                                                   …
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:15:7
   |
13 |      ```bash
14 |      pip install pytest-json-report
15 |      ```
   |       ^
16 |
17 |    - 仮想環境を使用している場合は、必ずその環境をアクティブにしたうえでインストールを行ってください。例えば、`source venv/bin/activate`                                                   …
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:15:8
   |
13 |      ```bash
14 |      pip install pytest-json-report
15 |      ```
   |        ^
16 |
17 |    - 仮想環境を使用している場合は、必ずその環境をアクティブにしたうえでインストールを行ってください。例えば、`source venv/bin/activate`                                                   …
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:15:9
   |
13 |      ```bash
14 |      pip install pytest-json-report
15 |      ```
   |         ^
16 |
17 |    - 仮想環境を使用している場合は、必ずその環境をアクティブにしたうえでインストールを行ってください。例えば、`source venv/bin/activate`                                                   …
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:17:4
   |
15 |      ```
16 |
17 |    - 仮想環境を使用している場合は、必ずその環境をアクティブにしたうえでインストールを行ってください。例えば、`source venv/bin/activate`                                                   …
   |    ^
18 |
19 | 2. **pytestコマンドの確認**:
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:17:20
   |
15 |      ```
16 |
17 |    - 仮想環境を使用している場合は、必ずその環境をアクティブにしたうえでインストールを行ってください。例えば、`source venv/bin/activate`                                                   …
   |                                  ^^
18 |
19 | 2. **pytestコマンドの確認**:
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:17:53
   |
15 |      ```
16 |
17 |    - 仮想環境を使用している場合は、必ずその環境をアクティブにしたうえでインストールを行ってください。例えば、`source venv/bin/activate`                                                   …
   |                                                                                                    ^^
18 |
19 | 2. **pytestコマンドの確認**:
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:17:57
   |
15 |      ```
16 |
17 |    - 仮想環境を使用している場合は、必ずその環境をアクティブにしたうえでインストールを行ってください。例えば、`source venv/bin/activate`                                                   …
   |                                                                                                            ^^
18 |
19 | 2. **pytestコマンドの確認**:
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:17:58
   |
15 |      ```
16 |
17 |    - 仮想環境を使用している場合は、必ずその環境をアクティブにしたうえでインストールを行ってください。例えば、`source venv/bin/activate`                                                   …
   |                                                                                                              ^
18 |
19 | 2. **pytestコマンドの確認**:
   |

invalid-syntax: Simple statements must be separated by newlines or semicolons
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:17:66
   |
15 |      ```
16 |
17 |    - 仮想環境を使用している場合は、必ずその環境をアクティブにしたうえでインストールを行ってください。例えば、`source venv/bin/activate`                                                   …
   |                                                                                                                      ^^^^
18 |
19 | 2. **pytestコマンドの確認**:
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:17:83
   |
15 | …
16 | …
17 | …v/bin/activate` のようなコマンドで仮想環境をアクティブにします。
   |                ^
18 | …
19 | …
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:17:108
   |
15 | …
16 | …
17 | …
   ^^
18 | …
19 | …
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:17:109
   |
15 | …
16 | …
17 | …
   | ^
18 | …
19 | …
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:19:1
   |
17 |    - 仮想環境を使用している場合は、必ずその環境をアクティブにしたうえでインストールを行ってください。例えば、`source venv/bin/activate`                                                   …
18 |
19 | 2. **pytestコマンドの確認**:
   | ^
20 |    - 記載されたコマンドで、テストを実行します。オプション `--json-report` と `--json-report-file` を指定することで、テスト結果がJSON形                                          …
   |

invalid-syntax: Invalid annotated assignment target
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:19:1
   |
17 |    - 仮想環境を使用している場合は、必ずその環境をアクティブにしたうえでインストールを行ってください。例えば、`source venv/bin/activate`                                                   …
18 |
19 | 2. **pytestコマンドの確認**:
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^
20 |    - 記載されたコマンドで、テストを実行します。オプション `--json-report` と `--json-report-file` を指定することで、テスト結果がJSON形                                          …
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:19:21
   |
17 |    - 仮想環境を使用している場合は、必ずその環境をアクティブにしたうえでインストールを行ってください。例えば、`source venv/bin/activate`                                                   …
18 |
19 | 2. **pytestコマンドの確認**:
   |                            ^
20 |    - 記載されたコマンドで、テストを実行します。オプション `--json-report` と `--json-report-file` を指定することで、テスト結果がJSON形                                          …
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:19:22
   |
17 |    - 仮想環境を使用している場合は、必ずその環境をアクティブにしたうえでインストールを行ってください。例えば、`source venv/bin/activate`                                                   …
18 |
19 | 2. **pytestコマンドの確認**:
   |                             ^
20 |    - 記載されたコマンドで、テストを実行します。オプション `--json-report` と `--json-report-file` を指定することで、テスト結果がJSON形                                          …
   |

invalid-syntax: Unexpected indentation
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:20:1
   |
19 | 2. **pytestコマンドの確認**:
20 |    - 記載されたコマンドで、テストを実行します。オプション `--json-report` と `--json-report-file` を指定することで、テスト結果がJSON形                                          …
   | ^^^
21 |
22 |      ```bash
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:20:16
   |
19 | 2. **pytestコマンドの確認**:
20 |    - 記載されたコマンドで、テストを実行します。オプション `--json-report` と `--json-report-file` を指定することで、テスト結果がJSON形                                          …
   |                          ^^
21 |
22 |      ```bash
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:20:26
   |
19 | 2. **pytestコマンドの確認**:
20 |    - 記載されたコマンドで、テストを実行します。オプション `--json-report` と `--json-report-file` を指定することで、テスト結果がJSON形                                          …
   |                                              ^^
21 |
22 |      ```bash
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:20:33
   |
19 | 2. **pytestコマンドの確認**:
20 |    - 記載されたコマンドで、テストを実行します。オプション `--json-report` と `--json-report-file` を指定することで、テスト結果がJSON形                                          …
   |                                                           ^
21 |
22 |      ```bash
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:20:47
   |
19 | 2. **pytestコマンドの確認**:
20 |    - 記載されたコマンドで、テストを実行します。オプション `--json-report` と `--json-report-file` を指定することで、テスト結果がJSON形                                          …
   |                                                                         ^
21 |
22 |      ```bash
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:20:51
   |
19 | 2. **pytestコマンドの確認**:
20 |    - 記載されたコマンドで、テストを実行します。オプション `--json-report` と `--json-report-file` を指定することで、テスト結果がJSON形                                          …
   |                                                                              ^
21 |
22 |      ```bash
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:20:70
   |
19 | 2. **pytestコマンドの確認**:
20 |    - 記載されたコマンドで、テストを実行します。オプション `--json-report` と `--json-report-file` を指定することで、テスト結果がJSON形                                          …
   |                                                                                                 ^
21 |
22 |      ```bash
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:20:80
   |
19 | 2. **pytestコマンドの確認**:
20 |    - 記載されたコマンドで、テストを実行します。オプション `--json-report` と `--json-report-file` を指定することで、テスト結果がJSON形                                          …
   |                                                                                                                   ^^
21 |
22 |      ```bash
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:20:107
   |
19 | …
20 | …に保存されます。
   |                 ^^
21 | …
22 | …
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:20:108
   |
19 | …
20 | …保存されます。
   |                 ^
21 | …
22 | …
   |

invalid-syntax: Unexpected indentation
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:22:1
   |
20 |    - 記載されたコマンドで、テストを実行します。オプション `--json-report` と `--json-report-file` を指定することで、テスト結果がJSON形                                          …
21 |
22 |      ```bash
   | ^^^^^
23 |      pytest --json-report --json-report-file=./generated_code/pytest_result.json
24 |      ```
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:22:6
   |
20 |    - 記載されたコマンドで、テストを実行します。オプション `--json-report` と `--json-report-file` を指定することで、テスト結果がJSON形                                          …
21 |
22 |      ```bash
   |      ^
23 |      pytest --json-report --json-report-file=./generated_code/pytest_result.json
24 |      ```
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:22:7
   |
20 |    - 記載されたコマンドで、テストを実行します。オプション `--json-report` と `--json-report-file` を指定することで、テスト結果がJSON形                                          …
21 |
22 |      ```bash
   |       ^
23 |      pytest --json-report --json-report-file=./generated_code/pytest_result.json
24 |      ```
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:22:8
   |
20 |    - 記載されたコマンドで、テストを実行します。オプション `--json-report` と `--json-report-file` を指定することで、テスト結果がJSON形                                          …
21 |
22 |      ```bash
   |        ^
23 |      pytest --json-report --json-report-file=./generated_code/pytest_result.json
24 |      ```
   |

invalid-syntax: Invalid assignment target
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:23:6
   |
22 |      ```bash
23 |      pytest --json-report --json-report-file=./generated_code/pytest_result.json
   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
24 |      ```
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:23:46
   |
22 |      ```bash
23 |      pytest --json-report --json-report-file=./generated_code/pytest_result.json
   |                                              ^
24 |      ```
   |

invalid-syntax: Expected an identifier
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:23:47
   |
22 |      ```bash
23 |      pytest --json-report --json-report-file=./generated_code/pytest_result.json
   |                                               ^
24 |      ```
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:24:6
   |
22 |      ```bash
23 |      pytest --json-report --json-report-file=./generated_code/pytest_result.json
24 |      ```
   |      ^
25 |
26 |    - `./generated_code/` が存在することを確認してください。そのディレクトリが存在していない場合、テスト実行前にディレクトリを作成する必                                                      …
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:24:7
   |
22 |      ```bash
23 |      pytest --json-report --json-report-file=./generated_code/pytest_result.json
24 |      ```
   |       ^
25 |
26 |    - `./generated_code/` が存在することを確認してください。そのディレクトリが存在していない場合、テスト実行前にディレクトリを作成する必                                                      …
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:24:8
   |
22 |      ```bash
23 |      pytest --json-report --json-report-file=./generated_code/pytest_result.json
24 |      ```
   |        ^
25 |
26 |    - `./generated_code/` が存在することを確認してください。そのディレクトリが存在していない場合、テスト実行前にディレクトリを作成する必                                                      …
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:24:9
   |
22 |      ```bash
23 |      pytest --json-report --json-report-file=./generated_code/pytest_result.json
24 |      ```
   |         ^
25 |
26 |    - `./generated_code/` が存在することを確認してください。そのディレクトリが存在していない場合、テスト実行前にディレクトリを作成する必                                                      …
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:26:4
   |
24 |      ```
25 |
26 |    - `./generated_code/` が存在することを確認してください。そのディレクトリが存在していない場合、テスト実行前にディレクトリを作成する必                                                      …
   |    ^
27 |
28 | 3. **プラグインの確認と復旧策**:
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:26:6
   |
24 |      ```
25 |
26 |    - `./generated_code/` が存在することを確認してください。そのディレクトリが存在していない場合、テスト実行前にディレクトリを作成する必                                                      …
   |      ^
27 |
28 | 3. **プラグインの確認と復旧策**:
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:26:7
   |
24 |      ```
25 |
26 |    - `./generated_code/` が存在することを確認してください。そのディレクトリが存在していない場合、テスト実行前にディレクトリを作成する必                                                      …
   |       ^
27 |
28 | 3. **プラグインの確認と復旧策**:
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:26:8
   |
24 |      ```
25 |
26 |    - `./generated_code/` が存在することを確認してください。そのディレクトリが存在していない場合、テスト実行前にディレクトリを作成する必                                                      …
   |        ^
27 |
28 | 3. **プラグインの確認と復旧策**:
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:26:24
   |
24 |      ```
25 |
26 |    - `./generated_code/` が存在することを確認してください。そのディレクトリが存在していない場合、テスト実行前にディレクトリを作成する必                                                      …
   |                        ^
27 |
28 | 3. **プラグインの確認と復旧策**:
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:26:42
   |
24 |      ```
25 |
26 |    - `./generated_code/` が存在することを確認してください。そのディレクトリが存在していない場合、テスト実行前にディレクトリを作成する必                                                      …
   |                                                          ^^
27 |
28 | 3. **プラグインの確認と復旧策**:
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:26:61
   |
24 |      ```
25 |
26 |    - `./generated_code/` が存在することを確認してください。そのディレクトリが存在していない場合、テスト実行前にディレクトリを作成する必                                                      …
   |                                                                                                ^^
27 |
28 | 3. **プラグインの確認と復旧策**:
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:26:87
   |
24 | …
25 | …
26 | …あります。
   |           ^^
27 | …
28 | …
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:26:88
   |
24 | …
25 | …
26 | …ります。
   |           ^
27 | …
28 | …
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:28:1
   |
26 |    - `./generated_code/` が存在することを確認してください。そのディレクトリが存在していない場合、テスト実行前にディレクトリを作成する必                                                      …
27 |
28 | 3. **プラグインの確認と復旧策**:
   | ^
29 |    - 必要なプラグインやモジュールがインストールされているか、不足しているパッケージがないかを確認します。`pip list` でインストールされ                                                          …
   |

invalid-syntax: Invalid annotated assignment target
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:28:1
   |
26 |    - `./generated_code/` が存在することを確認してください。そのディレクトリが存在していない場合、テスト実行前にディレクトリを作成する必                                                      …
27 |
28 | 3. **プラグインの確認と復旧策**:
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
29 |    - 必要なプラグインやモジュールがインストールされているか、不足しているパッケージがないかを確認します。`pip list` でインストールされ                                                          …
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:28:20
   |
26 |    - `./generated_code/` が存在することを確認してください。そのディレクトリが存在していない場合、テスト実行前にディレクトリを作成する必                                                      …
27 |
28 | 3. **プラグインの確認と復旧策**:
   |                                ^
29 |    - 必要なプラグインやモジュールがインストールされているか、不足しているパッケージがないかを確認します。`pip list` でインストールされ                                                          …
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:28:21
   |
26 |    - `./generated_code/` が存在することを確認してください。そのディレクトリが存在していない場合、テスト実行前にディレクトリを作成する必                                                      …
27 |
28 | 3. **プラグインの確認と復旧策**:
   |                                 ^
29 |    - 必要なプラグインやモジュールがインストールされているか、不足しているパッケージがないかを確認します。`pip list` でインストールされ                                                          …
   |

invalid-syntax: Unexpected indentation
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:29:1
   |
28 | 3. **プラグインの確認と復旧策**:
29 |    - 必要なプラグインやモジュールがインストールされているか、不足しているパッケージがないかを確認します。`pip list` でインストールされ                                                          …
   | ^^^
30 |
31 |    - Docker環境で実行している場合、Dockerfileもしくはdocker-compose.yml内で、`pytest-json-report` がインストールされるように設定を追加                                    …
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:29:33
   |
28 | 3. **プラグインの確認と復旧策**:
29 |    - 必要なプラグインやモジュールがインストールされているか、不足しているパッケージがないかを確認します。`pip list` でインストールされ                                                          …
   |                                                            ^^
30 |
31 |    - Docker環境で実行している場合、Dockerfileもしくはdocker-compose.yml内で、`pytest-json-report` がインストールされるように設定を追加                                    …
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:29:55
   |
28 | 3. **プラグインの確認と復旧策**:
29 |    - 必要なプラグインやモジュールがインストールされているか、不足しているパッケージがないかを確認します。`pip list` でインストールされ                                                          …
   |                                                                                                        ^^
30 |
31 |    - Docker環境で実行している場合、Dockerfileもしくはdocker-compose.yml内で、`pytest-json-report` がインストールされるように設定を追加                                    …
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:29:56
   |
28 | 3. **プラグインの確認と復旧策**:
29 |    - 必要なプラグインやモジュールがインストールされているか、不足しているパッケージがないかを確認します。`pip list` でインストールされ                                                          …
   |                                                                                                          ^
30 |
31 |    - Docker環境で実行している場合、Dockerfileもしくはdocker-compose.yml内で、`pytest-json-report` がインストールされるように設定を追加                                    …
   |

invalid-syntax: Simple statements must be separated by newlines or semicolons
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:29:61
   |
28 | 3. **プラグインの確認と復旧策**:
29 |    - 必要なプラグインやモジュールがインストールされているか、不足しているパッケージがないかを確認します。`pip list` でインストールされ                                                          …
   |                                                                                                               ^^^^
30 |
31 |    - Docker環境で実行している場合、Dockerfileもしくはdocker-compose.yml内で、`pytest-json-report` がインストールされるように設定を追加                                    …
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:29:65
   |
28 | 3. **プラグインの確認と復旧策**:
29 |    - 必要なプラグインやモジュールがインストールされているか、不足しているパッケージがないかを確認します。`pip list` でインストールされ                                                          …
   |                                                                                                                   ^
30 |
31 |    - Docker環境で実行している場合、Dockerfileもしくはdocker-compose.yml内で、`pytest-json-report` がインストールされるように設定を追加                                    …
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:29:90
   |
28 | …
29 | …-json-report` が含まれているか確認してください。
^  |
30 | …
31 | …してください。
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:29:91
   |
28 | …
29 | …json-report` が含まれているか確認してください。
^  |
30 | …
31 | …てください。
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:29:110
   |
28 | …
29 | …るか確認してください。
^  |
30 | …
31 | …
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:29:128
   |
28 | …
29 | …
   ^^
30 | …
31 | …
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:29:129
   |
28 | …
29 | …
   | ^
30 | …
31 | …
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:31:23
   |
29 |    - 必要なプラグインやモジュールがインストールされているか、不足しているパッケージがないかを確認します。`pip list` でインストールされ                                                          …
30 |
31 |    - Docker環境で実行している場合、Dockerfileもしくはdocker-compose.yml内で、`pytest-json-report` がインストールされるように設定を追加                                    …
   |                                  ^^
32 |
33 | 4. **テスト実行のログ確認**:
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:31:58
   |
29 |    - 必要なプラグインやモジュールがインストールされているか、不足しているパッケージがないかを確認します。`pip list` でインストールされ                                                          …
30 |
31 |    - Docker環境で実行している場合、Dockerfileもしくはdocker-compose.yml内で、`pytest-json-report` がインストールされるように設定を追加                                    …
   |                                                                            ^^
32 |
33 | 4. **テスト実行のログ確認**:
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:31:59
   |
29 |    - 必要なプラグインやモジュールがインストールされているか、不足しているパッケージがないかを確認します。`pip list` でインストールされ                                                          …
30 |
31 |    - Docker環境で実行している場合、Dockerfileもしくはdocker-compose.yml内で、`pytest-json-report` がインストールされるように設定を追加                                    …
   |                                                                              ^
32 |
33 | 4. **テスト実行のログ確認**:
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:31:78
   |
29 |    - 必要なプラグインやモジュールがインストールされているか、不足しているパッケージがないかを確認します。`pip list` でインストールされ                                                          …
30 |
31 |    - Docker環境で実行している場合、Dockerfileもしくはdocker-compose.yml内で、`pytest-json-report` がインストールされるように設定を追加                                    …
   |                                                                                                 ^
32 |
33 | 4. **テスト実行のログ確認**:
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:31:104
   |
29 | …ージを一覧表示し、`pytest-json-report` が含まれているか確認してください。
30 | …
31 | …ンストールされるように設定を追加してください。
   |                                               ^^
32 | …
33 | …
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:31:105
   |
29 | …ジを一覧表示し、`pytest-json-report` が含まれているか確認してください。
30 | …
31 | …ストールされるように設定を追加してください。
   |                                               ^
32 | …
33 | …
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:33:1
   |
31 |    - Docker環境で実行している場合、Dockerfileもしくはdocker-compose.yml内で、`pytest-json-report` がインストールされるように設定を追加                                    …
32 |
33 | 4. **テスト実行のログ確認**:
   | ^
34 |    - テスト実行後に生成されたJSONファイルを確認します。テストの詳細結果や、成功・失敗の情報が出力されています。
35 |    - もしエラーが続く場合は、`pytest`のログを細かく確認し、エラーメッセージに基づいて問題を特定します。
   |

invalid-syntax: Invalid annotated assignment target
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:33:1
   |
31 |    - Docker環境で実行している場合、Dockerfileもしくはdocker-compose.yml内で、`pytest-json-report` がインストールされるように設定を追加                                    …
32 |
33 | 4. **テスト実行のログ確認**:
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^
34 |    - テスト実行後に生成されたJSONファイルを確認します。テストの詳細結果や、成功・失敗の情報が出力されています。
35 |    - もしエラーが続く場合は、`pytest`のログを細かく確認し、エラーメッセージに基づいて問題を特定します。
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:33:18
   |
31 |    - Docker環境で実行している場合、Dockerfileもしくはdocker-compose.yml内で、`pytest-json-report` がインストールされるように設定を追加                                    …
32 |
33 | 4. **テスト実行のログ確認**:
   |                            ^
34 |    - テスト実行後に生成されたJSONファイルを確認します。テストの詳細結果や、成功・失敗の情報が出力されています。
35 |    - もしエラーが続く場合は、`pytest`のログを細かく確認し、エラーメッセージに基づいて問題を特定します。
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:33:19
   |
31 |    - Docker環境で実行している場合、Dockerfileもしくはdocker-compose.yml内で、`pytest-json-report` がインストールされるように設定を追加                                    …
32 |
33 | 4. **テスト実行のログ確認**:
   |                             ^
34 |    - テスト実行後に生成されたJSONファイルを確認します。テストの詳細結果や、成功・失敗の情報が出力されています。
35 |    - もしエラーが続く場合は、`pytest`のログを細かく確認し、エラーメッセージに基づいて問題を特定します。
   |

invalid-syntax: Unexpected indentation
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:34:1
   |
33 | 4. **テスト実行のログ確認**:
34 |    - テスト実行後に生成されたJSONファイルを確認します。テストの詳細結果や、成功・失敗の情報が出力されています。
   | ^^^
35 |    - もしエラーが続く場合は、`pytest`のログを細かく確認し、エラーメッセージに基づいて問題を特定します。
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:34:32
   |
33 | 4. **テスト実行のログ確認**:
34 |    - テスト実行後に生成されたJSONファイルを確認します。テストの詳細結果や、成功・失敗の情報が出力されています。
   |                                                      ^^
35 |    - もしエラーが続く場合は、`pytest`のログを細かく確認し、エラーメッセージに基づいて問題を特定します。
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:34:42
   |
33 | 4. **テスト実行のログ確認**:
34 |    - テスト実行後に生成されたJSONファイルを確認します。テストの詳細結果や、成功・失敗の情報が出力されています。
   |                                                                          ^^
35 |    - もしエラーが続く場合は、`pytest`のログを細かく確認し、エラーメッセージに基づいて問題を特定します。
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:34:60
   |
33 | 4. **テスト実行のログ確認**:
34 |    - テスト実行後に生成されたJSONファイルを確認します。テストの詳細結果や、成功・失敗の情報が出力されています。
   |                                                                                                              ^^
35 |    - もしエラーが続く場合は、`pytest`のログを細かく確認し、エラーメッセージに基づいて問題を特定します。
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:34:61
   |
33 | 4. **テスト実行のログ確認**:
34 |    - テスト実行後に生成されたJSONファイルを確認します。テストの詳細結果や、成功・失敗の情報が出力されています。
   |                                                                                                                ^
35 |    - もしエラーが続く場合は、`pytest`のログを細かく確認し、エラーメッセージに基づいて問題を特定します。
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:35:17
   |
33 | 4. **テスト実行のログ確認**:
34 |    - テスト実行後に生成されたJSONファイルを確認します。テストの詳細結果や、成功・失敗の情報が出力されています。
35 |    - もしエラーが続く場合は、`pytest`のログを細かく確認し、エラーメッセージに基づいて問題を特定します。
   |                            ^^
36 |
37 | これらの手順に従うことで、JSON形式のレポートを生成するための環境が整うはずです。問題が解決しない場合は、エラーメッセージやログをもう一                                                                …
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:35:18
   |
33 | 4. **テスト実行のログ確認**:
34 |    - テスト実行後に生成されたJSONファイルを確認します。テストの詳細結果や、成功・失敗の情報が出力されています。
35 |    - もしエラーが続く場合は、`pytest`のログを細かく確認し、エラーメッセージに基づいて問題を特定します。
   |                              ^
36 |
37 | これらの手順に従うことで、JSON形式のレポートを生成するための環境が整うはずです。問題が解決しない場合は、エラーメッセージやログをもう一                                                                …
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:35:25
   |
33 | 4. **テスト実行のログ確認**:
34 |    - テスト実行後に生成されたJSONファイルを確認します。テストの詳細結果や、成功・失敗の情報が出力されています。
35 |    - もしエラーが続く場合は、`pytest`のログを細かく確認し、エラーメッセージに基づいて問題を特定します。
   |                                     ^
36 |
37 | これらの手順に従うことで、JSON形式のレポートを生成するための環境が整うはずです。問題が解決しない場合は、エラーメッセージやログをもう一                                                                …
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:35:36
   |
33 | 4. **テスト実行のログ確認**:
34 |    - テスト実行後に生成されたJSONファイルを確認します。テストの詳細結果や、成功・失敗の情報が出力されています。
35 |    - もしエラーが続く場合は、`pytest`のログを細かく確認し、エラーメッセージに基づいて問題を特定します。
   |                                                          ^^
36 |
37 | これらの手順に従うことで、JSON形式のレポートを生成するための環境が整うはずです。問題が解決しない場合は、エラーメッセージやログをもう一                                                                …
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:35:58
   |
33 | 4. **テスト実行のログ確認**:
34 |    - テスト実行後に生成されたJSONファイルを確認します。テストの詳細結果や、成功・失敗の情報が出力されています。
35 |    - もしエラーが続く場合は、`pytest`のログを細かく確認し、エラーメッセージに基づいて問題を特定します。
   |                                                                                                      ^^
36 |
37 | これらの手順に従うことで、JSON形式のレポートを生成するための環境が整うはずです。問題が解決しない場合は、エラーメッセージやログをもう一                                                                …
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:35:59
   |
33 | 4. **テスト実行のログ確認**:
34 |    - テスト実行後に生成されたJSONファイルを確認します。テストの詳細結果や、成功・失敗の情報が出力されています。
35 |    - もしエラーが続く場合は、`pytest`のログを細かく確認し、エラーメッセージに基づいて問題を特定します。
   |                                                                                                        ^
36 |
37 | これらの手順に従うことで、JSON形式のレポートを生成するための環境が整うはずです。問題が解決しない場合は、エラーメッセージやログをもう一                                                                …
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:37:1
   |
35 |    - もしエラーが続く場合は、`pytest`のログを細かく確認し、エラーメッセージに基づいて問題を特定します。
36 |
37 | これらの手順に従うことで、JSON形式のレポートを生成するための環境が整うはずです。問題が解決しない場合は、エラーメッセージやログをもう一                                                                …
   | ^^
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:37:13
   |
35 |    - もしエラーが続く場合は、`pytest`のログを細かく確認し、エラーメッセージに基づいて問題を特定します。
36 |
37 | これらの手順に従うことで、JSON形式のレポートを生成するための環境が整うはずです。問題が解決しない場合は、エラーメッセージやログをもう一                                                                …
   |                         ^^
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:37:42
   |
35 |    - もしエラーが続く場合は、`pytest`のログを細かく確認し、エラーメッセージに基づいて問題を特定します。
36 |
37 | これらの手順に従うことで、JSON形式のレポートを生成するための環境が整うはずです。問題が解決しない場合は、エラーメッセージやログをもう一                                                                …
   |                                                                               ^^
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:37:54
   |
35 |    - もしエラーが続く場合は、`pytest`のログを細かく確認し、エラーメッセージに基づいて問題を特定します。
36 |
37 | これらの手順に従うことで、JSON形式のレポートを生成するための環境が整うはずです。問題が解決しない場合は、エラーメッセージやログをもう一                                                                …
   |                                                                                                       ^^
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:37:74
   |
35 | …
36 | …
37 | …な問題箇所を特定することが重要です。また、環境ごとのパッケージ管理や依存関係は、Dockerや仮想環境内での整合性を保つことが鍵となります                                                               …
^  |
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:37:95
   |
35 | …
36 | …
37 | …ckerや仮想環境内での整合性を保つことが鍵となります。
^  |
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:37:98
   |
35 | …
36 | …
37 | …想環境内での整合性を保つことが鍵となります。
^  |
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:37:117
   |
35 | …
36 | …
37 | …
^  |
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:37:147
   |
35 | …
36 | …
37 | …
   ^^
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn2.py:37:148
   |
35 | …
36 | …
37 | …
   | ^
   |

invalid-syntax: Invalid annotated assignment target
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn3.py:1:1
  |
1 | 1. **日本語コメントの英語化**:
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |

invalid-syntax: Expected an expression
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn3.py:1:19
  |
1 | 1. **日本語コメントの英語化**:
  |                              ^
  |

invalid-syntax: Expected an expression
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn3.py:1:20
  |
1 | 1. **日本語コメントの英語化**:
  |                               ^
  |

invalid-syntax: Invalid annotated assignment target
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn3.py:5:1
  |
5 | 2. **ファイルの文字コード確認**:
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
6 |
7 | 3. **コード全体の確認**:
  |

invalid-syntax: Expected an expression
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn3.py:5:20
  |
5 | 2. **ファイルの文字コード確認**:
  |                                ^
6 |
7 | 3. **コード全体の確認**:
  |

invalid-syntax: Expected an expression
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn3.py:5:21
  |
5 | 2. **ファイルの文字コード確認**:
  |                                 ^
6 |
7 | 3. **コード全体の確認**:
  |

invalid-syntax: Invalid annotated assignment target
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn3.py:7:1
  |
5 | 2. **ファイルの文字コード確認**:
6 |
7 | 3. **コード全体の確認**:
  | ^^^^^^^^^^^^^^^^^^^^^^^
8 |
9 | 4. **自動化ツールの使用**:
  |

invalid-syntax: Expected an expression
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn3.py:7:16
  |
5 | 2. **ファイルの文字コード確認**:
6 |
7 | 3. **コード全体の確認**:
  |                        ^
8 |
9 | 4. **自動化ツールの使用**:
  |

invalid-syntax: Expected an expression
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn3.py:7:17
  |
5 | 2. **ファイルの文字コード確認**:
6 |
7 | 3. **コード全体の確認**:
  |                         ^
8 |
9 | 4. **自動化ツールの使用**:
  |

invalid-syntax: Invalid annotated assignment target
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn3.py:9:1
   |
 7 | 3. **コード全体の確認**:
 8 |
 9 | 4. **自動化ツールの使用**:
   | ^^^^^^^^^^^^^^^^^^^^^^^^^
10 |
11 | 5. **テストを実行**:
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn3.py:9:17
   |
 7 | 3. **コード全体の確認**:
 8 |
 9 | 4. **自動化ツールの使用**:
   |                          ^
10 |
11 | 5. **テストを実行**:
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn3.py:9:18
   |
 7 | 3. **コード全体の確認**:
 8 |
 9 | 4. **自動化ツールの使用**:
   |                           ^
10 |
11 | 5. **テストを実行**:
   |

invalid-syntax: Invalid annotated assignment target
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn3.py:11:1
   |
 9 | 4. **自動化ツールの使用**:
10 |
11 | 5. **テストを実行**:
   | ^^^^^^^^^^^^^^^^^^^
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn3.py:11:14
   |
 9 | 4. **自動化ツールの使用**:
10 |
11 | 5. **テストを実行**:
   |                    ^
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn3.py:11:15
   |
 9 | 4. **自動化ツールの使用**:
10 |
11 | 5. **テストを実行**:
   |                     ^
   |

invalid-syntax: Invalid annotated assignment target
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn4.py:1:1
  |
1 | 1. **ソースファイルの確認**:
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^
2 |
3 | 2. **日本語コメントの取扱**:
  |

invalid-syntax: Expected an expression
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn4.py:1:18
  |
1 | 1. **ソースファイルの確認**:
  |                            ^
2 |
3 | 2. **日本語コメントの取扱**:
  |

invalid-syntax: Expected an expression
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn4.py:1:19
  |
1 | 1. **ソースファイルの確認**:
  |                             ^
2 |
3 | 2. **日本語コメントの取扱**:
  |

invalid-syntax: Invalid annotated assignment target
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn4.py:3:1
  |
1 | 1. **ソースファイルの確認**:
2 |
3 | 2. **日本語コメントの取扱**:
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^
4 |
5 | 3. **シンタックスエラーの修正**:
  |

invalid-syntax: Expected an expression
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn4.py:3:18
  |
1 | 1. **ソースファイルの確認**:
2 |
3 | 2. **日本語コメントの取扱**:
  |                            ^
4 |
5 | 3. **シンタックスエラーの修正**:
  |

invalid-syntax: Expected an expression
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn4.py:3:19
  |
1 | 1. **ソースファイルの確認**:
2 |
3 | 2. **日本語コメントの取扱**:
  |                             ^
4 |
5 | 3. **シンタックスエラーの修正**:
  |

invalid-syntax: Invalid annotated assignment target
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn4.py:5:1
  |
3 | 2. **日本語コメントの取扱**:
4 |
5 | 3. **シンタックスエラーの修正**:
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
6 |
7 | 4. **再テスト**:
  |

invalid-syntax: Expected an expression
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn4.py:5:20
  |
3 | 2. **日本語コメントの取扱**:
4 |
5 | 3. **シンタックスエラーの修正**:
  |                                ^
6 |
7 | 4. **再テスト**:
  |

invalid-syntax: Expected an expression
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn4.py:5:21
  |
3 | 2. **日本語コメントの取扱**:
4 |
5 | 3. **シンタックスエラーの修正**:
  |                                 ^
6 |
7 | 4. **再テスト**:
  |

invalid-syntax: Invalid annotated assignment target
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn4.py:7:1
  |
5 | 3. **シンタックスエラーの修正**:
6 |
7 | 4. **再テスト**:
  | ^^^^^^^^^^^^^^^
8 |
9 | 5. **静的解析ツールの使用**:
  |

invalid-syntax: Expected an expression
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn4.py:7:12
  |
5 | 3. **シンタックスエラーの修正**:
6 |
7 | 4. **再テスト**:
  |                ^
8 |
9 | 5. **静的解析ツールの使用**:
  |

invalid-syntax: Expected an expression
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn4.py:7:13
  |
5 | 3. **シンタックスエラーの修正**:
6 |
7 | 4. **再テスト**:
  |                 ^
8 |
9 | 5. **静的解析ツールの使用**:
  |

invalid-syntax: Invalid annotated assignment target
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn4.py:9:1
  |
7 | 4. **再テスト**:
8 |
9 | 5. **静的解析ツールの使用**:
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |

invalid-syntax: Expected an expression
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn4.py:9:18
  |
7 | 4. **再テスト**:
8 |
9 | 5. **静的解析ツールの使用**:
  |                            ^
  |

invalid-syntax: Expected an expression
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/doc_turn4.py:9:19
  |
7 | 4. **再テスト**:
8 |
9 | 5. **静的解析ツールの使用**:
  |                             ^
  |

F821 Undefined name `ccxt`
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/example.py:5:16
  |
3 | def fetch_market_data():
4 |     # Binance取引所のインスタンスを作成します
5 |     exchange = ccxt.binance()
  |                ^^^^
6 |     
7 |     # 'USD/JPY'ペアの1分足のOHLCVデータを取得します
  |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/feature_engineering.py:8:1
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | ```python
   | ^
 9 | # feature_engineering.py
10 | import pandas as pd
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/feature_engineering.py:8:2
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | ```python
   |  ^
 9 | # feature_engineering.py
10 | import pandas as pd
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/feature_engineering.py:8:3
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | ```python
   |   ^
 9 | # feature_engineering.py
10 | import pandas as pd
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/feature_engineering.py:18:1
   |
16 |     # Implement feature engineering logic here
17 |     features.to_csv(FEATURES_PATH, index=False)
18 | ```
   | ^
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/feature_engineering.py:18:2
   |
16 |     # Implement feature engineering logic here
17 |     features.to_csv(FEATURES_PATH, index=False)
18 | ```
   |  ^
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/feature_engineering.py:18:3
   |
16 |     # Implement feature engineering logic here
17 |     features.to_csv(FEATURES_PATH, index=False)
18 | ```
   |   ^
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/feature_engineering.py:18:4
   |
16 |     # Implement feature engineering logic here
17 |     features.to_csv(FEATURES_PATH, index=False)
18 | ```
   |    ^
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:8:33
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | 設計概要をNoctriaガイドラインや設計プロセスと関連付けつつ、戦略の詳細についての説明を進めてまいります。協力して開発を進めるために、戦略                                                               …
   |                                                          ^^
 9 |
10 | ## 設計詳細
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:8:55
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | 設計概要をNoctriaガイドラインや設計プロセスと関連付けつつ、戦略の詳細についての説明を進めてまいります。協力して開発を進めるために、戦略                                                               …
   |                                                                                                      ^^
 9 |
10 | ## 設計詳細
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:8:69
   |
 6 | …
 7 | …
 8 | …るために、戦略の各要素がどのようにガイドラインに従っているかを強調しました。
   |           ^^
 9 | …
10 | …
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:8:102
   |
 6 | …
 7 | …
 8 | …
   ^^
 9 | …
10 | …
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:8:103
   |
 6 | …
 7 | …
 8 | …
   | ^
 9 | …
10 | …
   |

invalid-syntax: Invalid annotated assignment target
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:15:1
   |
14 | #### トレンドフォロー戦略
15 | - **目的**: トレンドフォロー戦略により、相場のトレンドを追随し、リスクを最小限に抑えつつ利益の最大化を狙います。
   | ^^^^^^^^^^
16 | - **ツール**: 移動平均線（SMA）を用い、価格の長短期トレンドを捉えて売買シグナルを生成。
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:15:3
   |
14 | #### トレンドフォロー戦略
15 | - **目的**: トレンドフォロー戦略により、相場のトレンドを追随し、リスクを最小限に抑えつつ利益の最大化を狙います。
   |   ^^
16 | - **ツール**: 移動平均線（SMA）を用い、価格の長短期トレンドを捉えて売買シグナルを生成。
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:15:9
   |
14 | #### トレンドフォロー戦略
15 | - **目的**: トレンドフォロー戦略により、相場のトレンドを追随し、リスクを最小限に抑えつつ利益の最大化を狙います。
   |           ^
16 | - **ツール**: 移動平均線（SMA）を用い、価格の長短期トレンドを捉えて売買シグナルを生成。
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:15:24
   |
14 | #### トレンドフォロー戦略
15 | - **目的**: トレンドフォロー戦略により、相場のトレンドを追随し、リスクを最小限に抑えつつ利益の最大化を狙います。
   |                                       ^^
16 | - **ツール**: 移動平均線（SMA）を用い、価格の長短期トレンドを捉えて売買シグナルを生成。
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:15:36
   |
14 | #### トレンドフォロー戦略
15 | - **目的**: トレンドフォロー戦略により、相場のトレンドを追随し、リスクを最小限に抑えつつ利益の最大化を狙います。
   |                                                               ^^
16 | - **ツール**: 移動平均線（SMA）を用い、価格の長短期トレンドを捉えて売買シグナルを生成。
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:15:60
   |
14 | #### トレンドフォロー戦略
15 | - **目的**: トレンドフォロー戦略により、相場のトレンドを追随し、リスクを最小限に抑えつつ利益の最大化を狙います。
   |                                                                                                               ^^
16 | - **ツール**: 移動平均線（SMA）を用い、価格の長短期トレンドを捉えて売買シグナルを生成。
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:15:61
   |
14 | #### トレンドフォロー戦略
15 | - **目的**: トレンドフォロー戦略により、相場のトレンドを追随し、リスクを最小限に抑えつつ利益の最大化を狙います。
   |                                                                                                                 ^
16 | - **ツール**: 移動平均線（SMA）を用い、価格の長短期トレンドを捉えて売買シグナルを生成。
   |

invalid-syntax: Invalid annotated assignment target
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:16:1
   |
14 | #### トレンドフォロー戦略
15 | - **目的**: トレンドフォロー戦略により、相場のトレンドを追随し、リスクを最小限に抑えつつ利益の最大化を狙います。
16 | - **ツール**: 移動平均線（SMA）を用い、価格の長短期トレンドを捉えて売買シグナルを生成。
   | ^^^^^^^^^^^^
17 |
18 | #### リスク管理
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:16:3
   |
14 | #### トレンドフォロー戦略
15 | - **目的**: トレンドフォロー戦略により、相場のトレンドを追随し、リスクを最小限に抑えつつ利益の最大化を狙います。
16 | - **ツール**: 移動平均線（SMA）を用い、価格の長短期トレンドを捉えて売買シグナルを生成。
   |   ^^
17 |
18 | #### リスク管理
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:16:10
   |
14 | #### トレンドフォロー戦略
15 | - **目的**: トレンドフォロー戦略により、相場のトレンドを追随し、リスクを最小限に抑えつつ利益の最大化を狙います。
16 | - **ツール**: 移動平均線（SMA）を用い、価格の長短期トレンドを捉えて売買シグナルを生成。
   |             ^
17 |
18 | #### リスク管理
   |

invalid-syntax: Got unexpected token （
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:16:17
   |
14 | #### トレンドフォロー戦略
15 | - **目的**: トレンドフォロー戦略により、相場のトレンドを追随し、リスクを最小限に抑えつつ利益の最大化を狙います。
16 | - **ツール**: 移動平均線（SMA）を用い、価格の長短期トレンドを捉えて売買シグナルを生成。
   |                         ^^
17 |
18 | #### リスク管理
   |

invalid-syntax: Got unexpected token ）
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:16:21
   |
14 | #### トレンドフォロー戦略
15 | - **目的**: トレンドフォロー戦略により、相場のトレンドを追随し、リスクを最小限に抑えつつ利益の最大化を狙います。
16 | - **ツール**: 移動平均線（SMA）を用い、価格の長短期トレンドを捉えて売買シグナルを生成。
   |                              ^^
17 |
18 | #### リスク管理
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:16:25
   |
14 | #### トレンドフォロー戦略
15 | - **目的**: トレンドフォロー戦略により、相場のトレンドを追随し、リスクを最小限に抑えつつ利益の最大化を狙います。
16 | - **ツール**: 移動平均線（SMA）を用い、価格の長短期トレンドを捉えて売買シグナルを生成。
   |                                      ^^
17 |
18 | #### リスク管理
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:16:49
   |
14 | #### トレンドフォロー戦略
15 | - **目的**: トレンドフォロー戦略により、相場のトレンドを追随し、リスクを最小限に抑えつつ利益の最大化を狙います。
16 | - **ツール**: 移動平均線（SMA）を用い、価格の長短期トレンドを捉えて売買シグナルを生成。
   |                                                                                      ^^
17 |
18 | #### リスク管理
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:16:50
   |
14 | #### トレンドフォロー戦略
15 | - **目的**: トレンドフォロー戦略により、相場のトレンドを追随し、リスクを最小限に抑えつつ利益の最大化を狙います。
16 | - **ツール**: 移動平均線（SMA）を用い、価格の長短期トレンドを捉えて売買シグナルを生成。
   |                                                                                        ^
17 |
18 | #### リスク管理
   |

invalid-syntax: Invalid annotated assignment target
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:19:1
   |
18 | #### リスク管理
19 | - **ストップロスと利益確定手法**: 目標価格に対する一定比率の変動で売買シグナルを出し、損失の限定と利益の確保を図ります。
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
20 | - **実装**: `risk_management.py`で実装されています。
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:19:3
   |
18 | #### リスク管理
19 | - **ストップロスと利益確定手法**: 目標価格に対する一定比率の変動で売買シグナルを出し、損失の限定と利益の確保を図ります。
   |   ^^
20 | - **実装**: `risk_management.py`で実装されています。
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:19:20
   |
18 | #### リスク管理
19 | - **ストップロスと利益確定手法**: 目標価格に対する一定比率の変動で売買シグナルを出し、損失の限定と利益の確保を図ります。
   |                                 ^
20 | - **実装**: `risk_management.py`で実装されています。
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:19:47
   |
18 | #### リスク管理
19 | - **ストップロスと利益確定手法**: 目標価格に対する一定比率の変動で売買シグナルを出し、損失の限定と利益の確保を図ります。
   |                                                                                     ^^
20 | - **実装**: `risk_management.py`で実装されています。
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:19:64
   |
18 | #### リスク管理
19 | - **ストップロスと利益確定手法**: 目標価格に対する一定比率の変動で売買シグナルを出し、損失の限定と利益の確保を図ります。
   |                                                                                                                       ^^
20 | - **実装**: `risk_management.py`で実装されています。
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:19:65
   |
18 | #### リスク管理
19 | - **ストップロスと利益確定手法**: 目標価格に対する一定比率の変動で売買シグナルを出し、損失の限定と利益の確保を図ります。
   |                                                                                                                         ^
20 | - **実装**: `risk_management.py`で実装されています。
   |

invalid-syntax: Invalid annotated assignment target
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:20:1
   |
18 | #### リスク管理
19 | - **ストップロスと利益確定手法**: 目標価格に対する一定比率の変動で売買シグナルを出し、損失の限定と利益の確保を図ります。
20 | - **実装**: `risk_management.py`で実装されています。
   | ^^^^^^^^^^
21 |
22 | ### 2. 使用技術
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:20:3
   |
18 | #### リスク管理
19 | - **ストップロスと利益確定手法**: 目標価格に対する一定比率の変動で売買シグナルを出し、損失の限定と利益の確保を図ります。
20 | - **実装**: `risk_management.py`で実装されています。
   |   ^^
21 |
22 | ### 2. 使用技術
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:20:9
   |
18 | #### リスク管理
19 | - **ストップロスと利益確定手法**: 目標価格に対する一定比率の変動で売買シグナルを出し、損失の限定と利益の確保を図ります。
20 | - **実装**: `risk_management.py`で実装されています。
   |           ^
21 |
22 | ### 2. 使用技術
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:20:11
   |
18 | #### リスク管理
19 | - **ストップロスと利益確定手法**: 目標価格に対する一定比率の変動で売買シグナルを出し、損失の限定と利益の確保を図ります。
20 | - **実装**: `risk_management.py`で実装されています。
   |             ^
21 |
22 | ### 2. 使用技術
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:20:30
   |
18 | #### リスク管理
19 | - **ストップロスと利益確定手法**: 目標価格に対する一定比率の変動で売買シグナルを出し、損失の限定と利益の確保を図ります。
20 | - **実装**: `risk_management.py`で実装されています。
   |                                ^
21 |
22 | ### 2. 使用技術
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:20:40
   |
18 | #### リスク管理
19 | - **ストップロスと利益確定手法**: 目標価格に対する一定比率の変動で売買シグナルを出し、損失の限定と利益の確保を図ります。
20 | - **実装**: `risk_management.py`で実装されています。
   |                                                   ^^
21 |
22 | ### 2. 使用技術
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:20:41
   |
18 | #### リスク管理
19 | - **ストップロスと利益確定手法**: 目標価格に対する一定比率の変動で売買シグナルを出し、損失の限定と利益の確保を図ります。
20 | - **実装**: `risk_management.py`で実装されています。
   |                                                     ^
21 |
22 | ### 2. 使用技術
   |

invalid-syntax: Invalid annotated assignment target
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:25:1
   |
24 | #### 技術スタック
25 | - **Pythonとライブラリ**: データ操作にpandas、数値計算にnumpy、テクニカル分析にta-lib。
   | ^^^^^^^^^^^^^^^^^^^^^^^^
26 | - **フレームワーク**: Docker上でAirflowを運用し、スケジューリングとトレード履歴の管理。
27 | - **GUI管理**: noctria_guiにより、システムの稼働状況を一元管理。
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:25:3
   |
24 | #### 技術スタック
25 | - **Pythonとライブラリ**: データ操作にpandas、数値計算にnumpy、テクニカル分析にta-lib。
   |   ^^
26 | - **フレームワーク**: Docker上でAirflowを運用し、スケジューリングとトレード履歴の管理。
27 | - **GUI管理**: noctria_guiにより、システムの稼働状況を一元管理。
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:25:19
   |
24 | #### 技術スタック
25 | - **Pythonとライブラリ**: データ操作にpandas、数値計算にnumpy、テクニカル分析にta-lib。
   |                         ^
26 | - **フレームワーク**: Docker上でAirflowを運用し、スケジューリングとトレード履歴の管理。
27 | - **GUI管理**: noctria_guiにより、システムの稼働状況を一元管理。
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:25:33
   |
24 | #### 技術スタック
25 | - **Pythonとライブラリ**: データ操作にpandas、数値計算にnumpy、テクニカル分析にta-lib。
   |                                             ^^
26 | - **フレームワーク**: Docker上でAirflowを運用し、スケジューリングとトレード履歴の管理。
27 | - **GUI管理**: noctria_guiにより、システムの稼働状況を一元管理。
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:25:44
   |
24 | #### 技術スタック
25 | - **Pythonとライブラリ**: データ操作にpandas、数値計算にnumpy、テクニカル分析にta-lib。
   |                                                              ^^
26 | - **フレームワーク**: Docker上でAirflowを運用し、スケジューリングとトレード履歴の管理。
27 | - **GUI管理**: noctria_guiにより、システムの稼働状況を一元管理。
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:25:59
   |
24 | #### 技術スタック
25 | - **Pythonとライブラリ**: データ操作にpandas、数値計算にnumpy、テクニカル分析にta-lib。
   |                                                                                      ^^
26 | - **フレームワーク**: Docker上でAirflowを運用し、スケジューリングとトレード履歴の管理。
27 | - **GUI管理**: noctria_guiにより、システムの稼働状況を一元管理。
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:25:60
   |
24 | #### 技術スタック
25 | - **Pythonとライブラリ**: データ操作にpandas、数値計算にnumpy、テクニカル分析にta-lib。
   |                                                                                        ^
26 | - **フレームワーク**: Docker上でAirflowを運用し、スケジューリングとトレード履歴の管理。
27 | - **GUI管理**: noctria_guiにより、システムの稼働状況を一元管理。
   |

invalid-syntax: Invalid annotated assignment target
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:26:1
   |
24 | #### 技術スタック
25 | - **Pythonとライブラリ**: データ操作にpandas、数値計算にnumpy、テクニカル分析にta-lib。
26 | - **フレームワーク**: Docker上でAirflowを運用し、スケジューリングとトレード履歴の管理。
   | ^^^^^^^^^^^^^^^^^^^^
27 | - **GUI管理**: noctria_guiにより、システムの稼働状況を一元管理。
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:26:3
   |
24 | #### 技術スタック
25 | - **Pythonとライブラリ**: データ操作にpandas、数値計算にnumpy、テクニカル分析にta-lib。
26 | - **フレームワーク**: Docker上でAirflowを運用し、スケジューリングとトレード履歴の管理。
   |   ^^
27 | - **GUI管理**: noctria_guiにより、システムの稼働状況を一元管理。
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:26:14
   |
24 | #### 技術スタック
25 | - **Pythonとライブラリ**: データ操作にpandas、数値計算にnumpy、テクニカル分析にta-lib。
26 | - **フレームワーク**: Docker上でAirflowを運用し、スケジューリングとトレード履歴の管理。
   |                     ^
27 | - **GUI管理**: noctria_guiにより、システムの稼働状況を一元管理。
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:26:35
   |
24 | #### 技術スタック
25 | - **Pythonとライブラリ**: データ操作にpandas、数値計算にnumpy、テクニカル分析にta-lib。
26 | - **フレームワーク**: Docker上でAirflowを運用し、スケジューリングとトレード履歴の管理。
   |                                                ^^
27 | - **GUI管理**: noctria_guiにより、システムの稼働状況を一元管理。
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:26:54
   |
24 | #### 技術スタック
25 | - **Pythonとライブラリ**: データ操作にpandas、数値計算にnumpy、テクニカル分析にta-lib。
26 | - **フレームワーク**: Docker上でAirflowを運用し、スケジューリングとトレード履歴の管理。
   |                                                                                      ^^
27 | - **GUI管理**: noctria_guiにより、システムの稼働状況を一元管理。
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:26:55
   |
24 | #### 技術スタック
25 | - **Pythonとライブラリ**: データ操作にpandas、数値計算にnumpy、テクニカル分析にta-lib。
26 | - **フレームワーク**: Docker上でAirflowを運用し、スケジューリングとトレード履歴の管理。
   |                                                                                        ^
27 | - **GUI管理**: noctria_guiにより、システムの稼働状況を一元管理。
   |

invalid-syntax: Invalid annotated assignment target
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:27:1
   |
25 | - **Pythonとライブラリ**: データ操作にpandas、数値計算にnumpy、テクニカル分析にta-lib。
26 | - **フレームワーク**: Docker上でAirflowを運用し、スケジューリングとトレード履歴の管理。
27 | - **GUI管理**: noctria_guiにより、システムの稼働状況を一元管理。
   | ^^^^^^^^^^^^^
28 |
29 | ### 3. 実装ファイル
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:27:3
   |
25 | - **Pythonとライブラリ**: データ操作にpandas、数値計算にnumpy、テクニカル分析にta-lib。
26 | - **フレームワーク**: Docker上でAirflowを運用し、スケジューリングとトレード履歴の管理。
27 | - **GUI管理**: noctria_guiにより、システムの稼働状況を一元管理。
   |   ^^
28 |
29 | ### 3. 実装ファイル
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:27:12
   |
25 | - **Pythonとライブラリ**: データ操作にpandas、数値計算にnumpy、テクニカル分析にta-lib。
26 | - **フレームワーク**: Docker上でAirflowを運用し、スケジューリングとトレード履歴の管理。
27 | - **GUI管理**: noctria_guiにより、システムの稼働状況を一元管理。
   |              ^
28 |
29 | ### 3. 実装ファイル
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:27:28
   |
25 | - **Pythonとライブラリ**: データ操作にpandas、数値計算にnumpy、テクニカル分析にta-lib。
26 | - **フレームワーク**: Docker上でAirflowを運用し、スケジューリングとトレード履歴の管理。
27 | - **GUI管理**: noctria_guiにより、システムの稼働状況を一元管理。
   |                                 ^^
28 |
29 | ### 3. 実装ファイル
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:27:43
   |
25 | - **Pythonとライブラリ**: データ操作にpandas、数値計算にnumpy、テクニカル分析にta-lib。
26 | - **フレームワーク**: Docker上でAirflowを運用し、スケジューリングとトレード履歴の管理。
27 | - **GUI管理**: noctria_guiにより、システムの稼働状況を一元管理。
   |                                                               ^^
28 |
29 | ### 3. 実装ファイル
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:27:44
   |
25 | - **Pythonとライブラリ**: データ操作にpandas、数値計算にnumpy、テクニカル分析にta-lib。
26 | - **フレームワーク**: Docker上でAirflowを運用し、スケジューリングとトレード履歴の管理。
27 | - **GUI管理**: noctria_guiにより、システムの稼働状況を一元管理。
   |                                                                 ^
28 |
29 | ### 3. 実装ファイル
   |

invalid-syntax: Invalid annotated assignment target
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:32:1
   |
31 | #### `strategy.py`
32 | - **目的**: トレードシグナル生成の中心を担います。  
   | ^^^^^^^^^^
33 | - **詳細**: 短期移動平均(SMA 20)と長期移動平均(SMA 50)を算出し、そのクロスオーバーで売買シグナルを生成。
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:32:3
   |
31 | #### `strategy.py`
32 | - **目的**: トレードシグナル生成の中心を担います。  
   |   ^^
33 | - **詳細**: 短期移動平均(SMA 20)と長期移動平均(SMA 50)を算出し、そのクロスオーバーで売買シグナルを生成。
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:32:9
   |
31 | #### `strategy.py`
32 | - **目的**: トレードシグナル生成の中心を担います。  
   |           ^
33 | - **詳細**: 短期移動平均(SMA 20)と長期移動平均(SMA 50)を算出し、そのクロスオーバーで売買シグナルを生成。
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:32:29
   |
31 | #### `strategy.py`
32 | - **目的**: トレードシグナル生成の中心を担います。  
   |                                                 ^^
33 | - **詳細**: 短期移動平均(SMA 20)と長期移動平均(SMA 50)を算出し、そのクロスオーバーで売買シグナルを生成。
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:32:32
   |
31 | #### `strategy.py`
32 | - **目的**: トレードシグナル生成の中心を担います。  
   |                                                     ^
33 | - **詳細**: 短期移動平均(SMA 20)と長期移動平均(SMA 50)を算出し、そのクロスオーバーで売買シグナルを生成。
   |

invalid-syntax: Invalid annotated assignment target
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:33:1
   |
31 | #### `strategy.py`
32 | - **目的**: トレードシグナル生成の中心を担います。  
33 | - **詳細**: 短期移動平均(SMA 20)と長期移動平均(SMA 50)を算出し、そのクロスオーバーで売買シグナルを生成。
   | ^^^^^^^^^^
34 |
35 | ```python
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:33:3
   |
31 | #### `strategy.py`
32 | - **目的**: トレードシグナル生成の中心を担います。  
33 | - **詳細**: 短期移動平均(SMA 20)と長期移動平均(SMA 50)を算出し、そのクロスオーバーで売買シグナルを生成。
   |   ^^
34 |
35 | ```python
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:33:9
   |
31 | #### `strategy.py`
32 | - **目的**: トレードシグナル生成の中心を担います。  
33 | - **詳細**: 短期移動平均(SMA 20)と長期移動平均(SMA 50)を算出し、そのクロスオーバーで売買シグナルを生成。
   |           ^
34 |
35 | ```python
   |

invalid-syntax: Expected ',', found int
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:33:22
   |
31 | #### `strategy.py`
32 | - **目的**: トレードシグナル生成の中心を担います。  
33 | - **詳細**: 短期移動平均(SMA 20)と長期移動平均(SMA 50)を算出し、そのクロスオーバーで売買シグナルを生成。
   |                              ^^
34 |
35 | ```python
   |

invalid-syntax: Simple statements must be separated by newlines or semicolons
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:33:25
   |
31 | #### `strategy.py`
32 | - **目的**: トレードシグナル生成の中心を担います。  
33 | - **詳細**: 短期移動平均(SMA 20)と長期移動平均(SMA 50)を算出し、そのクロスオーバーで売買シグナルを生成。
   |                                 ^^^^^^^^^^^^^^
34 |
35 | ```python
   |

invalid-syntax: Expected ',', found int
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:33:37
   |
31 | #### `strategy.py`
32 | - **目的**: トレードシグナル生成の中心を担います。  
33 | - **詳細**: 短期移動平均(SMA 20)と長期移動平均(SMA 50)を算出し、そのクロスオーバーで売買シグナルを生成。
   |                                                    ^^
34 |
35 | ```python
   |

invalid-syntax: Simple statements must be separated by newlines or semicolons
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:33:40
   |
31 | #### `strategy.py`
32 | - **目的**: トレードシグナル生成の中心を担います。  
33 | - **詳細**: 短期移動平均(SMA 20)と長期移動平均(SMA 50)を算出し、そのクロスオーバーで売買シグナルを生成。
   |                                                       ^^^^^^^^
34 |
35 | ```python
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:33:44
   |
31 | #### `strategy.py`
32 | - **目的**: トレードシグナル生成の中心を担います。  
33 | - **詳細**: 短期移動平均(SMA 20)と長期移動平均(SMA 50)を算出し、そのクロスオーバーで売買シグナルを生成。
   |                                                               ^^
34 |
35 | ```python
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:33:64
   |
31 | #### `strategy.py`
32 | - **目的**: トレードシグナル生成の中心を担います。  
33 | - **詳細**: 短期移動平均(SMA 20)と長期移動平均(SMA 50)を算出し、そのクロスオーバーで売買シグナルを生成。
   |                                                                                                       ^^
34 |
35 | ```python
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:33:65
   |
31 | #### `strategy.py`
32 | - **目的**: トレードシグナル生成の中心を担います。  
33 | - **詳細**: 短期移動平均(SMA 20)と長期移動平均(SMA 50)を算出し、そのクロスオーバーで売買シグナルを生成。
   |                                                                                                         ^
34 |
35 | ```python
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:35:1
   |
33 | - **詳細**: 短期移動平均(SMA 20)と長期移動平均(SMA 50)を算出し、そのクロスオーバーで売買シグナルを生成。
34 |
35 | ```python
   | ^
36 | import pandas as pd
37 | import numpy as np
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:35:2
   |
33 | - **詳細**: 短期移動平均(SMA 20)と長期移動平均(SMA 50)を算出し、そのクロスオーバーで売買シグナルを生成。
34 |
35 | ```python
   |  ^
36 | import pandas as pd
37 | import numpy as np
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:35:3
   |
33 | - **詳細**: 短期移動平均(SMA 20)と長期移動平均(SMA 50)を算出し、そのクロスオーバーで売買シグナルを生成。
34 |
35 | ```python
   |   ^
36 | import pandas as pd
37 | import numpy as np
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:52:1
   |
51 |     return buy_signal, sell_signal
52 | ```
   | ^
53 |
54 | #### `risk_management.py`
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:52:2
   |
51 |     return buy_signal, sell_signal
52 | ```
   |  ^
53 |
54 | #### `risk_management.py`
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:52:3
   |
51 |     return buy_signal, sell_signal
52 | ```
   |   ^
53 |
54 | #### `risk_management.py`
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:52:4
   |
51 |     return buy_signal, sell_signal
52 | ```
   |    ^
53 |
54 | #### `risk_management.py`
   |

invalid-syntax: Invalid annotated assignment target
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:55:1
   |
54 | #### `risk_management.py`
55 | - **目的**: 取引でのリスクを管理し、ストップロスと利益確定判断を行う。
   | ^^^^^^^^^^
56 | - **詳細**: 特定の目標価格に基づき、現価格との比較で売買判断を実施。
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:55:3
   |
54 | #### `risk_management.py`
55 | - **目的**: 取引でのリスクを管理し、ストップロスと利益確定判断を行う。
   |   ^^
56 | - **詳細**: 特定の目標価格に基づき、現価格との比較で売買判断を実施。
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:55:9
   |
54 | #### `risk_management.py`
55 | - **目的**: 取引でのリスクを管理し、ストップロスと利益確定判断を行う。
   |           ^
56 | - **詳細**: 特定の目標価格に基づき、現価格との比較で売買判断を実施。
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:55:22
   |
54 | #### `risk_management.py`
55 | - **目的**: 取引でのリスクを管理し、ストップロスと利益確定判断を行う。
   |                                   ^^
56 | - **詳細**: 特定の目標価格に基づき、現価格との比較で売買判断を実施。
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:55:39
   |
54 | #### `risk_management.py`
55 | - **目的**: 取引でのリスクを管理し、ストップロスと利益確定判断を行う。
   |                                                                     ^^
56 | - **詳細**: 特定の目標価格に基づき、現価格との比較で売買判断を実施。
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:55:40
   |
54 | #### `risk_management.py`
55 | - **目的**: 取引でのリスクを管理し、ストップロスと利益確定判断を行う。
   |                                                                       ^
56 | - **詳細**: 特定の目標価格に基づき、現価格との比較で売買判断を実施。
   |

invalid-syntax: Invalid annotated assignment target
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:56:1
   |
54 | #### `risk_management.py`
55 | - **目的**: 取引でのリスクを管理し、ストップロスと利益確定判断を行う。
56 | - **詳細**: 特定の目標価格に基づき、現価格との比較で売買判断を実施。
   | ^^^^^^^^^^
57 |
58 | ```python
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:56:3
   |
54 | #### `risk_management.py`
55 | - **目的**: 取引でのリスクを管理し、ストップロスと利益確定判断を行う。
56 | - **詳細**: 特定の目標価格に基づき、現価格との比較で売買判断を実施。
   |   ^^
57 |
58 | ```python
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:56:9
   |
54 | #### `risk_management.py`
55 | - **目的**: 取引でのリスクを管理し、ストップロスと利益確定判断を行う。
56 | - **詳細**: 特定の目標価格に基づき、現価格との比較で売買判断を実施。
   |           ^
57 |
58 | ```python
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:56:22
   |
54 | #### `risk_management.py`
55 | - **目的**: 取引でのリスクを管理し、ストップロスと利益確定判断を行う。
56 | - **詳細**: 特定の目標価格に基づき、現価格との比較で売買判断を実施。
   |                                   ^^
57 |
58 | ```python
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:56:38
   |
54 | #### `risk_management.py`
55 | - **目的**: 取引でのリスクを管理し、ストップロスと利益確定判断を行う。
56 | - **詳細**: 特定の目標価格に基づき、現価格との比較で売買判断を実施。
   |                                                                   ^^
57 |
58 | ```python
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:56:39
   |
54 | #### `risk_management.py`
55 | - **目的**: 取引でのリスクを管理し、ストップロスと利益確定判断を行う。
56 | - **詳細**: 特定の目標価格に基づき、現価格との比較で売買判断を実施。
   |                                                                     ^
57 |
58 | ```python
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:58:1
   |
56 | - **詳細**: 特定の目標価格に基づき、現価格との比較で売買判断を実施。
57 |
58 | ```python
   | ^
59 | def risk_management(target_price, current_price):
60 |     """
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:58:2
   |
56 | - **詳細**: 特定の目標価格に基づき、現価格との比較で売買判断を実施。
57 |
58 | ```python
   |  ^
59 | def risk_management(target_price, current_price):
60 |     """
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:58:3
   |
56 | - **詳細**: 特定の目標価格に基づき、現価格との比較で売買判断を実施。
57 |
58 | ```python
   |   ^
59 | def risk_management(target_price, current_price):
60 |     """
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:72:1
   |
70 |         return "take_profit"
71 |     return "hold"
72 | ```
   | ^
73 |
74 | #### `execution.py`
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:72:2
   |
70 |         return "take_profit"
71 |     return "hold"
72 | ```
   |  ^
73 |
74 | #### `execution.py`
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:72:3
   |
70 |         return "take_profit"
71 |     return "hold"
72 | ```
   |   ^
73 |
74 | #### `execution.py`
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:72:4
   |
70 |         return "take_profit"
71 |     return "hold"
72 | ```
   |    ^
73 |
74 | #### `execution.py`
   |

invalid-syntax: Invalid annotated assignment target
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:75:1
   |
74 | #### `execution.py`
75 | - **目的**: 取引シグナルに基づいた実際の注文を実行。
   | ^^^^^^^^^^
76 | - **詳細**: シグナルに応じた注文をsrc/core/king_noctria.pyへ送信。
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:75:3
   |
74 | #### `execution.py`
75 | - **目的**: 取引シグナルに基づいた実際の注文を実行。
   |   ^^
76 | - **詳細**: シグナルに応じた注文をsrc/core/king_noctria.pyへ送信。
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:75:9
   |
74 | #### `execution.py`
75 | - **目的**: 取引シグナルに基づいた実際の注文を実行。
   |           ^
76 | - **詳細**: シグナルに応じた注文をsrc/core/king_noctria.pyへ送信。
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:75:30
   |
74 | #### `execution.py`
75 | - **目的**: 取引シグナルに基づいた実際の注文を実行。
   |                                                   ^^
76 | - **詳細**: シグナルに応じた注文をsrc/core/king_noctria.pyへ送信。
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:75:31
   |
74 | #### `execution.py`
75 | - **目的**: 取引シグナルに基づいた実際の注文を実行。
   |                                                     ^
76 | - **詳細**: シグナルに応じた注文をsrc/core/king_noctria.pyへ送信。
   |

invalid-syntax: Invalid annotated assignment target
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:76:1
   |
74 | #### `execution.py`
75 | - **目的**: 取引シグナルに基づいた実際の注文を実行。
76 | - **詳細**: シグナルに応じた注文をsrc/core/king_noctria.pyへ送信。
   | ^^^^^^^^^^
77 |
78 | ```python
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:76:3
   |
74 | #### `execution.py`
75 | - **目的**: 取引シグナルに基づいた実際の注文を実行。
76 | - **詳細**: シグナルに応じた注文をsrc/core/king_noctria.pyへ送信。
   |   ^^
77 |
78 | ```python
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:76:9
   |
74 | #### `execution.py`
75 | - **目的**: 取引シグナルに基づいた実際の注文を実行。
76 | - **詳細**: シグナルに応じた注文をsrc/core/king_noctria.pyへ送信。
   |           ^
77 |
78 | ```python
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:76:49
   |
74 | #### `execution.py`
75 | - **目的**: 取引シグナルに基づいた実際の注文を実行。
76 | - **詳細**: シグナルに応じた注文をsrc/core/king_noctria.pyへ送信。
   |                                                                 ^^
77 |
78 | ```python
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:76:50
   |
74 | #### `execution.py`
75 | - **目的**: 取引シグナルに基づいた実際の注文を実行。
76 | - **詳細**: シグナルに応じた注文をsrc/core/king_noctria.pyへ送信。
   |                                                                   ^
77 |
78 | ```python
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:78:1
   |
76 | - **詳細**: シグナルに応じた注文をsrc/core/king_noctria.pyへ送信。
77 |
78 | ```python
   | ^
79 | def execute_order(signal):
80 |     """
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:78:2
   |
76 | - **詳細**: シグナルに応じた注文をsrc/core/king_noctria.pyへ送信。
77 |
78 | ```python
   |  ^
79 | def execute_order(signal):
80 |     """
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:78:3
   |
76 | - **詳細**: シグナルに応じた注文をsrc/core/king_noctria.pyへ送信。
77 |
78 | ```python
   |   ^
79 | def execute_order(signal):
80 |     """
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:91:1
   |
89 |     elif signal == "take_profit":
90 |         pass
91 | ```
   | ^
92 |
93 | ### 4. ガイドライン準拠
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:91:2
   |
89 |     elif signal == "take_profit":
90 |         pass
91 | ```
   |  ^
92 |
93 | ### 4. ガイドライン準拠
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:91:3
   |
89 |     elif signal == "take_profit":
90 |         pass
91 | ```
   |   ^
92 |
93 | ### 4. ガイドライン準拠
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:91:4
   |
89 |     elif signal == "take_profit":
90 |         pass
91 | ```
   |    ^
92 |
93 | ### 4. ガイドライン準拠
   |

invalid-syntax: Invalid annotated assignment target
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:95:1
   |
93 | ### 4. ガイドライン準拠
94 |
95 | - **バージョン管理**: 各ファイルにバージョンとリリースノートを記録。
   | ^^^^^^^^^^^^^^^^^^^^
96 | - **説明責任コメント**: コード注釈を通じて、各処理の目的と理由を明示。
97 | - **セキュリティ考慮**: 取引API通信での暗号化と認証対策。
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:95:3
   |
93 | ### 4. ガイドライン準拠
94 |
95 | - **バージョン管理**: 各ファイルにバージョンとリリースノートを記録。
   |   ^^
96 | - **説明責任コメント**: コード注釈を通じて、各処理の目的と理由を明示。
97 | - **セキュリティ考慮**: 取引API通信での暗号化と認証対策。
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:95:14
   |
93 | ### 4. ガイドライン準拠
94 |
95 | - **バージョン管理**: 各ファイルにバージョンとリリースノートを記録。
   |                     ^
96 | - **説明責任コメント**: コード注釈を通じて、各処理の目的と理由を明示。
97 | - **セキュリティ考慮**: 取引API通信での暗号化と認証対策。
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:95:38
   |
93 | ### 4. ガイドライン準拠
94 |
95 | - **バージョン管理**: 各ファイルにバージョンとリリースノートを記録。
   |                                                                   ^^
96 | - **説明責任コメント**: コード注釈を通じて、各処理の目的と理由を明示。
97 | - **セキュリティ考慮**: 取引API通信での暗号化と認証対策。
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:95:39
   |
93 | ### 4. ガイドライン準拠
94 |
95 | - **バージョン管理**: 各ファイルにバージョンとリリースノートを記録。
   |                                                                     ^
96 | - **説明責任コメント**: コード注釈を通じて、各処理の目的と理由を明示。
97 | - **セキュリティ考慮**: 取引API通信での暗号化と認証対策。
   |

invalid-syntax: Invalid annotated assignment target
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:96:1
   |
95 | - **バージョン管理**: 各ファイルにバージョンとリリースノートを記録。
96 | - **説明責任コメント**: コード注釈を通じて、各処理の目的と理由を明示。
   | ^^^^^^^^^^^^^^^^^^^^^^
97 | - **セキュリティ考慮**: 取引API通信での暗号化と認証対策。
98 | - **A/Bテスト**: 戦略の異なる実装をテストし、効果を比較。
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:96:3
   |
95 | - **バージョン管理**: 各ファイルにバージョンとリリースノートを記録。
96 | - **説明責任コメント**: コード注釈を通じて、各処理の目的と理由を明示。
   |   ^^
97 | - **セキュリティ考慮**: 取引API通信での暗号化と認証対策。
98 | - **A/Bテスト**: 戦略の異なる実装をテストし、効果を比較。
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:96:15
   |
95 | - **バージョン管理**: 各ファイルにバージョンとリリースノートを記録。
96 | - **説明責任コメント**: コード注釈を通じて、各処理の目的と理由を明示。
   |                       ^
97 | - **セキュリティ考慮**: 取引API通信での暗号化と認証対策。
98 | - **A/Bテスト**: 戦略の異なる実装をテストし、効果を比較。
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:96:26
   |
95 | - **バージョン管理**: 各ファイルにバージョンとリリースノートを記録。
96 | - **説明責任コメント**: コード注釈を通じて、各処理の目的と理由を明示。
   |                                           ^^
97 | - **セキュリティ考慮**: 取引API通信での暗号化と認証対策。
98 | - **A/Bテスト**: 戦略の異なる実装をテストし、効果を比較。
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:96:39
   |
95 | - **バージョン管理**: 各ファイルにバージョンとリリースノートを記録。
96 | - **説明責任コメント**: コード注釈を通じて、各処理の目的と理由を明示。
   |                                                                     ^^
97 | - **セキュリティ考慮**: 取引API通信での暗号化と認証対策。
98 | - **A/Bテスト**: 戦略の異なる実装をテストし、効果を比較。
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:96:40
   |
95 | - **バージョン管理**: 各ファイルにバージョンとリリースノートを記録。
96 | - **説明責任コメント**: コード注釈を通じて、各処理の目的と理由を明示。
   |                                                                       ^
97 | - **セキュリティ考慮**: 取引API通信での暗号化と認証対策。
98 | - **A/Bテスト**: 戦略の異なる実装をテストし、効果を比較。
   |

invalid-syntax: Invalid annotated assignment target
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:97:1
   |
95 | - **バージョン管理**: 各ファイルにバージョンとリリースノートを記録。
96 | - **説明責任コメント**: コード注釈を通じて、各処理の目的と理由を明示。
97 | - **セキュリティ考慮**: 取引API通信での暗号化と認証対策。
   | ^^^^^^^^^^^^^^^^^^^^^^
98 | - **A/Bテスト**: 戦略の異なる実装をテストし、効果を比較。
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:97:3
   |
95 | - **バージョン管理**: 各ファイルにバージョンとリリースノートを記録。
96 | - **説明責任コメント**: コード注釈を通じて、各処理の目的と理由を明示。
97 | - **セキュリティ考慮**: 取引API通信での暗号化と認証対策。
   |   ^^
98 | - **A/Bテスト**: 戦略の異なる実装をテストし、効果を比較。
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:97:15
   |
95 | - **バージョン管理**: 各ファイルにバージョンとリリースノートを記録。
96 | - **説明責任コメント**: コード注釈を通じて、各処理の目的と理由を明示。
97 | - **セキュリティ考慮**: 取引API通信での暗号化と認証対策。
   |                       ^
98 | - **A/Bテスト**: 戦略の異なる実装をテストし、効果を比較。
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:97:34
   |
95 | - **バージョン管理**: 各ファイルにバージョンとリリースノートを記録。
96 | - **説明責任コメント**: コード注釈を通じて、各処理の目的と理由を明示。
97 | - **セキュリティ考慮**: 取引API通信での暗号化と認証対策。
   |                                                        ^^
98 | - **A/Bテスト**: 戦略の異なる実装をテストし、効果を比較。
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:97:35
   |
95 | - **バージョン管理**: 各ファイルにバージョンとリリースノートを記録。
96 | - **説明責任コメント**: コード注釈を通じて、各処理の目的と理由を明示。
97 | - **セキュリティ考慮**: 取引API通信での暗号化と認証対策。
   |                                                          ^
98 | - **A/Bテスト**: 戦略の異なる実装をテストし、効果を比較。
   |

invalid-syntax: Invalid annotated assignment target
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:98:1
    |
 96 | - **説明責任コメント**: コード注釈を通じて、各処理の目的と理由を明示。
 97 | - **セキュリティ考慮**: 取引API通信での暗号化と認証対策。
 98 | - **A/Bテスト**: 戦略の異なる実装をテストし、効果を比較。
    | ^^^^^^^^^^^^^^^
 99 |
100 | この設計により、トレンド追随に合わせた効率的な取引が可能で、将来的なシステム拡張やクラウド環境移行を視野に入れています。すべての取り組                                                                  …
    |

invalid-syntax: Expected an expression
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:98:3
    |
 96 | - **説明責任コメント**: コード注釈を通じて、各処理の目的と理由を明示。
 97 | - **セキュリティ考慮**: 取引API通信での暗号化と認証対策。
 98 | - **A/Bテスト**: 戦略の異なる実装をテストし、効果を比較。
    |   ^^
 99 |
100 | この設計により、トレンド追随に合わせた効率的な取引が可能で、将来的なシステム拡張やクラウド環境移行を視野に入れています。すべての取り組                                                                  …
    |

invalid-syntax: Expected an expression
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:98:13
    |
 96 | - **説明責任コメント**: コード注釈を通じて、各処理の目的と理由を明示。
 97 | - **セキュリティ考慮**: 取引API通信での暗号化と認証対策。
 98 | - **A/Bテスト**: 戦略の異なる実装をテストし、効果を比較。
    |                ^
 99 |
100 | この設計により、トレンド追随に合わせた効率的な取引が可能で、将来的なシステム拡張やクラウド環境移行を視野に入れています。すべての取り組                                                                  …
    |

invalid-syntax: Got unexpected token 、
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:98:28
    |
 96 | - **説明責任コメント**: コード注釈を通じて、各処理の目的と理由を明示。
 97 | - **セキュリティ考慮**: 取引API通信での暗号化と認証対策。
 98 | - **A/Bテスト**: 戦略の異なる実装をテストし、効果を比較。
    |                                            ^^
 99 |
100 | この設計により、トレンド追随に合わせた効率的な取引が可能で、将来的なシステム拡張やクラウド環境移行を視野に入れています。すべての取り組                                                                  …
    |

invalid-syntax: Got unexpected token 。
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:98:34
    |
 96 | - **説明責任コメント**: コード注釈を通じて、各処理の目的と理由を明示。
 97 | - **セキュリティ考慮**: 取引API通信での暗号化と認証対策。
 98 | - **A/Bテスト**: 戦略の異なる実装をテストし、効果を比較。
    |                                                        ^^
 99 |
100 | この設計により、トレンド追随に合わせた効率的な取引が可能で、将来的なシステム拡張やクラウド環境移行を視野に入れています。すべての取り組                                                                  …
    |

invalid-syntax: Expected a statement
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:98:35
    |
 96 | - **説明責任コメント**: コード注釈を通じて、各処理の目的と理由を明示。
 97 | - **セキュリティ考慮**: 取引API通信での暗号化と認証対策。
 98 | - **A/Bテスト**: 戦略の異なる実装をテストし、効果を比較。
    |                                                          ^
 99 |
100 | この設計により、トレンド追随に合わせた効率的な取引が可能で、将来的なシステム拡張やクラウド環境移行を視野に入れています。すべての取り組                                                                  …
    |

invalid-syntax: Got unexpected token 、
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:100:8
    |
 98 | - **A/Bテスト**: 戦略の異なる実装をテストし、効果を比較。
 99 |
100 | この設計により、トレンド追随に合わせた効率的な取引が可能で、将来的なシステム拡張やクラウド環境移行を視野に入れています。すべての取り組                                                                  …
    |               ^^
    |

invalid-syntax: Got unexpected token 、
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:100:30
    |
 98 | - **A/Bテスト**: 戦略の異なる実装をテストし、効果を比較。
 99 |
100 | この設計により、トレンド追随に合わせた効率的な取引が可能で、将来的なシステム拡張やクラウド環境移行を視野に入れています。すべての取り組                                                                  …
    |                                                           ^^
    |

invalid-syntax: Got unexpected token 。
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:100:60
    |
 98 | - **A/Bテスト**: 戦略の異なる実装をテストし、効果を比較。
 99 |
100 | この設計により、トレンド追随に合わせた効率的な取引が可能で、将来的なシステム拡張やクラウド環境移行を視野に入れています。すべての取り組                                                                  …
    |                                                                                                                       ^^
    |

invalid-syntax: Got unexpected token 、
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:100:70
    |
 98 | …
 99 | …
100 | …証跡としての履歴DBに記録し、開発の透明性と追従性を保ちます。
^^  |
    |

invalid-syntax: Got unexpected token 、
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:100:88
    |
 98 | …
 99 | …
100 | …
^   |
    |

invalid-syntax: Got unexpected token 。
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:100:104
    |
 98 | …
 99 | …
100 | …
    ^^
    |

invalid-syntax: Expected a statement
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn1.py:100:105
    |
 98 | …
 99 | …
100 | …
    | ^
    |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn2.py:8:46
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | USD/JPY自動トレードAIの戦略設計をNoctriaガイドラインに従って進めるにあたり、以下の詳細なコード設計を行います。基本戦略、技術要素、およ                                                          …
   |                                                                           ^^
 9 |
10 | ### メインスクリプト: `main.py`
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn2.py:8:63
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | USD/JPY自動トレードAIの戦略設計をNoctriaガイドラインに従って進めるにあたり、以下の詳細なコード設計を行います。基本戦略、技術要素、およ                                                          …
   |                                                                                                             ^^
 9 |
10 | ### メインスクリプト: `main.py`
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn2.py:8:68
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | USD/JPY自動トレードAIの戦略設計をNoctriaガイドラインに従って進めるにあたり、以下の詳細なコード設計を行います。基本戦略、技術要素、およ                                                          …
   |                                                                                                                       ^^
 9 |
10 | ### メインスクリプト: `main.py`
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn2.py:8:73
   |
 6 | …。
 7 | …
 8 | …基本戦略、技術要素、および設計根拠に基づき、各コンポーネントに対応するPythonファイルを作成します。すべてのファイルはバージョン管理、                                                               …
   |                     ^^
 9 | …
10 | …
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn2.py:8:85
   |
 6 | …
 7 | …
 8 | …ンポーネントに対応するPythonファイルを作成します。すべてのファイルはバージョン管理、説明責任、ABテストを考慮して設計されます。
 ^^|
 9 | …
10 | …
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn2.py:8:115
   |
 6 | …
 7 | …
 8 | …トを考慮して設計されます。
^  |
 9 | …
10 | …
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn2.py:8:132
   |
 6 | …
 7 | …
 8 | …
^  |
 9 | …
10 | …
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn2.py:8:137
   |
 6 | …
 7 | …
 8 | …
^  |
 9 | …
10 | …
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn2.py:8:154
   |
 6 | …
 7 | …
 8 | …
   ^^
 9 | …
10 | …
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn2.py:8:155
   |
 6 | …
 7 | …
 8 | …
   | ^
 9 | …
10 | …
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn2.py:12:1
   |
10 | ### メインスクリプト: `main.py`
11 |
12 | ```python
   | ^
13 | """
14 | main.py
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn2.py:12:2
   |
10 | ### メインスクリプト: `main.py`
11 |
12 | ```python
   |  ^
13 | """
14 | main.py
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn2.py:12:3
   |
10 | ### メインスクリプト: `main.py`
11 |
12 | ```python
   |   ^
13 | """
14 | main.py
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn2.py:34:1
   |
32 |     risk_manager = RiskManager(selected_model, PathConfig.risk_params_path)
33 |     risk_manager.execute_trades()
34 | ```
   | ^
35 |
36 | ### データ収集モジュール: `data_collector.py`
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn2.py:34:2
   |
32 |     risk_manager = RiskManager(selected_model, PathConfig.risk_params_path)
33 |     risk_manager.execute_trades()
34 | ```
   |  ^
35 |
36 | ### データ収集モジュール: `data_collector.py`
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn2.py:34:3
   |
32 |     risk_manager = RiskManager(selected_model, PathConfig.risk_params_path)
33 |     risk_manager.execute_trades()
34 | ```
   |   ^
35 |
36 | ### データ収集モジュール: `data_collector.py`
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn2.py:34:4
   |
32 |     risk_manager = RiskManager(selected_model, PathConfig.risk_params_path)
33 |     risk_manager.execute_trades()
34 | ```
   |    ^
35 |
36 | ### データ収集モジュール: `data_collector.py`
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn2.py:38:1
   |
36 | ### データ収集モジュール: `data_collector.py`
37 |
38 | ```python
   | ^
39 | """
40 | data_collector.py
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn2.py:38:2
   |
36 | ### データ収集モジュール: `data_collector.py`
37 |
38 | ```python
   |  ^
39 | """
40 | data_collector.py
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn2.py:38:3
   |
36 | ### データ収集モジュール: `data_collector.py`
37 |
38 | ```python
   |   ^
39 | """
40 | data_collector.py
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn2.py:55:1
   |
53 |     # データ加工・整形処理
54 |     return data
55 | ```
   | ^
56 |
57 | ### モデル選定モジュール: `model_selector.py`
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn2.py:55:2
   |
53 |     # データ加工・整形処理
54 |     return data
55 | ```
   |  ^
56 |
57 | ### モデル選定モジュール: `model_selector.py`
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn2.py:55:3
   |
53 |     # データ加工・整形処理
54 |     return data
55 | ```
   |   ^
56 |
57 | ### モデル選定モジュール: `model_selector.py`
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn2.py:55:4
   |
53 |     # データ加工・整形処理
54 |     return data
55 | ```
   |    ^
56 |
57 | ### モデル選定モジュール: `model_selector.py`
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn2.py:59:1
   |
57 | ### モデル選定モジュール: `model_selector.py`
58 |
59 | ```python
   | ^
60 | """
61 | model_selector.py
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn2.py:59:2
   |
57 | ### モデル選定モジュール: `model_selector.py`
58 |
59 | ```python
   |  ^
60 | """
61 | model_selector.py
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn2.py:59:3
   |
57 | ### モデル選定モジュール: `model_selector.py`
58 |
59 | ```python
   |   ^
60 | """
61 | model_selector.py
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn2.py:84:1
   |
82 |         best_model = model_rf  # Placeholder decision
83 |         return best_model
84 | ```
   | ^
85 |
86 | ### リスク管理モジュール: `risk_manager.py`
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn2.py:84:2
   |
82 |         best_model = model_rf  # Placeholder decision
83 |         return best_model
84 | ```
   |  ^
85 |
86 | ### リスク管理モジュール: `risk_manager.py`
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn2.py:84:3
   |
82 |         best_model = model_rf  # Placeholder decision
83 |         return best_model
84 | ```
   |   ^
85 |
86 | ### リスク管理モジュール: `risk_manager.py`
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn2.py:84:4
   |
82 |         best_model = model_rf  # Placeholder decision
83 |         return best_model
84 | ```
   |    ^
85 |
86 | ### リスク管理モジュール: `risk_manager.py`
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn2.py:88:1
   |
86 | ### リスク管理モジュール: `risk_manager.py`
87 |
88 | ```python
   | ^
89 | """
90 | risk_manager.py
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn2.py:88:2
   |
86 | ### リスク管理モジュール: `risk_manager.py`
87 |
88 | ```python
   |  ^
89 | """
90 | risk_manager.py
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn2.py:88:3
   |
86 | ### リスク管理モジュール: `risk_manager.py`
87 |
88 | ```python
   |   ^
89 | """
90 | risk_manager.py
   |

invalid-syntax: Got unexpected token `
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn2.py:110:1
    |
108 |         # トレード実行ロジック（仮置き）
109 |         print("Executing trades with risk parameters:", self.risk_params)
110 | ```
    | ^
111 |
112 | ### 備考
    |

invalid-syntax: Got unexpected token `
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn2.py:110:2
    |
108 |         # トレード実行ロジック（仮置き）
109 |         print("Executing trades with risk parameters:", self.risk_params)
110 | ```
    |  ^
111 |
112 | ### 備考
    |

invalid-syntax: Got unexpected token `
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn2.py:110:3
    |
108 |         # トレード実行ロジック（仮置き）
109 |         print("Executing trades with risk parameters:", self.risk_params)
110 | ```
    |   ^
111 |
112 | ### 備考
    |

invalid-syntax: Expected a statement
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn2.py:110:4
    |
108 |         # トレード実行ロジック（仮置き）
109 |         print("Executing trades with risk parameters:", self.risk_params)
110 | ```
    |    ^
111 |
112 | ### 備考
    |

invalid-syntax: Got unexpected token 、
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn2.py:113:12
    |
112 | ### 備考
113 | - これらのファイルは、Noctriaのガイドラインに従い適切にバージョン管理され、各モジュールの責任と役割を明確にしています。
    |                     ^^
114 | - すべての変更や生成物は履歴DBに記録し、プロセスの透明性を確保します。
115 | - `path_config.py`は各種設定やパスの管理を一元化します。
    |

invalid-syntax: Got unexpected token 、
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn2.py:113:42
    |
112 | ### 備考
113 | - これらのファイルは、Noctriaのガイドラインに従い適切にバージョン管理され、各モジュールの責任と役割を明確にしています。
    |                                                                          ^^
114 | - すべての変更や生成物は履歴DBに記録し、プロセスの透明性を確保します。
115 | - `path_config.py`は各種設定やパスの管理を一元化します。
    |

invalid-syntax: Got unexpected token 。
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn2.py:113:64
    |
112 | ### 備考
113 | - これらのファイルは、Noctriaのガイドラインに従い適切にバージョン管理され、各モジュールの責任と役割を明確にしています。
    |                                                                                                                      ^^
114 | - すべての変更や生成物は履歴DBに記録し、プロセスの透明性を確保します。
115 | - `path_config.py`は各種設定やパスの管理を一元化します。
    |

invalid-syntax: Expected a statement
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn2.py:113:65
    |
112 | ### 備考
113 | - これらのファイルは、Noctriaのガイドラインに従い適切にバージョン管理され、各モジュールの責任と役割を明確にしています。
    |                                                                                                                        ^
114 | - すべての変更や生成物は履歴DBに記録し、プロセスの透明性を確保します。
115 | - `path_config.py`は各種設定やパスの管理を一元化します。
    |

invalid-syntax: Got unexpected token 、
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn2.py:114:22
    |
112 | ### 備考
113 | - これらのファイルは、Noctriaのガイドラインに従い適切にバージョン管理され、各モジュールの責任と役割を明確にしています。
114 | - すべての変更や生成物は履歴DBに記録し、プロセスの透明性を確保します。
    |                                       ^^
115 | - `path_config.py`は各種設定やパスの管理を一元化します。
116 | - 今後のクラウド対応やGPU活用の基盤として、現在のローカル環境での実績を積み上げます。
    |

invalid-syntax: Got unexpected token 。
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn2.py:114:37
    |
112 | ### 備考
113 | - これらのファイルは、Noctriaのガイドラインに従い適切にバージョン管理され、各モジュールの責任と役割を明確にしています。
114 | - すべての変更や生成物は履歴DBに記録し、プロセスの透明性を確保します。
    |                                                                     ^^
115 | - `path_config.py`は各種設定やパスの管理を一元化します。
116 | - 今後のクラウド対応やGPU活用の基盤として、現在のローカル環境での実績を積み上げます。
    |

invalid-syntax: Expected a statement
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn2.py:114:38
    |
112 | ### 備考
113 | - これらのファイルは、Noctriaのガイドラインに従い適切にバージョン管理され、各モジュールの責任と役割を明確にしています。
114 | - すべての変更や生成物は履歴DBに記録し、プロセスの透明性を確保します。
    |                                                                       ^
115 | - `path_config.py`は各種設定やパスの管理を一元化します。
116 | - 今後のクラウド対応やGPU活用の基盤として、現在のローカル環境での実績を積み上げます。
    |

invalid-syntax: Got unexpected token `
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn2.py:115:3
    |
113 | - これらのファイルは、Noctriaのガイドラインに従い適切にバージョン管理され、各モジュールの責任と役割を明確にしています。
114 | - すべての変更や生成物は履歴DBに記録し、プロセスの透明性を確保します。
115 | - `path_config.py`は各種設定やパスの管理を一元化します。
    |   ^
116 | - 今後のクラウド対応やGPU活用の基盤として、現在のローカル環境での実績を積み上げます。
    |

invalid-syntax: Got unexpected token `
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn2.py:115:18
    |
113 | - これらのファイルは、Noctriaのガイドラインに従い適切にバージョン管理され、各モジュールの責任と役割を明確にしています。
114 | - すべての変更や生成物は履歴DBに記録し、プロセスの透明性を確保します。
115 | - `path_config.py`は各種設定やパスの管理を一元化します。
    |                  ^
116 | - 今後のクラウド対応やGPU活用の基盤として、現在のローカル環境での実績を積み上げます。
    |

invalid-syntax: Got unexpected token 。
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn2.py:115:37
    |
113 | - これらのファイルは、Noctriaのガイドラインに従い適切にバージョン管理され、各モジュールの責任と役割を明確にしています。
114 | - すべての変更や生成物は履歴DBに記録し、プロセスの透明性を確保します。
115 | - `path_config.py`は各種設定やパスの管理を一元化します。
    |                                                       ^^
116 | - 今後のクラウド対応やGPU活用の基盤として、現在のローカル環境での実績を積み上げます。
    |

invalid-syntax: Expected a statement
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn2.py:115:38
    |
113 | - これらのファイルは、Noctriaのガイドラインに従い適切にバージョン管理され、各モジュールの責任と役割を明確にしています。
114 | - すべての変更や生成物は履歴DBに記録し、プロセスの透明性を確保します。
115 | - `path_config.py`は各種設定やパスの管理を一元化します。
    |                                                         ^
116 | - 今後のクラウド対応やGPU活用の基盤として、現在のローカル環境での実績を積み上げます。
    |

invalid-syntax: Got unexpected token 、
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn2.py:116:24
    |
114 | - すべての変更や生成物は履歴DBに記録し、プロセスの透明性を確保します。
115 | - `path_config.py`は各種設定やパスの管理を一元化します。
116 | - 今後のクラウド対応やGPU活用の基盤として、現在のローカル環境での実績を積み上げます。
    |                                          ^^
117 |
118 | この戦略設計により、USD/JPYの自動トレードを効果的かつ安全に実行できるようにサポートします。
    |

invalid-syntax: Got unexpected token 。
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn2.py:116:45
    |
114 | - すべての変更や生成物は履歴DBに記録し、プロセスの透明性を確保します。
115 | - `path_config.py`は各種設定やパスの管理を一元化します。
116 | - 今後のクラウド対応やGPU活用の基盤として、現在のローカル環境での実績を積み上げます。
    |                                                                                    ^^
117 |
118 | この戦略設計により、USD/JPYの自動トレードを効果的かつ安全に実行できるようにサポートします。
    |

invalid-syntax: Expected a statement
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn2.py:116:46
    |
114 | - すべての変更や生成物は履歴DBに記録し、プロセスの透明性を確保します。
115 | - `path_config.py`は各種設定やパスの管理を一元化します。
116 | - 今後のクラウド対応やGPU活用の基盤として、現在のローカル環境での実績を積み上げます。
    |                                                                                      ^
117 |
118 | この戦略設計により、USD/JPYの自動トレードを効果的かつ安全に実行できるようにサポートします。
    |

invalid-syntax: Got unexpected token 、
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn2.py:118:10
    |
116 | - 今後のクラウド対応やGPU活用の基盤として、現在のローカル環境での実績を積み上げます。
117 |
118 | この戦略設計により、USD/JPYの自動トレードを効果的かつ安全に実行できるようにサポートします。
    |                   ^^
    |

invalid-syntax: Got unexpected token 。
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn2.py:118:49
    |
116 | - 今後のクラウド対応やGPU活用の基盤として、現在のローカル環境での実績を積み上げます。
117 |
118 | この戦略設計により、USD/JPYの自動トレードを効果的かつ安全に実行できるようにサポートします。
    |                                                                                          ^^
    |

invalid-syntax: Expected a statement
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn2.py:118:50
    |
116 | - 今後のクラウド対応やGPU活用の基盤として、現在のローカル環境での実績を積み上げます。
117 |
118 | この戦略設計により、USD/JPYの自動トレードを効果的かつ安全に実行できるようにサポートします。
    |                                                                                            ^
    |

invalid-syntax: Invalid annotated assignment target
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn3.py:1:1
  |
1 | 1. **日本語をコメントとして使用**: 
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2 |
3 | 2. **エンコードの指定**:
  |

invalid-syntax: Expected an expression
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn3.py:1:21
  |
1 | 1. **日本語をコメントとして使用**: 
  |                                  ^
2 |
3 | 2. **エンコードの指定**:
  |

invalid-syntax: Expected an expression
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn3.py:1:23
  |
1 | 1. **日本語をコメントとして使用**: 
  |                                    ^
2 |
3 | 2. **エンコードの指定**:
  |

invalid-syntax: Invalid annotated assignment target
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn3.py:3:1
  |
1 | 1. **日本語をコメントとして使用**: 
2 |
3 | 2. **エンコードの指定**:
  | ^^^^^^^^^^^^^^^^^^^^^^^
  |

invalid-syntax: Expected an expression
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn3.py:3:16
  |
1 | 1. **日本語をコメントとして使用**: 
2 |
3 | 2. **エンコードの指定**:
  |                        ^
  |

invalid-syntax: Expected an expression
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn3.py:3:17
  |
1 | 1. **日本語をコメントとして使用**: 
2 |
3 | 2. **エンコードの指定**:
  |                         ^
  |

invalid-syntax: Invalid annotated assignment target
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn4.py:1:1
  |
1 | 1. **ファイル名: usd_jpy_strategy.py**
  | ^^^^^^^^^^^^^^^
  |

invalid-syntax: Expected an expression
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn4.py:1:34
  |
1 | 1. **ファイル名: usd_jpy_strategy.py**
  |                                       ^
  |

invalid-syntax: Invalid annotated assignment target
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn4.py:5:1
  |
5 | 2. **ファイル名: risk_management.py**
  | ^^^^^^^^^^^^^^^
  |

invalid-syntax: Expected an expression
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn4.py:5:33
  |
5 | 2. **ファイル名: risk_management.py**
  |                                      ^
  |

invalid-syntax: Invalid annotated assignment target
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn4.py:9:1
  |
9 | 3. **ファイル名: backtesting.py**
  | ^^^^^^^^^^^^^^^
  |

invalid-syntax: Expected an expression
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/implement_turn4.py:9:29
  |
9 | 3. **ファイル名: backtesting.py**
  |                                  ^
  |

F821 Undefined name `cleaned_data`
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/model_selection.py:6:30
  |
4 |     pass
5 |
6 | optimal_model = select_model(cleaned_data)
  |                              ^^^^^^^^^^^^
  |

invalid-syntax: Got unexpected token `
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/model_training.py:8:1
  |
6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
7 |
8 | ```python
  | ^
9 | # generated_code/model_training.py
  |

invalid-syntax: Got unexpected token `
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/model_training.py:8:2
  |
6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
7 |
8 | ```python
  |  ^
9 | # generated_code/model_training.py
  |

invalid-syntax: Got unexpected token `
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/model_training.py:8:3
  |
6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
7 |
8 | ```python
  |   ^
9 | # generated_code/model_training.py
  |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/model_training.py:13:1
   |
11 | def train_model(features_path: str, model_path: str):
12 |     pass
13 | ```
   | ^
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/model_training.py:13:2
   |
11 | def train_model(features_path: str, model_path: str):
12 |     pass
13 | ```
   |  ^
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/model_training.py:13:3
   |
11 | def train_model(features_path: str, model_path: str):
12 |     pass
13 | ```
   |   ^
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/model_training.py:13:4
   |
11 | def train_model(features_path: str, model_path: str):
12 |     pass
13 | ```
   |    ^
   |

invalid-syntax: Got unexpected token `
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/order_execution.py:8:1
  |
6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
7 |
8 | ```python
  | ^
9 | # generated_code/order_execution.py
  |

invalid-syntax: Got unexpected token `
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/order_execution.py:8:2
  |
6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
7 |
8 | ```python
  |  ^
9 | # generated_code/order_execution.py
  |

invalid-syntax: Got unexpected token `
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/order_execution.py:8:3
  |
6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
7 |
8 | ```python
  |   ^
9 | # generated_code/order_execution.py
  |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/order_execution.py:13:1
   |
11 | def execute_trade(model_path: str, features_path: str):
12 |     pass
13 | ```
   | ^
14 |
15 | 【テストファイル】
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/order_execution.py:13:2
   |
11 | def execute_trade(model_path: str, features_path: str):
12 |     pass
13 | ```
   |  ^
14 |
15 | 【テストファイル】
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/order_execution.py:13:3
   |
11 | def execute_trade(model_path: str, features_path: str):
12 |     pass
13 | ```
   |   ^
14 |
15 | 【テストファイル】
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/order_execution.py:13:4
   |
11 | def execute_trade(model_path: str, features_path: str):
12 |     pass
13 | ```
   |    ^
14 |
15 | 【テストファイル】
   |

invalid-syntax: Got unexpected token 【
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/order_execution.py:15:1
   |
13 | ```
14 |
15 | 【テストファイル】
   | ^^
16 |
17 | 各テストファイルの未定義シンボルはすべて `path_config.py` からインポートするように修正します。また、未定義関数はそれぞれのモジュールか                                                         …
   |

invalid-syntax: Got unexpected token 】
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/order_execution.py:15:9
   |
13 | ```
14 |
15 | 【テストファイル】
   |                 ^^
16 |
17 | 各テストファイルの未定義シンボルはすべて `path_config.py` からインポートするように修正します。また、未定義関数はそれぞれのモジュールか                                                         …
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/order_execution.py:15:10
   |
13 | ```
14 |
15 | 【テストファイル】
   |                   ^
16 |
17 | 各テストファイルの未定義シンボルはすべて `path_config.py` からインポートするように修正します。また、未定義関数はそれぞれのモジュールか                                                         …
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/order_execution.py:17:22
   |
15 | 【テストファイル】
16 |
17 | 各テストファイルの未定義シンボルはすべて `path_config.py` からインポートするように修正します。また、未定義関数はそれぞれのモジュールか                                                         …
   |                                          ^
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/order_execution.py:17:37
   |
15 | 【テストファイル】
16 |
17 | 各テストファイルの未定義シンボルはすべて `path_config.py` からインポートするように修正します。また、未定義関数はそれぞれのモジュールか                                                         …
   |                                                         ^
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/order_execution.py:17:56
   |
15 | 【テストファイル】
16 |
17 | 各テストファイルの未定義シンボルはすべて `path_config.py` からインポートするように修正します。また、未定義関数はそれぞれのモジュールか                                                         …
   |                                                                                             ^^
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/order_execution.py:17:59
   |
15 | 【テストファイル】
16 |
17 | 各テストファイルの未定義シンボルはすべて `path_config.py` からインポートするように修正します。また、未定義関数はそれぞれのモジュールか                                                         …
   |                                                                                                   ^^
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/order_execution.py:17:86
   |
15 | …
16 | …
17 | …
   ^^
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/order_execution.py:17:87
   |
15 | …
16 | …
17 | …
   | ^
   |

F821 Undefined name `requests`
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/order_executor.py:10:24
   |
 8 |         if signal in ['BUY', 'SELL']:
 9 |             # 実際のAPI呼び出し
10 |             response = requests.post(self.api_endpoint, json={'order': signal})
   |                        ^^^^^^^^
11 |             if response.status_code == 200:
12 |                 return response.json()
   |

F821 Undefined name `trade_history`
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/performance_evaluation.py:5:44
  |
3 |     pass
4 |
5 | performance_metrics = evaluate_performance(trade_history)
  |                                            ^^^^^^^^^^^^^
  |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/src/data_preprocessing.py:8:1
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | ```python
   | ^
 9 | class DataPreprocessing:
10 |     def __init__(self, data):
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/src/data_preprocessing.py:8:2
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | ```python
   |  ^
 9 | class DataPreprocessing:
10 |     def __init__(self, data):
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/src/data_preprocessing.py:8:3
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | ```python
   |   ^
 9 | class DataPreprocessing:
10 |     def __init__(self, data):
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/src/data_preprocessing.py:20:1
   |
18 |         # Implement data transformation logic here
19 |         pass
20 | ```
   | ^
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/src/data_preprocessing.py:20:2
   |
18 |         # Implement data transformation logic here
19 |         pass
20 | ```
   |  ^
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/src/data_preprocessing.py:20:3
   |
18 |         # Implement data transformation logic here
19 |         pass
20 | ```
   |   ^
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/src/data_preprocessing.py:20:4
   |
18 |         # Implement data transformation logic here
19 |         pass
20 | ```
   |    ^
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/src/model_training.py:8:1
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | ```python
   | ^
 9 | def train_model(features_path: str, model_path: str) -> None:
10 |     # Implement model training logic here
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/src/model_training.py:8:2
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | ```python
   |  ^
 9 | def train_model(features_path: str, model_path: str) -> None:
10 |     # Implement model training logic here
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/src/model_training.py:8:3
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | ```python
   |   ^
 9 | def train_model(features_path: str, model_path: str) -> None:
10 |     # Implement model training logic here
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/src/model_training.py:14:1
   |
12 |     # Save the trained model to model_path
13 |     pass
14 | ```
   | ^
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/src/model_training.py:14:2
   |
12 |     # Save the trained model to model_path
13 |     pass
14 | ```
   |  ^
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/src/model_training.py:14:3
   |
12 |     # Save the trained model to model_path
13 |     pass
14 | ```
   |   ^
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/src/model_training.py:14:4
   |
12 |     # Save the trained model to model_path
13 |     pass
14 | ```
   |    ^
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/src/order_execution.py:8:1
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | ```python
   | ^
 9 | def execute_trade(features_path: str, model_path: str) -> None:
10 |     # Implement trade execution logic here
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/src/order_execution.py:8:2
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | ```python
   |  ^
 9 | def execute_trade(features_path: str, model_path: str) -> None:
10 |     # Implement trade execution logic here
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/src/order_execution.py:8:3
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | ```python
   |   ^
 9 | def execute_trade(features_path: str, model_path: str) -> None:
10 |     # Implement trade execution logic here
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/src/order_execution.py:13:1
   |
11 |     # Use the model from model_path and features from features_path
12 |     pass
13 | ```
   | ^
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/src/order_execution.py:13:2
   |
11 |     # Use the model from model_path and features from features_path
12 |     pass
13 | ```
   |  ^
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/src/order_execution.py:13:3
   |
11 |     # Use the model from model_path and features from features_path
12 |     pass
13 | ```
   |   ^
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/src/order_execution.py:13:4
   |
11 |     # Use the model from model_path and features from features_path
12 |     pass
13 | ```
   |    ^
   |

invalid-syntax: Got unexpected token `
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_data_collection.py:8:1
  |
6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
7 |
8 | ```python
  | ^
9 | # generated_code/test_data_collection.py
  |

invalid-syntax: Got unexpected token `
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_data_collection.py:8:2
  |
6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
7 |
8 | ```python
  |  ^
9 | # generated_code/test_data_collection.py
  |

invalid-syntax: Got unexpected token `
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_data_collection.py:8:3
  |
6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
7 |
8 | ```python
  |   ^
9 | # generated_code/test_data_collection.py
  |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_data_collection.py:16:1
   |
14 |     assert DATA_SOURCE_URL is not None
15 |     assert LOCAL_DATA_PATH is not None
16 | ```
   | ^
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_data_collection.py:16:2
   |
14 |     assert DATA_SOURCE_URL is not None
15 |     assert LOCAL_DATA_PATH is not None
16 | ```
   |  ^
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_data_collection.py:16:3
   |
14 |     assert DATA_SOURCE_URL is not None
15 |     assert LOCAL_DATA_PATH is not None
16 | ```
   |   ^
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_data_collection.py:16:4
   |
14 |     assert DATA_SOURCE_URL is not None
15 |     assert LOCAL_DATA_PATH is not None
16 | ```
   |    ^
   |

invalid-syntax: Got unexpected token `
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_data_preprocessing.py:8:1
  |
6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
7 |
8 | ```python
  | ^
9 | # generated_code/test_data_preprocessing.py
  |

invalid-syntax: Got unexpected token `
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_data_preprocessing.py:8:2
  |
6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
7 |
8 | ```python
  |  ^
9 | # generated_code/test_data_preprocessing.py
  |

invalid-syntax: Got unexpected token `
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_data_preprocessing.py:8:3
  |
6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
7 |
8 | ```python
  |   ^
9 | # generated_code/test_data_preprocessing.py
  |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_data_preprocessing.py:16:1
   |
14 |     dp = DataPreprocessing("dummy_path")
15 |     assert dp is not None
16 | ```
   | ^
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_data_preprocessing.py:16:2
   |
14 |     dp = DataPreprocessing("dummy_path")
15 |     assert dp is not None
16 | ```
   |  ^
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_data_preprocessing.py:16:3
   |
14 |     dp = DataPreprocessing("dummy_path")
15 |     assert dp is not None
16 | ```
   |   ^
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_data_preprocessing.py:16:4
   |
14 |     dp = DataPreprocessing("dummy_path")
15 |     assert dp is not None
16 | ```
   |    ^
   |

invalid-syntax: Got unexpected token `
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_feature_engineering.py:8:1
  |
6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
7 |
8 | ```python
  | ^
9 | # generated_code/test_feature_engineering.py
  |

invalid-syntax: Got unexpected token `
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_feature_engineering.py:8:2
  |
6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
7 |
8 | ```python
  |  ^
9 | # generated_code/test_feature_engineering.py
  |

invalid-syntax: Got unexpected token `
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_feature_engineering.py:8:3
  |
6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
7 |
8 | ```python
  |   ^
9 | # generated_code/test_feature_engineering.py
  |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_feature_engineering.py:16:1
   |
14 |     assert LOCAL_DATA_PATH is not None
15 |     assert FEATURES_PATH is not None
16 | ```
   | ^
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_feature_engineering.py:16:2
   |
14 |     assert LOCAL_DATA_PATH is not None
15 |     assert FEATURES_PATH is not None
16 | ```
   |  ^
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_feature_engineering.py:16:3
   |
14 |     assert LOCAL_DATA_PATH is not None
15 |     assert FEATURES_PATH is not None
16 | ```
   |   ^
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_feature_engineering.py:16:4
   |
14 |     assert LOCAL_DATA_PATH is not None
15 |     assert FEATURES_PATH is not None
16 | ```
   |    ^
   |

F821 Undefined name `pytest`
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_model_design.py:10:9
   |
 8 |         assert len(model.layers) > 0
 9 |     except Exception:
10 |         pytest.fail("Model could not be built.")
   |         ^^^^^^
   |

invalid-syntax: Got unexpected token `
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_model_training.py:8:1
  |
6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
7 |
8 | ```python
  | ^
9 | # generated_code/test_model_training.py
  |

invalid-syntax: Got unexpected token `
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_model_training.py:8:2
  |
6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
7 |
8 | ```python
  |  ^
9 | # generated_code/test_model_training.py
  |

invalid-syntax: Got unexpected token `
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_model_training.py:8:3
  |
6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
7 |
8 | ```python
  |   ^
9 | # generated_code/test_model_training.py
  |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_model_training.py:18:1
   |
16 |     assert MODEL_PATH is not None
17 |     train_model(FEATURES_PATH, MODEL_PATH)
18 | ```
   | ^
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_model_training.py:18:2
   |
16 |     assert MODEL_PATH is not None
17 |     train_model(FEATURES_PATH, MODEL_PATH)
18 | ```
   |  ^
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_model_training.py:18:3
   |
16 |     assert MODEL_PATH is not None
17 |     train_model(FEATURES_PATH, MODEL_PATH)
18 | ```
   |   ^
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_model_training.py:18:4
   |
16 |     assert MODEL_PATH is not None
17 |     train_model(FEATURES_PATH, MODEL_PATH)
18 | ```
   |    ^
   |

invalid-syntax: Got unexpected token `
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_order_execution.py:8:1
  |
6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
7 |
8 | ```python
  | ^
9 | # generated_code/test_order_execution.py
  |

invalid-syntax: Got unexpected token `
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_order_execution.py:8:2
  |
6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
7 |
8 | ```python
  |  ^
9 | # generated_code/test_order_execution.py
  |

invalid-syntax: Got unexpected token `
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_order_execution.py:8:3
  |
6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
7 |
8 | ```python
  |   ^
9 | # generated_code/test_order_execution.py
  |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_order_execution.py:18:1
   |
16 |     assert FEATURES_PATH is not None
17 |     execute_trade(MODEL_PATH, FEATURES_PATH)
18 | ```
   | ^
19 |
20 | すべてのパスと未定義シンボルが定義され、pytestでテストされるコードが用意されました。型アノテーションと命名規則も適用されています。
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_order_execution.py:18:2
   |
16 |     assert FEATURES_PATH is not None
17 |     execute_trade(MODEL_PATH, FEATURES_PATH)
18 | ```
   |  ^
19 |
20 | すべてのパスと未定義シンボルが定義され、pytestでテストされるコードが用意されました。型アノテーションと命名規則も適用されています。
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_order_execution.py:18:3
   |
16 |     assert FEATURES_PATH is not None
17 |     execute_trade(MODEL_PATH, FEATURES_PATH)
18 | ```
   |   ^
19 |
20 | すべてのパスと未定義シンボルが定義され、pytestでテストされるコードが用意されました。型アノテーションと命名規則も適用されています。
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_order_execution.py:18:4
   |
16 |     assert FEATURES_PATH is not None
17 |     execute_trade(MODEL_PATH, FEATURES_PATH)
18 | ```
   |    ^
19 |
20 | すべてのパスと未定義シンボルが定義され、pytestでテストされるコードが用意されました。型アノテーションと命名規則も適用されています。
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_order_execution.py:20:20
   |
18 | ```
19 |
20 | すべてのパスと未定義シンボルが定義され、pytestでテストされるコードが用意されました。型アノテーションと命名規則も適用されています。
   |                                       ^^
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_order_execution.py:20:45
   |
18 | ```
19 |
20 | すべてのパスと未定義シンボルが定義され、pytestでテストされるコードが用意されました。型アノテーションと命名規則も適用されています。
   |                                                                                   ^^
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_order_execution.py:20:68
   |
18 | …
19 | …
20 | …ています。
   |           ^^
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_order_execution.py:20:69
   |
18 | …
19 | …
20 | …います。
   |           ^
   |

F841 Local variable `result` is assigned to but never used
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_strategy_model.py:27:5
   |
25 |     data = pd.DataFrame({'close': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]})
26 |     model = StrategyModel(short_window=3, medium_window=5, rsi_period=14)
27 |     result = model.calculate_rsi(data)
   |     ^^^^^^
   |
help: Remove assignment to unused variable `result`

invalid-syntax: Invalid annotated assignment target
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:13:1
   |
12 | #### トレンドフォロー戦略
13 | - **目的**: 相場のトレンドを見極め、リスクを制限しつつ最大限の利益を得ることを目指しています。この戦略は、ガイドライン上の説明責任と明                                                              …
   | ^^^^^^^^^^
14 | - **ツール**: 短期（SMA20）と長期（SMA50）の移動平均線を用いて、価格の動きを捉えた売買シグナルを生成します。
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:13:3
   |
12 | #### トレンドフォロー戦略
13 | - **目的**: 相場のトレンドを見極め、リスクを制限しつつ最大限の利益を得ることを目指しています。この戦略は、ガイドライン上の説明責任と明                                                              …
   |   ^^
14 | - **ツール**: 短期（SMA20）と長期（SMA50）の移動平均線を用いて、価格の動きを捉えた売買シグナルを生成します。
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:13:9
   |
12 | #### トレンドフォロー戦略
13 | - **目的**: 相場のトレンドを見極め、リスクを制限しつつ最大限の利益を得ることを目指しています。この戦略は、ガイドライン上の説明責任と明                                                              …
   |           ^
14 | - **ツール**: 短期（SMA20）と長期（SMA50）の移動平均線を用いて、価格の動きを捉えた売買シグナルを生成します。
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:13:22
   |
12 | #### トレンドフォロー戦略
13 | - **目的**: 相場のトレンドを見極め、リスクを制限しつつ最大限の利益を得ることを目指しています。この戦略は、ガイドライン上の説明責任と明                                                              …
   |                                   ^^
14 | - **ツール**: 短期（SMA20）と長期（SMA50）の移動平均線を用いて、価格の動きを捉えた売買シグナルを生成します。
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:13:51
   |
12 | #### トレンドフォロー戦略
13 | - **目的**: 相場のトレンドを見極め、リスクを制限しつつ最大限の利益を得ることを目指しています。この戦略は、ガイドライン上の説明責任と明                                                              …
   |                                                                                             ^^
14 | - **ツール**: 短期（SMA20）と長期（SMA50）の移動平均線を用いて、価格の動きを捉えた売買シグナルを生成します。
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:13:57
   |
12 | #### トレンドフォロー戦略
13 | - **目的**: 相場のトレンドを見極め、リスクを制限しつつ最大限の利益を得ることを目指しています。この戦略は、ガイドライン上の説明責任と明                                                              …
   |                                                                                                         ^^
14 | - **ツール**: 短期（SMA20）と長期（SMA50）の移動平均線を用いて、価格の動きを捉えた売買シグナルを生成します。
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:13:90
   |
12 | …
13 | …
   ^^
14 | …
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:13:91
   |
12 | …
13 | …
   | ^
14 | …
   |

invalid-syntax: Invalid annotated assignment target
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:14:1
   |
12 | #### トレンドフォロー戦略
13 | - **目的**: 相場のトレンドを見極め、リスクを制限しつつ最大限の利益を得ることを目指しています。この戦略は、ガイドライン上の説明責任と明                                                              …
14 | - **ツール**: 短期（SMA20）と長期（SMA50）の移動平均線を用いて、価格の動きを捉えた売買シグナルを生成します。
   | ^^^^^^^^^^^^
15 |
16 | #### リスク管理
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:14:3
   |
12 | #### トレンドフォロー戦略
13 | - **目的**: 相場のトレンドを見極め、リスクを制限しつつ最大限の利益を得ることを目指しています。この戦略は、ガイドライン上の説明責任と明                                                              …
14 | - **ツール**: 短期（SMA20）と長期（SMA50）の移動平均線を用いて、価格の動きを捉えた売買シグナルを生成します。
   |   ^^
15 |
16 | #### リスク管理
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:14:10
   |
12 | #### トレンドフォロー戦略
13 | - **目的**: 相場のトレンドを見極め、リスクを制限しつつ最大限の利益を得ることを目指しています。この戦略は、ガイドライン上の説明責任と明                                                              …
14 | - **ツール**: 短期（SMA20）と長期（SMA50）の移動平均線を用いて、価格の動きを捉えた売買シグナルを生成します。
   |             ^
15 |
16 | #### リスク管理
   |

invalid-syntax: Got unexpected token （
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:14:14
   |
12 | #### トレンドフォロー戦略
13 | - **目的**: 相場のトレンドを見極め、リスクを制限しつつ最大限の利益を得ることを目指しています。この戦略は、ガイドライン上の説明責任と明                                                              …
14 | - **ツール**: 短期（SMA20）と長期（SMA50）の移動平均線を用いて、価格の動きを捉えた売買シグナルを生成します。
   |                   ^^
15 |
16 | #### リスク管理
   |

invalid-syntax: Got unexpected token ）
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:14:20
   |
12 | #### トレンドフォロー戦略
13 | - **目的**: 相場のトレンドを見極め、リスクを制限しつつ最大限の利益を得ることを目指しています。この戦略は、ガイドライン上の説明責任と明                                                              …
14 | - **ツール**: 短期（SMA20）と長期（SMA50）の移動平均線を用いて、価格の動きを捉えた売買シグナルを生成します。
   |                          ^^
15 |
16 | #### リスク管理
   |

invalid-syntax: Got unexpected token （
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:14:24
   |
12 | #### トレンドフォロー戦略
13 | - **目的**: 相場のトレンドを見極め、リスクを制限しつつ最大限の利益を得ることを目指しています。この戦略は、ガイドライン上の説明責任と明                                                              …
14 | - **ツール**: 短期（SMA20）と長期（SMA50）の移動平均線を用いて、価格の動きを捉えた売買シグナルを生成します。
   |                                  ^^
15 |
16 | #### リスク管理
   |

invalid-syntax: Got unexpected token ）
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:14:30
   |
12 | #### トレンドフォロー戦略
13 | - **目的**: 相場のトレンドを見極め、リスクを制限しつつ最大限の利益を得ることを目指しています。この戦略は、ガイドライン上の説明責任と明                                                              …
14 | - **ツール**: 短期（SMA20）と長期（SMA50）の移動平均線を用いて、価格の動きを捉えた売買シグナルを生成します。
   |                                         ^^
15 |
16 | #### リスク管理
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:14:41
   |
12 | #### トレンドフォロー戦略
13 | - **目的**: 相場のトレンドを見極め、リスクを制限しつつ最大限の利益を得ることを目指しています。この戦略は、ガイドライン上の説明責任と明                                                              …
14 | - **ツール**: 短期（SMA20）と長期（SMA50）の移動平均線を用いて、価格の動きを捉えた売買シグナルを生成します。
   |                                                               ^^
15 |
16 | #### リスク管理
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:14:63
   |
12 | #### トレンドフォロー戦略
13 | - **目的**: 相場のトレンドを見極め、リスクを制限しつつ最大限の利益を得ることを目指しています。この戦略は、ガイドライン上の説明責任と明                                                              …
14 | - **ツール**: 短期（SMA20）と長期（SMA50）の移動平均線を用いて、価格の動きを捉えた売買シグナルを生成します。
   |                                                                                                           ^^
15 |
16 | #### リスク管理
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:14:64
   |
12 | #### トレンドフォロー戦略
13 | - **目的**: 相場のトレンドを見極め、リスクを制限しつつ最大限の利益を得ることを目指しています。この戦略は、ガイドライン上の説明責任と明                                                              …
14 | - **ツール**: 短期（SMA20）と長期（SMA50）の移動平均線を用いて、価格の動きを捉えた売買シグナルを生成します。
   |                                                                                                             ^
15 |
16 | #### リスク管理
   |

invalid-syntax: Invalid annotated assignment target
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:17:1
   |
16 | #### リスク管理
17 | - **ストップロスと利益確定手法**: 目標価格の一定比率を基に、売買シグナルを生成することで損失を限定し、利益を確保します。このプロセスは                                                              …
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
18 | - **実装**: `risk_management.py`でリスク管理ロジックが実装されています。
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:17:3
   |
16 | #### リスク管理
17 | - **ストップロスと利益確定手法**: 目標価格の一定比率を基に、売買シグナルを生成することで損失を限定し、利益を確保します。このプロセスは                                                              …
   |   ^^
18 | - **実装**: `risk_management.py`でリスク管理ロジックが実装されています。
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:17:20
   |
16 | #### リスク管理
17 | - **ストップロスと利益確定手法**: 目標価格の一定比率を基に、売買シグナルを生成することで損失を限定し、利益を確保します。このプロセスは                                                              …
   |                                 ^
18 | - **実装**: `risk_management.py`でリスク管理ロジックが実装されています。
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:17:34
   |
16 | #### リスク管理
17 | - **ストップロスと利益確定手法**: 目標価格の一定比率を基に、売買シグナルを生成することで損失を限定し、利益を確保します。このプロセスは                                                              …
   |                                                           ^^
18 | - **実装**: `risk_management.py`でリスク管理ロジックが実装されています。
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:17:55
   |
16 | #### リスク管理
17 | - **ストップロスと利益確定手法**: 目標価格の一定比率を基に、売買シグナルを生成することで損失を限定し、利益を確保します。このプロセスは                                                              …
   |                                                                                                     ^^
18 | - **実装**: `risk_management.py`でリスク管理ロジックが実装されています。
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:17:64
   |
16 | #### リスク管理
17 | - **ストップロスと利益確定手法**: 目標価格の一定比率を基に、売買シグナルを生成することで損失を限定し、利益を確保します。このプロセスは                                                              …
   |                                                                                                                       ^^
18 | - **実装**: `risk_management.py`でリスク管理ロジックが実装されています。
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:17:72
   |
16 | …
17 | …スは、セキュリティと障害対応の観点から、各取引のリスクを管理するために設計されています。
   |       ^^
18 | …
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:17:89
   |
16 | …
17 | …に設計されています。
^  |
18 | …
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:17:113
   |
16 | …
17 | …
   ^^
18 | …
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:17:114
   |
16 | …
17 | …
   | ^
18 | …
   |

invalid-syntax: Invalid annotated assignment target
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:18:1
   |
16 | #### リスク管理
17 | - **ストップロスと利益確定手法**: 目標価格の一定比率を基に、売買シグナルを生成することで損失を限定し、利益を確保します。このプロセスは                                                              …
18 | - **実装**: `risk_management.py`でリスク管理ロジックが実装されています。
   | ^^^^^^^^^^
19 |
20 | ### 2. 使用技術
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:18:3
   |
16 | #### リスク管理
17 | - **ストップロスと利益確定手法**: 目標価格の一定比率を基に、売買シグナルを生成することで損失を限定し、利益を確保します。このプロセスは                                                              …
18 | - **実装**: `risk_management.py`でリスク管理ロジックが実装されています。
   |   ^^
19 |
20 | ### 2. 使用技術
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:18:9
   |
16 | #### リスク管理
17 | - **ストップロスと利益確定手法**: 目標価格の一定比率を基に、売買シグナルを生成することで損失を限定し、利益を確保します。このプロセスは                                                              …
18 | - **実装**: `risk_management.py`でリスク管理ロジックが実装されています。
   |           ^
19 |
20 | ### 2. 使用技術
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:18:11
   |
16 | #### リスク管理
17 | - **ストップロスと利益確定手法**: 目標価格の一定比率を基に、売買シグナルを生成することで損失を限定し、利益を確保します。このプロセスは                                                              …
18 | - **実装**: `risk_management.py`でリスク管理ロジックが実装されています。
   |             ^
19 |
20 | ### 2. 使用技術
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:18:30
   |
16 | #### リスク管理
17 | - **ストップロスと利益確定手法**: 目標価格の一定比率を基に、売買シグナルを生成することで損失を限定し、利益を確保します。このプロセスは                                                              …
18 | - **実装**: `risk_management.py`でリスク管理ロジックが実装されています。
   |                                ^
19 |
20 | ### 2. 使用技術
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:18:50
   |
16 | #### リスク管理
17 | - **ストップロスと利益確定手法**: 目標価格の一定比率を基に、売買シグナルを生成することで損失を限定し、利益を確保します。このプロセスは                                                              …
18 | - **実装**: `risk_management.py`でリスク管理ロジックが実装されています。
   |                                                                       ^^
19 |
20 | ### 2. 使用技術
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:18:51
   |
16 | #### リスク管理
17 | - **ストップロスと利益確定手法**: 目標価格の一定比率を基に、売買シグナルを生成することで損失を限定し、利益を確保します。このプロセスは                                                              …
18 | - **実装**: `risk_management.py`でリスク管理ロジックが実装されています。
   |                                                                         ^
19 |
20 | ### 2. 使用技術
   |

invalid-syntax: Got unexpected token （
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:23:26
   |
22 | #### 技術スタック
23 | - Python言語の堅牢性とその豊富なライブラリ（pandas、numpy、ta-lib）を用いてデータ操作とテクニカル分析を行います。
   |                                           ^^
24 | - Docker上でのAirflowを用いてスケジューリングし、トレード履歴の管理とプロセス自動化を行います。
25 | - noctria_guiにより、すべての機能をGUI管理ツールで一元管理し、ユーザーエクスペリエンスの向上を図ります。
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:23:33
   |
22 | #### 技術スタック
23 | - Python言語の堅牢性とその豊富なライブラリ（pandas、numpy、ta-lib）を用いてデータ操作とテクニカル分析を行います。
   |                                                   ^^
24 | - Docker上でのAirflowを用いてスケジューリングし、トレード履歴の管理とプロセス自動化を行います。
25 | - noctria_guiにより、すべての機能をGUI管理ツールで一元管理し、ユーザーエクスペリエンスの向上を図ります。
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:23:39
   |
22 | #### 技術スタック
23 | - Python言語の堅牢性とその豊富なライブラリ（pandas、numpy、ta-lib）を用いてデータ操作とテクニカル分析を行います。
   |                                                          ^^
24 | - Docker上でのAirflowを用いてスケジューリングし、トレード履歴の管理とプロセス自動化を行います。
25 | - noctria_guiにより、すべての機能をGUI管理ツールで一元管理し、ユーザーエクスペリエンスの向上を図ります。
   |

invalid-syntax: Got unexpected token ）
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:23:46
   |
22 | #### 技術スタック
23 | - Python言語の堅牢性とその豊富なライブラリ（pandas、numpy、ta-lib）を用いてデータ操作とテクニカル分析を行います。
   |                                                                  ^^
24 | - Docker上でのAirflowを用いてスケジューリングし、トレード履歴の管理とプロセス自動化を行います。
25 | - noctria_guiにより、すべての機能をGUI管理ツールで一元管理し、ユーザーエクスペリエンスの向上を図ります。
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:23:69
   |
22 | #### 技術スタック
23 | - Python言語の堅牢性とその豊富なライブラリ（pandas、numpy、ta-lib）を用いてデータ操作とテクニカル分析を行います。
   |                                                                                                                ^^
24 | - Docker上でのAirflowを用いてスケジューリングし、トレード履歴の管理とプロセス自動化を行います。
25 | - noctria_guiにより、すべての機能をGUI管理ツールで一元管理し、ユーザーエクスペリエンスの向上を図ります。
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:23:70
   |
22 | #### 技術スタック
23 | - Python言語の堅牢性とその豊富なライブラリ（pandas、numpy、ta-lib）を用いてデータ操作とテクニカル分析を行います。
   |                                                                                                                  ^
24 | - Docker上でのAirflowを用いてスケジューリングし、トレード履歴の管理とプロセス自動化を行います。
25 | - noctria_guiにより、すべての機能をGUI管理ツールで一元管理し、ユーザーエクスペリエンスの向上を図ります。
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:24:32
   |
22 | #### 技術スタック
23 | - Python言語の堅牢性とその豊富なライブラリ（pandas、numpy、ta-lib）を用いてデータ操作とテクニカル分析を行います。
24 | - Docker上でのAirflowを用いてスケジューリングし、トレード履歴の管理とプロセス自動化を行います。
   |                                                ^^
25 | - noctria_guiにより、すべての機能をGUI管理ツールで一元管理し、ユーザーエクスペリエンスの向上を図ります。
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:24:55
   |
22 | #### 技術スタック
23 | - Python言語の堅牢性とその豊富なライブラリ（pandas、numpy、ta-lib）を用いてデータ操作とテクニカル分析を行います。
24 | - Docker上でのAirflowを用いてスケジューリングし、トレード履歴の管理とプロセス自動化を行います。
   |                                                                                              ^^
25 | - noctria_guiにより、すべての機能をGUI管理ツールで一元管理し、ユーザーエクスペリエンスの向上を図ります。
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:24:56
   |
22 | #### 技術スタック
23 | - Python言語の堅牢性とその豊富なライブラリ（pandas、numpy、ta-lib）を用いてデータ操作とテクニカル分析を行います。
24 | - Docker上でのAirflowを用いてスケジューリングし、トレード履歴の管理とプロセス自動化を行います。
   |                                                                                                ^
25 | - noctria_guiにより、すべての機能をGUI管理ツールで一元管理し、ユーザーエクスペリエンスの向上を図ります。
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:25:17
   |
23 | - Python言語の堅牢性とその豊富なライブラリ（pandas、numpy、ta-lib）を用いてデータ操作とテクニカル分析を行います。
24 | - Docker上でのAirflowを用いてスケジューリングし、トレード履歴の管理とプロセス自動化を行います。
25 | - noctria_guiにより、すべての機能をGUI管理ツールで一元管理し、ユーザーエクスペリエンスの向上を図ります。
   |                    ^^
26 |
27 | ### 3. 実装ファイル
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:25:39
   |
23 | - Python言語の堅牢性とその豊富なライブラリ（pandas、numpy、ta-lib）を用いてデータ操作とテクニカル分析を行います。
24 | - Docker上でのAirflowを用いてスケジューリングし、トレード履歴の管理とプロセス自動化を行います。
25 | - noctria_guiにより、すべての機能をGUI管理ツールで一元管理し、ユーザーエクスペリエンスの向上を図ります。
   |                                                             ^^
26 |
27 | ### 3. 実装ファイル
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:25:60
   |
23 | - Python言語の堅牢性とその豊富なライブラリ（pandas、numpy、ta-lib）を用いてデータ操作とテクニカル分析を行います。
24 | - Docker上でのAirflowを用いてスケジューリングし、トレード履歴の管理とプロセス自動化を行います。
25 | - noctria_guiにより、すべての機能をGUI管理ツールで一元管理し、ユーザーエクスペリエンスの向上を図ります。
   |                                                                                                       ^^
26 |
27 | ### 3. 実装ファイル
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:25:61
   |
23 | - Python言語の堅牢性とその豊富なライブラリ（pandas、numpy、ta-lib）を用いてデータ操作とテクニカル分析を行います。
24 | - Docker上でのAirflowを用いてスケジューリングし、トレード履歴の管理とプロセス自動化を行います。
25 | - noctria_guiにより、すべての機能をGUI管理ツールで一元管理し、ユーザーエクスペリエンスの向上を図ります。
   |                                                                                                         ^
26 |
27 | ### 3. 実装ファイル
   |

invalid-syntax: Invalid annotated assignment target
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:30:1
   |
29 | #### `strategy.py`
30 | - **目的**: トレードシグナルの生成を中心に実施。コード内での注釈が各プロセスの目的とその動機を詳細に説明しています。
   | ^^^^^^^^^^
31 |   
32 | ```python
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:30:3
   |
29 | #### `strategy.py`
30 | - **目的**: トレードシグナルの生成を中心に実施。コード内での注釈が各プロセスの目的とその動機を詳細に説明しています。
   |   ^^
31 |   
32 | ```python
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:30:9
   |
29 | #### `strategy.py`
30 | - **目的**: トレードシグナルの生成を中心に実施。コード内での注釈が各プロセスの目的とその動機を詳細に説明しています。
   |           ^
31 |   
32 | ```python
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:30:28
   |
29 | #### `strategy.py`
30 | - **目的**: トレードシグナルの生成を中心に実施。コード内での注釈が各プロセスの目的とその動機を詳細に説明しています。
   |                                               ^^
31 |   
32 | ```python
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:30:62
   |
29 | #### `strategy.py`
30 | - **目的**: トレードシグナルの生成を中心に実施。コード内での注釈が各プロセスの目的とその動機を詳細に説明しています。
   |                                                                                                                   ^^
31 |   
32 | ```python
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:30:63
   |
29 | #### `strategy.py`
30 | - **目的**: トレードシグナルの生成を中心に実施。コード内での注釈が各プロセスの目的とその動機を詳細に説明しています。
   |                                                                                                                     ^
31 |   
32 | ```python
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:32:1
   |
30 | - **目的**: トレードシグナルの生成を中心に実施。コード内での注釈が各プロセスの目的とその動機を詳細に説明しています。
31 |   
32 | ```python
   | ^
33 | import pandas as pd
34 | import numpy as np
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:32:2
   |
30 | - **目的**: トレードシグナルの生成を中心に実施。コード内での注釈が各プロセスの目的とその動機を詳細に説明しています。
31 |   
32 | ```python
   |  ^
33 | import pandas as pd
34 | import numpy as np
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:32:3
   |
30 | - **目的**: トレードシグナルの生成を中心に実施。コード内での注釈が各プロセスの目的とその動機を詳細に説明しています。
31 |   
32 | ```python
   |   ^
33 | import pandas as pd
34 | import numpy as np
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:49:1
   |
48 |     return buy_signal, sell_signal
49 | ```
   | ^
50 |
51 | #### `risk_management.py`
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:49:2
   |
48 |     return buy_signal, sell_signal
49 | ```
   |  ^
50 |
51 | #### `risk_management.py`
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:49:3
   |
48 |     return buy_signal, sell_signal
49 | ```
   |   ^
50 |
51 | #### `risk_management.py`
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:49:4
   |
48 |     return buy_signal, sell_signal
49 | ```
   |    ^
50 |
51 | #### `risk_management.py`
   |

invalid-syntax: Invalid annotated assignment target
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:52:1
   |
51 | #### `risk_management.py`
52 | - **目的**: リスクを管理し、ストップロスと利益確定を判断する。ガイドラインに従い、安全で効果的なリスク管理を実装します。
   | ^^^^^^^^^^
53 |   
54 | ```python
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:52:3
   |
51 | #### `risk_management.py`
52 | - **目的**: リスクを管理し、ストップロスと利益確定を判断する。ガイドラインに従い、安全で効果的なリスク管理を実装します。
   |   ^^
53 |   
54 | ```python
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:52:9
   |
51 | #### `risk_management.py`
52 | - **目的**: リスクを管理し、ストップロスと利益確定を判断する。ガイドラインに従い、安全で効果的なリスク管理を実装します。
   |           ^
53 |   
54 | ```python
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:52:18
   |
51 | #### `risk_management.py`
52 | - **目的**: リスクを管理し、ストップロスと利益確定を判断する。ガイドラインに従い、安全で効果的なリスク管理を実装します。
   |                           ^^
53 |   
54 | ```python
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:52:35
   |
51 | #### `risk_management.py`
52 | - **目的**: リスクを管理し、ストップロスと利益確定を判断する。ガイドラインに従い、安全で効果的なリスク管理を実装します。
   |                                                             ^^
53 |   
54 | ```python
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:52:45
   |
51 | #### `risk_management.py`
52 | - **目的**: リスクを管理し、ストップロスと利益確定を判断する。ガイドラインに従い、安全で効果的なリスク管理を実装します。
   |                                                                                 ^^
53 |   
54 | ```python
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:52:64
   |
51 | #### `risk_management.py`
52 | - **目的**: リスクを管理し、ストップロスと利益確定を判断する。ガイドラインに従い、安全で効果的なリスク管理を実装します。
   |                                                                                                                       ^^
53 |   
54 | ```python
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:52:65
   |
51 | #### `risk_management.py`
52 | - **目的**: リスクを管理し、ストップロスと利益確定を判断する。ガイドラインに従い、安全で効果的なリスク管理を実装します。
   |                                                                                                                         ^
53 |   
54 | ```python
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:54:1
   |
52 | - **目的**: リスクを管理し、ストップロスと利益確定を判断する。ガイドラインに従い、安全で効果的なリスク管理を実装します。
53 |   
54 | ```python
   | ^
55 | def risk_management(target_price, current_price):
56 |     """
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:54:2
   |
52 | - **目的**: リスクを管理し、ストップロスと利益確定を判断する。ガイドラインに従い、安全で効果的なリスク管理を実装します。
53 |   
54 | ```python
   |  ^
55 | def risk_management(target_price, current_price):
56 |     """
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:54:3
   |
52 | - **目的**: リスクを管理し、ストップロスと利益確定を判断する。ガイドラインに従い、安全で効果的なリスク管理を実装します。
53 |   
54 | ```python
   |   ^
55 | def risk_management(target_price, current_price):
56 |     """
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:68:1
   |
66 |         return "take_profit"
67 |     return "hold"
68 | ```
   | ^
69 |
70 | #### `execution.py`
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:68:2
   |
66 |         return "take_profit"
67 |     return "hold"
68 | ```
   |  ^
69 |
70 | #### `execution.py`
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:68:3
   |
66 |         return "take_profit"
67 |     return "hold"
68 | ```
   |   ^
69 |
70 | #### `execution.py`
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:68:4
   |
66 |         return "take_profit"
67 |     return "hold"
68 | ```
   |    ^
69 |
70 | #### `execution.py`
   |

invalid-syntax: Invalid annotated assignment target
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:71:1
   |
70 | #### `execution.py`
71 | - **目的**: 取引シグナルに基づき、実際の注文を実行します。このプロセスはNoctriaの中心であるsrc/core/king_noctria.pyに統合されています。
   | ^^^^^^^^^^
72 |   
73 | ```python
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:71:3
   |
70 | #### `execution.py`
71 | - **目的**: 取引シグナルに基づき、実際の注文を実行します。このプロセスはNoctriaの中心であるsrc/core/king_noctria.pyに統合されています。
   |   ^^
72 |   
73 | ```python
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:71:9
   |
70 | #### `execution.py`
71 | - **目的**: 取引シグナルに基づき、実際の注文を実行します。このプロセスはNoctriaの中心であるsrc/core/king_noctria.pyに統合されています。
   |           ^
72 |   
73 | ```python
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:71:21
   |
70 | #### `execution.py`
71 | - **目的**: 取引シグナルに基づき、実際の注文を実行します。このプロセスはNoctriaの中心であるsrc/core/king_noctria.pyに統合されています。
   |                                 ^^
72 |   
73 | ```python
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:71:33
   |
70 | #### `execution.py`
71 | - **目的**: 取引シグナルに基づき、実際の注文を実行します。このプロセスはNoctriaの中心であるsrc/core/king_noctria.pyに統合されています。
   |                                                         ^^
72 |   
73 | ```python
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:71:87
   |
70 | …
71 | …octria.pyに統合されています。
   |                             ^^
72 | …
73 | …
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:71:88
   |
70 | …
71 | …ctria.pyに統合されています。
   |                              ^
72 | …
73 | …
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:73:1
   |
71 | - **目的**: 取引シグナルに基づき、実際の注文を実行します。このプロセスはNoctriaの中心であるsrc/core/king_noctria.pyに統合されています。
72 |   
73 | ```python
   | ^
74 | def execute_order(signal):
75 |     """
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:73:2
   |
71 | - **目的**: 取引シグナルに基づき、実際の注文を実行します。このプロセスはNoctriaの中心であるsrc/core/king_noctria.pyに統合されています。
72 |   
73 | ```python
   |  ^
74 | def execute_order(signal):
75 |     """
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:73:3
   |
71 | - **目的**: 取引シグナルに基づき、実際の注文を実行します。このプロセスはNoctriaの中心であるsrc/core/king_noctria.pyに統合されています。
72 |   
73 | ```python
   |   ^
74 | def execute_order(signal):
75 |     """
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:86:1
   |
84 |     elif signal == "take_profit":
85 |         pass
86 | ```
   | ^
87 |
88 | ### 4. ガイドライン準拠
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:86:2
   |
84 |     elif signal == "take_profit":
85 |         pass
86 | ```
   |  ^
87 |
88 | ### 4. ガイドライン準拠
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:86:3
   |
84 |     elif signal == "take_profit":
85 |         pass
86 | ```
   |   ^
87 |
88 | ### 4. ガイドライン準拠
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:86:4
   |
84 |     elif signal == "take_profit":
85 |         pass
86 | ```
   |    ^
87 |
88 | ### 4. ガイドライン準拠
   |

invalid-syntax: Invalid annotated assignment target
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:90:1
   |
88 | ### 4. ガイドライン準拠
89 |
90 | - **バージョン管理**: コードのバージョンを管理し、リリースノートを付けて変更履歴を記録します。
   | ^^^^^^^^^^^^^^^^^^^^
91 | - **説明責任コメント**: 各プロセスで目的とロジックを詳細に説明し、説明責任を果たします。
92 | - **セキュリティ考慮**: 取引API通信では暗号化と認証によるセキュリティ対策を講じています。
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:90:3
   |
88 | ### 4. ガイドライン準拠
89 |
90 | - **バージョン管理**: コードのバージョンを管理し、リリースノートを付けて変更履歴を記録します。
   |   ^^
91 | - **説明責任コメント**: 各プロセスで目的とロジックを詳細に説明し、説明責任を果たします。
92 | - **セキュリティ考慮**: 取引API通信では暗号化と認証によるセキュリティ対策を講じています。
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:90:14
   |
88 | ### 4. ガイドライン準拠
89 |
90 | - **バージョン管理**: コードのバージョンを管理し、リリースノートを付けて変更履歴を記録します。
   |                     ^
91 | - **説明責任コメント**: 各プロセスで目的とロジックを詳細に説明し、説明責任を果たします。
92 | - **セキュリティ考慮**: 取引API通信では暗号化と認証によるセキュリティ対策を講じています。
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:90:29
   |
88 | ### 4. ガイドライン準拠
89 |
90 | - **バージョン管理**: コードのバージョンを管理し、リリースノートを付けて変更履歴を記録します。
   |                                                 ^^
91 | - **説明責任コメント**: 各プロセスで目的とロジックを詳細に説明し、説明責任を果たします。
92 | - **セキュリティ考慮**: 取引API通信では暗号化と認証によるセキュリティ対策を講じています。
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:90:51
   |
88 | ### 4. ガイドライン準拠
89 |
90 | - **バージョン管理**: コードのバージョンを管理し、リリースノートを付けて変更履歴を記録します。
   |                                                                                             ^^
91 | - **説明責任コメント**: 各プロセスで目的とロジックを詳細に説明し、説明責任を果たします。
92 | - **セキュリティ考慮**: 取引API通信では暗号化と認証によるセキュリティ対策を講じています。
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:90:52
   |
88 | ### 4. ガイドライン準拠
89 |
90 | - **バージョン管理**: コードのバージョンを管理し、リリースノートを付けて変更履歴を記録します。
   |                                                                                               ^
91 | - **説明責任コメント**: 各プロセスで目的とロジックを詳細に説明し、説明責任を果たします。
92 | - **セキュリティ考慮**: 取引API通信では暗号化と認証によるセキュリティ対策を講じています。
   |

invalid-syntax: Invalid annotated assignment target
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:91:1
   |
90 | - **バージョン管理**: コードのバージョンを管理し、リリースノートを付けて変更履歴を記録します。
91 | - **説明責任コメント**: 各プロセスで目的とロジックを詳細に説明し、説明責任を果たします。
   | ^^^^^^^^^^^^^^^^^^^^^^
92 | - **セキュリティ考慮**: 取引API通信では暗号化と認証によるセキュリティ対策を講じています。
93 | - **A/Bテスト**: 複数の戦略実装を比較し、その効果を検証します。また、すべての取り組みを履歴DBに記録し、開発の透明性を確保します。
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:91:3
   |
90 | - **バージョン管理**: コードのバージョンを管理し、リリースノートを付けて変更履歴を記録します。
91 | - **説明責任コメント**: 各プロセスで目的とロジックを詳細に説明し、説明責任を果たします。
   |   ^^
92 | - **セキュリティ考慮**: 取引API通信では暗号化と認証によるセキュリティ対策を講じています。
93 | - **A/Bテスト**: 複数の戦略実装を比較し、その効果を検証します。また、すべての取り組みを履歴DBに記録し、開発の透明性を確保します。
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:91:15
   |
90 | - **バージョン管理**: コードのバージョンを管理し、リリースノートを付けて変更履歴を記録します。
91 | - **説明責任コメント**: 各プロセスで目的とロジックを詳細に説明し、説明責任を果たします。
   |                       ^
92 | - **セキュリティ考慮**: 取引API通信では暗号化と認証によるセキュリティ対策を講じています。
93 | - **A/Bテスト**: 複数の戦略実装を比較し、その効果を検証します。また、すべての取り組みを履歴DBに記録し、開発の透明性を確保します。
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:91:37
   |
90 | - **バージョン管理**: コードのバージョンを管理し、リリースノートを付けて変更履歴を記録します。
91 | - **説明責任コメント**: 各プロセスで目的とロジックを詳細に説明し、説明責任を果たします。
   |                                                                 ^^
92 | - **セキュリティ考慮**: 取引API通信では暗号化と認証によるセキュリティ対策を講じています。
93 | - **A/Bテスト**: 複数の戦略実装を比較し、その効果を検証します。また、すべての取り組みを履歴DBに記録し、開発の透明性を確保します。
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:91:48
   |
90 | - **バージョン管理**: コードのバージョンを管理し、リリースノートを付けて変更履歴を記録します。
91 | - **説明責任コメント**: 各プロセスで目的とロジックを詳細に説明し、説明責任を果たします。
   |                                                                                       ^^
92 | - **セキュリティ考慮**: 取引API通信では暗号化と認証によるセキュリティ対策を講じています。
93 | - **A/Bテスト**: 複数の戦略実装を比較し、その効果を検証します。また、すべての取り組みを履歴DBに記録し、開発の透明性を確保します。
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:91:49
   |
90 | - **バージョン管理**: コードのバージョンを管理し、リリースノートを付けて変更履歴を記録します。
91 | - **説明責任コメント**: 各プロセスで目的とロジックを詳細に説明し、説明責任を果たします。
   |                                                                                         ^
92 | - **セキュリティ考慮**: 取引API通信では暗号化と認証によるセキュリティ対策を講じています。
93 | - **A/Bテスト**: 複数の戦略実装を比較し、その効果を検証します。また、すべての取り組みを履歴DBに記録し、開発の透明性を確保します。
   |

invalid-syntax: Invalid annotated assignment target
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:92:1
   |
90 | - **バージョン管理**: コードのバージョンを管理し、リリースノートを付けて変更履歴を記録します。
91 | - **説明責任コメント**: 各プロセスで目的とロジックを詳細に説明し、説明責任を果たします。
92 | - **セキュリティ考慮**: 取引API通信では暗号化と認証によるセキュリティ対策を講じています。
   | ^^^^^^^^^^^^^^^^^^^^^^
93 | - **A/Bテスト**: 複数の戦略実装を比較し、その効果を検証します。また、すべての取り組みを履歴DBに記録し、開発の透明性を確保します。
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:92:3
   |
90 | - **バージョン管理**: コードのバージョンを管理し、リリースノートを付けて変更履歴を記録します。
91 | - **説明責任コメント**: 各プロセスで目的とロジックを詳細に説明し、説明責任を果たします。
92 | - **セキュリティ考慮**: 取引API通信では暗号化と認証によるセキュリティ対策を講じています。
   |   ^^
93 | - **A/Bテスト**: 複数の戦略実装を比較し、その効果を検証します。また、すべての取り組みを履歴DBに記録し、開発の透明性を確保します。
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:92:15
   |
90 | - **バージョン管理**: コードのバージョンを管理し、リリースノートを付けて変更履歴を記録します。
91 | - **説明責任コメント**: 各プロセスで目的とロジックを詳細に説明し、説明責任を果たします。
92 | - **セキュリティ考慮**: 取引API通信では暗号化と認証によるセキュリティ対策を講じています。
   |                       ^
93 | - **A/Bテスト**: 複数の戦略実装を比較し、その効果を検証します。また、すべての取り組みを履歴DBに記録し、開発の透明性を確保します。
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:92:50
   |
90 | - **バージョン管理**: コードのバージョンを管理し、リリースノートを付けて変更履歴を記録します。
91 | - **説明責任コメント**: 各プロセスで目的とロジックを詳細に説明し、説明責任を果たします。
92 | - **セキュリティ考慮**: 取引API通信では暗号化と認証によるセキュリティ対策を講じています。
   |                                                                                        ^^
93 | - **A/Bテスト**: 複数の戦略実装を比較し、その効果を検証します。また、すべての取り組みを履歴DBに記録し、開発の透明性を確保します。
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:92:51
   |
90 | - **バージョン管理**: コードのバージョンを管理し、リリースノートを付けて変更履歴を記録します。
91 | - **説明責任コメント**: 各プロセスで目的とロジックを詳細に説明し、説明責任を果たします。
92 | - **セキュリティ考慮**: 取引API通信では暗号化と認証によるセキュリティ対策を講じています。
   |                                                                                          ^
93 | - **A/Bテスト**: 複数の戦略実装を比較し、その効果を検証します。また、すべての取り組みを履歴DBに記録し、開発の透明性を確保します。
   |

invalid-syntax: Invalid annotated assignment target
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:93:1
   |
91 | - **説明責任コメント**: 各プロセスで目的とロジックを詳細に説明し、説明責任を果たします。
92 | - **セキュリティ考慮**: 取引API通信では暗号化と認証によるセキュリティ対策を講じています。
93 | - **A/Bテスト**: 複数の戦略実装を比較し、その効果を検証します。また、すべての取り組みを履歴DBに記録し、開発の透明性を確保します。
   | ^^^^^^^^^^^^^^^
94 |
95 | この設計が、トレンドに追随しつつ効率的な取引を可能にするための基盤を築き、将来的なシステム拡張やクラウドへの移行を容易にします。ガイド                                                                  …
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:93:3
   |
91 | - **説明責任コメント**: 各プロセスで目的とロジックを詳細に説明し、説明責任を果たします。
92 | - **セキュリティ考慮**: 取引API通信では暗号化と認証によるセキュリティ対策を講じています。
93 | - **A/Bテスト**: 複数の戦略実装を比較し、その効果を検証します。また、すべての取り組みを履歴DBに記録し、開発の透明性を確保します。
   |   ^^
94 |
95 | この設計が、トレンドに追随しつつ効率的な取引を可能にするための基盤を築き、将来的なシステム拡張やクラウドへの移行を容易にします。ガイド                                                                  …
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:93:13
   |
91 | - **説明責任コメント**: 各プロセスで目的とロジックを詳細に説明し、説明責任を果たします。
92 | - **セキュリティ考慮**: 取引API通信では暗号化と認証によるセキュリティ対策を講じています。
93 | - **A/Bテスト**: 複数の戦略実装を比較し、その効果を検証します。また、すべての取り組みを履歴DBに記録し、開発の透明性を確保します。
   |                ^
94 |
95 | この設計が、トレンドに追随しつつ効率的な取引を可能にするための基盤を築き、将来的なシステム拡張やクラウドへの移行を容易にします。ガイド                                                                  …
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:93:26
   |
91 | - **説明責任コメント**: 各プロセスで目的とロジックを詳細に説明し、説明責任を果たします。
92 | - **セキュリティ考慮**: 取引API通信では暗号化と認証によるセキュリティ対策を講じています。
93 | - **A/Bテスト**: 複数の戦略実装を比較し、その効果を検証します。また、すべての取り組みを履歴DBに記録し、開発の透明性を確保します。
   |                                        ^^
94 |
95 | この設計が、トレンドに追随しつつ効率的な取引を可能にするための基盤を築き、将来的なシステム拡張やクラウドへの移行を容易にします。ガイド                                                                  …
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:93:37
   |
91 | - **説明責任コメント**: 各プロセスで目的とロジックを詳細に説明し、説明責任を果たします。
92 | - **セキュリティ考慮**: 取引API通信では暗号化と認証によるセキュリティ対策を講じています。
93 | - **A/Bテスト**: 複数の戦略実装を比較し、その効果を検証します。また、すべての取り組みを履歴DBに記録し、開発の透明性を確保します。
   |                                                              ^^
94 |
95 | この設計が、トレンドに追随しつつ効率的な取引を可能にするための基盤を築き、将来的なシステム拡張やクラウドへの移行を容易にします。ガイド                                                                  …
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:93:40
   |
91 | - **説明責任コメント**: 各プロセスで目的とロジックを詳細に説明し、説明責任を果たします。
92 | - **セキュリティ考慮**: 取引API通信では暗号化と認証によるセキュリティ対策を講じています。
93 | - **A/Bテスト**: 複数の戦略実装を比較し、その効果を検証します。また、すべての取り組みを履歴DBに記録し、開発の透明性を確保します。
   |                                                                    ^^
94 |
95 | この設計が、トレンドに追随しつつ効率的な取引を可能にするための基盤を築き、将来的なシステム拡張やクラウドへの移行を容易にします。ガイド                                                                  …
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:93:58
   |
91 | - **説明責任コメント**: 各プロセスで目的とロジックを詳細に説明し、説明責任を果たします。
92 | - **セキュリティ考慮**: 取引API通信では暗号化と認証によるセキュリティ対策を講じています。
93 | - **A/Bテスト**: 複数の戦略実装を比較し、その効果を検証します。また、すべての取り組みを履歴DBに記録し、開発の透明性を確保します。
   |                                                                                                      ^^
94 |
95 | この設計が、トレンドに追随しつつ効率的な取引を可能にするための基盤を築き、将来的なシステム拡張やクラウドへの移行を容易にします。ガイド                                                                  …
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:93:71
   |
91 | - **説明責任コメント**: 各プロセスで目的とロジックを詳細に説明し、説明責任を果たします。
92 | - **セキュリティ考慮**: 取引API通信では暗号化と認証によるセキュリティ対策を講じています。
93 | - **A/Bテスト**: 複数の戦略実装を比較し、その効果を検証します。また、すべての取り組みを履歴DBに記録し、開発の透明性を確保します。
   |                                                                                                                                ^^
94 |
95 | この設計が、トレンドに追随しつつ効率的な取引を可能にするための基盤を築き、将来的なシステム拡張やクラウドへの移行を容易にします。ガイド                                                                  …
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:93:72
   |
91 | …
92 | …
93 | …性を確保します。
   |                   ^
94 | …
95 | …。ガイドラインに従った一貫した設計により、プロセスの改善と透明性が確保されます。
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:95:6
   |
93 | - **A/Bテスト**: 複数の戦略実装を比較し、その効果を検証します。また、すべての取り組みを履歴DBに記録し、開発の透明性を確保します。
94 |
95 | この設計が、トレンドに追随しつつ効率的な取引を可能にするための基盤を築き、将来的なシステム拡張やクラウドへの移行を容易にします。ガイド                                                                  …
   |           ^^
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:95:37
   |
93 | - **A/Bテスト**: 複数の戦略実装を比較し、その効果を検証します。また、すべての取り組みを履歴DBに記録し、開発の透明性を確保します。
94 |
95 | この設計が、トレンドに追随しつつ効率的な取引を可能にするための基盤を築き、将来的なシステム拡張やクラウドへの移行を容易にします。ガイド                                                                  …
   |                                                                         ^^
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:95:64
   |
93 | - **A/Bテスト**: 複数の戦略実装を比較し、その効果を検証します。また、すべての取り組みを履歴DBに記録し、開発の透明性を確保します。
94 |
95 | この設計が、トレンドに追随しつつ効率的な取引を可能にするための基盤を築き、将来的なシステム拡張やクラウドへの移行を容易にします。ガイド                                                                  …
   |                                                                                                                               ^^
   |

invalid-syntax: Got unexpected token 、
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:95:84
   |
93 | …
94 | …
95 | …す。
^  |
   |

invalid-syntax: Got unexpected token 。
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:95:103
   |
93 | …
94 | …
95 | …
   ^^
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/generated_code/test_turn1.py:95:104
   |
93 | …
94 | …
95 | …
   | ^
   |

invalid-syntax: Expected a statement
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/mt5_test.py:1:1
  |
1 | <<<<<<< HEAD
  | ^^
2 | ﻿import MetaTrader5 as mt5
  |

invalid-syntax: Expected a statement
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/mt5_test.py:1:3
  |
1 | <<<<<<< HEAD
  |   ^^
2 | ﻿import MetaTrader5 as mt5
  |

invalid-syntax: Expected a statement
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/mt5_test.py:1:5
  |
1 | <<<<<<< HEAD
  |     ^^
2 | ﻿import MetaTrader5 as mt5
  |

invalid-syntax: Expected a statement
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/mt5_test.py:1:7
  |
1 | <<<<<<< HEAD
  |       ^
2 | ﻿import MetaTrader5 as mt5
  |

invalid-syntax: Got unexpected token ﻿
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/mt5_test.py:2:1
  |
1 | <<<<<<< HEAD
2 | ﻿import MetaTrader5 as mt5
  | ^
3 |
4 | # MetaTrader5への接続を初期化
  |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/mt5_test.py:31:1
   |
29 | mt5.shutdown()
30 | print("MetaTrader5を終了しました。")
31 | =======
   | ^^
32 | ﻿import MetaTrader5 as mt5
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/mt5_test.py:31:3
   |
29 | mt5.shutdown()
30 | print("MetaTrader5を終了しました。")
31 | =======
   |   ^^
32 | ﻿import MetaTrader5 as mt5
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/mt5_test.py:31:5
   |
29 | mt5.shutdown()
30 | print("MetaTrader5を終了しました。")
31 | =======
   |     ^^
32 | ﻿import MetaTrader5 as mt5
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/mt5_test.py:31:7
   |
29 | mt5.shutdown()
30 | print("MetaTrader5を終了しました。")
31 | =======
   |       ^
32 | ﻿import MetaTrader5 as mt5
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/mt5_test.py:31:8
   |
29 | mt5.shutdown()
30 | print("MetaTrader5を終了しました。")
31 | =======
   |        ^
32 | ﻿import MetaTrader5 as mt5
   |

invalid-syntax: Got unexpected token ﻿
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/mt5_test.py:32:1
   |
30 | print("MetaTrader5を終了しました。")
31 | =======
32 | ﻿import MetaTrader5 as mt5
   | ^
33 |
34 | # MetaTrader5への接続を初期化
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/mt5_test.py:61:1
   |
59 | mt5.shutdown()
60 | print("MetaTrader5を終了しました。")
61 | >>>>>>> 572191d22755722942baf299a92693377c177f7a
   | ^^
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/mt5_test.py:61:3
   |
59 | mt5.shutdown()
60 | print("MetaTrader5を終了しました。")
61 | >>>>>>> 572191d22755722942baf299a92693377c177f7a
   |   ^^
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/mt5_test.py:61:5
   |
59 | mt5.shutdown()
60 | print("MetaTrader5を終了しました。")
61 | >>>>>>> 572191d22755722942baf299a92693377c177f7a
   |     ^^
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/mt5_test.py:61:7
   |
59 | mt5.shutdown()
60 | print("MetaTrader5を終了しました。")
61 | >>>>>>> 572191d22755722942baf299a92693377c177f7a
   |       ^
   |

invalid-syntax: Simple statements must be separated by newlines or semicolons
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/mt5_test.py:61:15
   |
59 | mt5.shutdown()
60 | print("MetaTrader5を終了しました。")
61 | >>>>>>> 572191d22755722942baf299a92693377c177f7a
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/noctria_gui/backend/__init__.py:22:1
   |
20 |     sys.path.insert(0, str(src_dir))
21 |
22 | import importlib
   | ^^^^^^^^^^^^^^^^
23 | import pkgutil
24 | from fastapi import APIRouter
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/noctria_gui/backend/__init__.py:23:1
   |
22 | import importlib
23 | import pkgutil
   | ^^^^^^^^^^^^^^
24 | from fastapi import APIRouter
25 | from typing import List
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/noctria_gui/backend/__init__.py:24:1
   |
22 | import importlib
23 | import pkgutil
24 | from fastapi import APIRouter
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
25 | from typing import List
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/noctria_gui/backend/__init__.py:25:1
   |
23 | import pkgutil
24 | from fastapi import APIRouter
25 | from typing import List
   | ^^^^^^^^^^^^^^^^^^^^^^^
26 |
27 | # ✅ router 一覧（FastAPI本体に登録されるルーター群）
   |

F841 Local variable `git_ok` is assigned to but never used
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/noctria_gui/routes/adoptions.py:78:13
   |
76 |             git_ok = True
77 |         except Exception:
78 |             git_ok = False
   |             ^^^^^^
79 |
80 |     idx = _build_registry_index()
   |
help: Remove assignment to unused variable `git_ok`

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/noctria_gui/routes/ai_detail.py:26:1
   |
24 | # ───────────────────────────────
25 |
26 | from src.core.path_config import NOCTRIA_GUI_TEMPLATES_DIR, DATA_DIR
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
27 |
28 | # STATS_DIRを絶対パス化（dataディレクトリのstatsフォルダ）
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/noctria_gui/routes/ai_routes.py:21:1
   |
19 |     sys.path.append(str(PROJECT_ROOT))
20 |
21 | from fastapi import APIRouter, Request
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
22 | from fastapi.responses import HTMLResponse
23 | from fastapi.templating import Jinja2Templates
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/noctria_gui/routes/ai_routes.py:22:1
   |
21 | from fastapi import APIRouter, Request
22 | from fastapi.responses import HTMLResponse
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
23 | from fastapi.templating import Jinja2Templates
24 | from src.core.path_config import NOCTRIA_GUI_TEMPLATES_DIR, STATS_DIR
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/noctria_gui/routes/ai_routes.py:23:1
   |
21 | from fastapi import APIRouter, Request
22 | from fastapi.responses import HTMLResponse
23 | from fastapi.templating import Jinja2Templates
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
24 | from src.core.path_config import NOCTRIA_GUI_TEMPLATES_DIR, STATS_DIR
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/noctria_gui/routes/ai_routes.py:24:1
   |
22 | from fastapi.responses import HTMLResponse
23 | from fastapi.templating import Jinja2Templates
24 | from src.core.path_config import NOCTRIA_GUI_TEMPLATES_DIR, STATS_DIR
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
25 |
26 | router = APIRouter(prefix="/ai", tags=["AI"])
   |

F821 Undefined name `chat_manager`
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/noctria_gui/routes/chat_api.py:28:5
   |
27 |     # ユーザーメッセージを履歴に追加
28 |     chat_manager.add_message("user", user_msg)
   |     ^^^^^^^^^^^^
29 |
30 |     # OpenAI API へ履歴を渡して応答を取得
   |

F821 Undefined name `chat_manager`
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/noctria_gui/routes/chat_api.py:34:22
   |
32 |         lambda: client.chat.completions.create(
33 |             model="gpt-4o",
34 |             messages=chat_manager.get_history()
   |                      ^^^^^^^^^^^^
35 |         )
36 |     )
   |

F821 Undefined name `chat_manager`
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/noctria_gui/routes/chat_api.py:40:5
   |
39 |     # アシスタント応答を履歴に追加
40 |     chat_manager.add_message("assistant", assistant_msg)
   |     ^^^^^^^^^^^^
41 |
42 |     return JSONResponse({"reply": assistant_msg})
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/noctria_gui/routes/hermes.py:16:1
   |
14 |     sys.path.insert(0, src_path)  # insertが望ましい（優先度高い）
15 |
16 | from src.hermes.strategy_generator import build_prompt, generate_strategy_code, save_to_file, save_to_db
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
17 |
18 | router = APIRouter()
   |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/noctria_gui/routes/king_routes.py:331:60
    |
330 |     # 3) 画面入力（最優先）
331 |     if (v := _maybe_cast(TOTAL_TIMESTEPS, int)) is not None: conf["TOTAL_TIMESTEPS"] = v
    |                                                            ^
332 |     if (v := _maybe_cast(learning_rate, float)) is not None: conf["learning_rate"] = v
333 |     if (v := _maybe_cast(n_steps, int)) is not None: conf["n_steps"] = v
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/noctria_gui/routes/king_routes.py:332:60
    |
330 |     # 3) 画面入力（最優先）
331 |     if (v := _maybe_cast(TOTAL_TIMESTEPS, int)) is not None: conf["TOTAL_TIMESTEPS"] = v
332 |     if (v := _maybe_cast(learning_rate, float)) is not None: conf["learning_rate"] = v
    |                                                            ^
333 |     if (v := _maybe_cast(n_steps, int)) is not None: conf["n_steps"] = v
334 |     if (v := _maybe_cast(batch_size, int)) is not None: conf["batch_size"] = v
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/noctria_gui/routes/king_routes.py:333:52
    |
331 |     if (v := _maybe_cast(TOTAL_TIMESTEPS, int)) is not None: conf["TOTAL_TIMESTEPS"] = v
332 |     if (v := _maybe_cast(learning_rate, float)) is not None: conf["learning_rate"] = v
333 |     if (v := _maybe_cast(n_steps, int)) is not None: conf["n_steps"] = v
    |                                                    ^
334 |     if (v := _maybe_cast(batch_size, int)) is not None: conf["batch_size"] = v
335 |     if (v := _maybe_cast(n_epochs, int)) is not None: conf["n_epochs"] = v
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/noctria_gui/routes/king_routes.py:334:55
    |
332 |     if (v := _maybe_cast(learning_rate, float)) is not None: conf["learning_rate"] = v
333 |     if (v := _maybe_cast(n_steps, int)) is not None: conf["n_steps"] = v
334 |     if (v := _maybe_cast(batch_size, int)) is not None: conf["batch_size"] = v
    |                                                       ^
335 |     if (v := _maybe_cast(n_epochs, int)) is not None: conf["n_epochs"] = v
336 |     if (v := _maybe_cast(gamma, float)) is not None: conf["gamma"] = v
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/noctria_gui/routes/king_routes.py:335:53
    |
333 |     if (v := _maybe_cast(n_steps, int)) is not None: conf["n_steps"] = v
334 |     if (v := _maybe_cast(batch_size, int)) is not None: conf["batch_size"] = v
335 |     if (v := _maybe_cast(n_epochs, int)) is not None: conf["n_epochs"] = v
    |                                                     ^
336 |     if (v := _maybe_cast(gamma, float)) is not None: conf["gamma"] = v
337 |     if (v := _maybe_cast(gae_lambda, float)) is not None: conf["gae_lambda"] = v
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/noctria_gui/routes/king_routes.py:336:52
    |
334 |     if (v := _maybe_cast(batch_size, int)) is not None: conf["batch_size"] = v
335 |     if (v := _maybe_cast(n_epochs, int)) is not None: conf["n_epochs"] = v
336 |     if (v := _maybe_cast(gamma, float)) is not None: conf["gamma"] = v
    |                                                    ^
337 |     if (v := _maybe_cast(gae_lambda, float)) is not None: conf["gae_lambda"] = v
338 |     if (v := _maybe_cast(ent_coef, float)) is not None: conf["ent_coef"] = v
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/noctria_gui/routes/king_routes.py:337:57
    |
335 |     if (v := _maybe_cast(n_epochs, int)) is not None: conf["n_epochs"] = v
336 |     if (v := _maybe_cast(gamma, float)) is not None: conf["gamma"] = v
337 |     if (v := _maybe_cast(gae_lambda, float)) is not None: conf["gae_lambda"] = v
    |                                                         ^
338 |     if (v := _maybe_cast(ent_coef, float)) is not None: conf["ent_coef"] = v
339 |     if (v := _maybe_cast(vf_coef, float)) is not None: conf["vf_coef"] = v
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/noctria_gui/routes/king_routes.py:338:55
    |
336 |     if (v := _maybe_cast(gamma, float)) is not None: conf["gamma"] = v
337 |     if (v := _maybe_cast(gae_lambda, float)) is not None: conf["gae_lambda"] = v
338 |     if (v := _maybe_cast(ent_coef, float)) is not None: conf["ent_coef"] = v
    |                                                       ^
339 |     if (v := _maybe_cast(vf_coef, float)) is not None: conf["vf_coef"] = v
340 |     if (v := _maybe_cast(max_grad_norm, float)) is not None: conf["max_grad_norm"] = v
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/noctria_gui/routes/king_routes.py:339:54
    |
337 |     if (v := _maybe_cast(gae_lambda, float)) is not None: conf["gae_lambda"] = v
338 |     if (v := _maybe_cast(ent_coef, float)) is not None: conf["ent_coef"] = v
339 |     if (v := _maybe_cast(vf_coef, float)) is not None: conf["vf_coef"] = v
    |                                                      ^
340 |     if (v := _maybe_cast(max_grad_norm, float)) is not None: conf["max_grad_norm"] = v
341 |     if (v := _maybe_cast(clip_range, float)) is not None: conf["clip_range"] = v
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/noctria_gui/routes/king_routes.py:340:60
    |
338 |     if (v := _maybe_cast(ent_coef, float)) is not None: conf["ent_coef"] = v
339 |     if (v := _maybe_cast(vf_coef, float)) is not None: conf["vf_coef"] = v
340 |     if (v := _maybe_cast(max_grad_norm, float)) is not None: conf["max_grad_norm"] = v
    |                                                            ^
341 |     if (v := _maybe_cast(clip_range, float)) is not None: conf["clip_range"] = v
342 |     if (v := _maybe_cast(clip_range_vf, float)) is not None: conf["clip_range_vf"] = v
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/noctria_gui/routes/king_routes.py:341:57
    |
339 |     if (v := _maybe_cast(vf_coef, float)) is not None: conf["vf_coef"] = v
340 |     if (v := _maybe_cast(max_grad_norm, float)) is not None: conf["max_grad_norm"] = v
341 |     if (v := _maybe_cast(clip_range, float)) is not None: conf["clip_range"] = v
    |                                                         ^
342 |     if (v := _maybe_cast(clip_range_vf, float)) is not None: conf["clip_range_vf"] = v
343 |     if (v := _maybe_cast(seed, int)) is not None: conf["seed"] = v
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/noctria_gui/routes/king_routes.py:342:60
    |
340 |     if (v := _maybe_cast(max_grad_norm, float)) is not None: conf["max_grad_norm"] = v
341 |     if (v := _maybe_cast(clip_range, float)) is not None: conf["clip_range"] = v
342 |     if (v := _maybe_cast(clip_range_vf, float)) is not None: conf["clip_range_vf"] = v
    |                                                            ^
343 |     if (v := _maybe_cast(seed, int)) is not None: conf["seed"] = v
344 |     if (v := _maybe_cast(eval_n_episodes, int)) is not None: conf["eval_n_episodes"] = v
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/noctria_gui/routes/king_routes.py:343:49
    |
341 |     if (v := _maybe_cast(clip_range, float)) is not None: conf["clip_range"] = v
342 |     if (v := _maybe_cast(clip_range_vf, float)) is not None: conf["clip_range_vf"] = v
343 |     if (v := _maybe_cast(seed, int)) is not None: conf["seed"] = v
    |                                                 ^
344 |     if (v := _maybe_cast(eval_n_episodes, int)) is not None: conf["eval_n_episodes"] = v
345 |     conf["eval_deterministic"] = _to_bool(eval_deterministic, True)
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/noctria_gui/routes/king_routes.py:344:60
    |
342 |     if (v := _maybe_cast(clip_range_vf, float)) is not None: conf["clip_range_vf"] = v
343 |     if (v := _maybe_cast(seed, int)) is not None: conf["seed"] = v
344 |     if (v := _maybe_cast(eval_n_episodes, int)) is not None: conf["eval_n_episodes"] = v
    |                                                            ^
345 |     conf["eval_deterministic"] = _to_bool(eval_deterministic, True)
    |

F841 Local variable `result` is assigned to but never used
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/noctria_gui/routes/logs_routes.py:34:9
   |
33 |     try:
34 |         result = subprocess.run(
   |         ^^^^^^
35 |             ["python3", str(script_path)],
36 |             capture_output=True,
   |
help: Remove assignment to unused variable `result`

E701 Multiple statements on one line (colon)
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/noctria_gui/routes/pdca_api_details.py:33:13
   |
32 | def _parse_date(s: Optional[str]) -> Optional[date]:
33 |     if not s: return None
   |             ^
34 |     return date.fromisoformat(s)
   |

F401 `.statistics_dashboard.router` imported but unused; consider removing, adding to `__all__`, or using a redundant alias
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/noctria_gui/routes/statistics/__init__.py:6:35
  |
4 | # 実際のURL処理は、statistics_dashboard.py に記述されています。
5 |
6 | from .statistics_dashboard import router
  |                                   ^^^^^^
7 |
8 | # 上記の1行により、アプリケーションの他の部分（main.pyなど）が
  |
help: Use an explicit re-export: `router as router`

F821 Undefined name `logger`
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/noctria_gui/routes/statistics_detail.py:40:17
   |
38 |             except Exception as e:
39 |                 # 他のエラーはログに記録してスキップ
40 |                 logger.error(f"ログファイル {file} の読み込みに失敗しました: {e}")
   |                 ^^^^^^
41 |                 continue
42 |     return logs
   |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/noctria_gui/routes/strategy_detail.py:192:39
    |
190 |                 if hasattr(obj, "compute_kpis"):
191 |                     k = obj.compute_kpis()
192 |                     if is_dataclass(k): k = asdict(k)
    |                                       ^
193 |                     if not isinstance(k, dict): k = dict(k)
194 |                     return k
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/noctria_gui/routes/strategy_detail.py:193:47
    |
191 |                     k = obj.compute_kpis()
192 |                     if is_dataclass(k): k = asdict(k)
193 |                     if not isinstance(k, dict): k = dict(k)
    |                                               ^
194 |                     return k
195 |             except Exception:
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/noctria_gui/routes/strategy_detail.py:203:35
    |
201 |             try:
202 |                 k = fn()
203 |                 if is_dataclass(k): k = asdict(k)
    |                                   ^
204 |                 if not isinstance(k, dict): k = dict(k)
205 |                 return k
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/noctria_gui/routes/strategy_detail.py:204:43
    |
202 |                 k = fn()
203 |                 if is_dataclass(k): k = asdict(k)
204 |                 if not isinstance(k, dict): k = dict(k)
    |                                           ^
205 |                 return k
206 |             except Exception:
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/noctria_gui/routes/strategy_detail.py:215:35
    |
213 |             if isinstance(ret, tuple) and len(ret) >= 1:
214 |                 k = ret[0]
215 |                 if is_dataclass(k): k = asdict(k)
    |                                   ^
216 |                 if not isinstance(k, dict): k = dict(k)
217 |                 return k
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/noctria_gui/routes/strategy_detail.py:216:43
    |
214 |                 k = ret[0]
215 |                 if is_dataclass(k): k = asdict(k)
216 |                 if not isinstance(k, dict): k = dict(k)
    |                                           ^
217 |                 return k
218 |         except Exception:
    |

E702 Multiple statements on one line (semicolon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/noctria_gui/routes/strategy_detail.py:289:30
    |
287 |             tags = s.get("tags") or []
288 |             if any(t in (tags or []) for t in current_tags):
289 |                 rel.append(s); seen.add(name)
    |                              ^
290 |             if len(rel) >= 4:
291 |                 break
    |

E701 Multiple statements on one line (colon)
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/noctria_gui/routes/strategy_heatmap.py:60:28
   |
59 |             date_str = data.get("promoted_at") or data.get("timestamp")
60 |             if not date_str: continue
   |                            ^
61 |             
62 |             date_obj = datetime.fromisoformat(date_str.replace("Z", "+00:00"))
   |

E701 Multiple statements on one line (colon)
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/noctria_gui/routes/strategy_heatmap.py:64:64
   |
62 |             date_obj = datetime.fromisoformat(date_str.replace("Z", "+00:00"))
63 |
64 |             if from_date and date_obj.date() < from_date.date(): continue
   |                                                                ^
65 |             if to_date and date_obj.date() > to_date.date(): continue
   |

E701 Multiple statements on one line (colon)
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/noctria_gui/routes/strategy_heatmap.py:65:60
   |
64 |             if from_date and date_obj.date() < from_date.date(): continue
65 |             if to_date and date_obj.date() > to_date.date(): continue
   |                                                            ^
66 |
67 |             name = data.get("strategy", "").strip()
   |

E701 Multiple statements on one line (colon)
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/noctria_gui/routes/strategy_heatmap.py:68:24
   |
67 |             name = data.get("strategy", "").strip()
68 |             if not name: continue
   |                        ^
69 |             if strategy_keyword and strategy_keyword.lower() not in name.lower(): continue
   |

E701 Multiple statements on one line (colon)
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/noctria_gui/routes/strategy_heatmap.py:69:81
   |
67 |             name = data.get("strategy", "").strip()
68 |             if not name: continue
69 |             if strategy_keyword and strategy_keyword.lower() not in name.lower(): continue
   |                                                                                 ^
70 |
71 |             score = data.get("score", {})
   |

E701 Multiple statements on one line (colon)
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/noctria_gui/routes/strategy_heatmap.py:76:45
   |
75 |             stats[name]["count"] += 1
76 |             if isinstance(win, (int, float)): stats[name]["win_rates"].append(win)
   |                                             ^
77 |             if isinstance(dd, (int, float)): stats[name]["drawdowns"].append(dd)
   |

E701 Multiple statements on one line (colon)
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/noctria_gui/routes/strategy_heatmap.py:77:44
   |
75 |             stats[name]["count"] += 1
76 |             if isinstance(win, (int, float)): stats[name]["win_rates"].append(win)
77 |             if isinstance(dd, (int, float)): stats[name]["drawdowns"].append(dd)
   |                                            ^
78 |
79 |         except (json.JSONDecodeError, KeyError) as e:
   |

F841 Local variable `king` is assigned to but never used
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/noctria_gui/services/dashboard_service.py:28:9
   |
26 |     try:
27 |         # 1. KingNoctriaや各臣下AIの最新統計を取得
28 |         king = KingNoctria()
   |         ^^^^
29 |         # 仮にKingNoctriaにstats()メソッドがある想定（要実装）
30 |         stats = {
   |
help: Remove assignment to unused variable `king`

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/noctria_gui/services/statistics_service.py:109:29
    |
108 |     def _summarize(filtered_logs):
109 |         if not filtered_logs: return {"count": 0, "avg_win_rate": 0}
    |                             ^
110 |         win_rates = [log.get("win_rate", 0) for log in filtered_logs]
111 |         return {
    |

E701 Multiple statements on one line (colon)
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/build_context.py:31:45
   |
29 | def _norm_node(s: str) -> str:
30 |     s = s.strip()
31 |     if s.startswith('"') and s.endswith('"'): s = s[1:-1]
   |                                             ^
32 |     return s
   |

E701 Multiple statements on one line (colon)
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/build_context.py:42:26
   |
40 |         a = _norm_node(m.group("a"))
41 |         b = _norm_node(m.group("b"))
42 |         if not a or not b: continue
   |                          ^
43 |         adj[a].add(b); rev[b].add(a)
44 |         nodes.add(a); nodes.add(b)
   |

E702 Multiple statements on one line (semicolon)
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/build_context.py:43:22
   |
41 |         b = _norm_node(m.group("b"))
42 |         if not a or not b: continue
43 |         adj[a].add(b); rev[b].add(a)
   |                      ^
44 |         nodes.add(a); nodes.add(b)
45 |     return nodes, adj, rev
   |

E702 Multiple statements on one line (semicolon)
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/build_context.py:44:21
   |
42 |         if not a or not b: continue
43 |         adj[a].add(b); rev[b].add(a)
44 |         nodes.add(a); nodes.add(b)
   |                     ^
45 |     return nodes, adj, rev
   |

E701 Multiple statements on one line (colon)
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/build_context.py:54:32
   |
52 |     if name_or_path.endswith(".py"):
53 |         rel = name_or_path.replace("\\","/")
54 |         if rel.startswith("./"): rel = rel[2:]
   |                                ^
55 |         mod = rel[:-3].replace("/", ".")
56 |         base = rel
   |

E701 Multiple statements on one line (colon)
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/build_context.py:67:19
   |
65 |         # best-effort: 部分一致で拾う
66 |         matches = [n for n in nodes if n.endswith(start) or n.endswith(start.replace("/","."))]
67 |         if matches: start = matches[0]
   |                   ^
68 |         else: return set([start])
69 |     seen = {start}
   |

E701 Multiple statements on one line (colon)
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/build_context.py:68:13
   |
66 |         matches = [n for n in nodes if n.endswith(start) or n.endswith(start.replace("/","."))]
67 |         if matches: start = matches[0]
68 |         else: return set([start])
   |             ^
69 |     seen = {start}
70 |     q = deque([(start,0)])
   |

E701 Multiple statements on one line (colon)
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/build_context.py:73:23
   |
71 |     while q:
72 |         u,d = q.popleft()
73 |         if d == radius: continue
   |                       ^
74 |         for v in adj.get(u, ()):
75 |             if v not in seen:
   |

E702 Multiple statements on one line (semicolon)
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/build_context.py:76:28
   |
74 |         for v in adj.get(u, ()):
75 |             if v not in seen:
76 |                 seen.add(v); q.append((v,d+1))
   |                            ^
77 |         for v in rev.get(u, ()):
78 |             if v not in seen:
   |

E702 Multiple statements on one line (semicolon)
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/build_context.py:79:28
   |
77 |         for v in rev.get(u, ()):
78 |             if v not in seen:
79 |                 seen.add(v); q.append((v,d+1))
   |                            ^
80 |     return seen
   |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/build_context.py:108:22
    |
106 |     for name in ("src", "app", "noctria_gui", "noctria_kernel"):
107 |         p = ROOT / name
108 |         if p.exists(): roots.append(p)
    |                      ^
109 |     # 重複除去
110 |     seen=set(); out=[]
    |

E702 Multiple statements on one line (semicolon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/build_context.py:110:15
    |
108 |         if p.exists(): roots.append(p)
109 |     # 重複除去
110 |     seen=set(); out=[]
    |               ^
111 |     for r in roots:
112 |         rp = r.resolve()
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/build_context.py:113:27
    |
111 |     for r in roots:
112 |         rp = r.resolve()
113 |         if str(rp) in seen: continue
    |                           ^
114 |         seen.add(str(rp)); out.append(rp)
115 |     return out
    |

E702 Multiple statements on one line (semicolon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/build_context.py:114:26
    |
112 |         rp = r.resolve()
113 |         if str(rp) in seen: continue
114 |         seen.add(str(rp)); out.append(rp)
    |                          ^
115 |     return out
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/build_context.py:169:23
    |
167 |     for p in files:
168 |         key = str(p.resolve())
169 |         if key in seen: continue
    |                       ^
170 |         seen.add(key); uniq.append(p)
    |

E702 Multiple statements on one line (semicolon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/build_context.py:170:22
    |
168 |         key = str(p.resolve())
169 |         if key in seen: continue
170 |         seen.add(key); uniq.append(p)
    |                      ^
171 |
172 |     write_allowed(uniq)
    |

E701 Multiple statements on one line (colon)
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/gen_graphs.py:39:8
   |
37 | # ================== Helpers ==================
38 | def _norm(p: Path) -> Path:
39 |     try: return p.resolve()
   |        ^
40 |     except Exception: return p.absolute()
   |

E701 Multiple statements on one line (colon)
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/gen_graphs.py:40:21
   |
38 | def _norm(p: Path) -> Path:
39 |     try: return p.resolve()
40 |     except Exception: return p.absolute()
   |                     ^
41 |
42 | def _samepath(a: Path, b: Path) -> bool:
   |

E701 Multiple statements on one line (colon)
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/gen_graphs.py:43:8
   |
42 | def _samepath(a: Path, b: Path) -> bool:
43 |     try: return os.path.samefile(a, b)
   |        ^
44 |     except FileNotFoundError: return False
45 |     except Exception: return _norm(a) == _norm(b)
   |

E701 Multiple statements on one line (colon)
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/gen_graphs.py:44:29
   |
42 | def _samepath(a: Path, b: Path) -> bool:
43 |     try: return os.path.samefile(a, b)
44 |     except FileNotFoundError: return False
   |                             ^
45 |     except Exception: return _norm(a) == _norm(b)
   |

E701 Multiple statements on one line (colon)
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/gen_graphs.py:45:21
   |
43 |     try: return os.path.samefile(a, b)
44 |     except FileNotFoundError: return False
45 |     except Exception: return _norm(a) == _norm(b)
   |                     ^
46 |
47 | def _safe_copy(src: Path, dst: Path):
   |

E701 Multiple statements on one line (colon)
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/gen_graphs.py:48:27
   |
47 | def _safe_copy(src: Path, dst: Path):
48 |     if _samepath(src, dst): return
   |                           ^
49 |     dst.parent.mkdir(parents=True, exist_ok=True)
50 |     shutil.copy2(src, dst)
   |

E701 Multiple statements on one line (colon)
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/gen_graphs.py:53:20
   |
52 | def _find_dot_file() -> Path | None:
53 |     if DOT.exists(): return DOT
   |                    ^
54 |     if DOT_ALT.exists(): return DOT_ALT
55 |     return None
   |

E701 Multiple statements on one line (colon)
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/gen_graphs.py:54:24
   |
52 | def _find_dot_file() -> Path | None:
53 |     if DOT.exists(): return DOT
54 |     if DOT_ALT.exists(): return DOT_ALT
   |                        ^
55 |     return None
   |

E702 Multiple statements on one line (semicolon)
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/gen_graphs.py:66:41
   |
64 |             _, _, w, h = map(float, vb.split())
65 |             return (w / h) if h else None
66 |         w = root.attrib.get("width", ""); h = root.attrib.get("height", "")
   |                                         ^
67 |         for s in ("pt","px"): w = w[:-len(s)] if w.endswith(s) else w
68 |         for s in ("pt","px"): h = h[:-len(s)] if h.endswith(s) else h
   |

E701 Multiple statements on one line (colon)
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/gen_graphs.py:67:29
   |
65 |             return (w / h) if h else None
66 |         w = root.attrib.get("width", ""); h = root.attrib.get("height", "")
67 |         for s in ("pt","px"): w = w[:-len(s)] if w.endswith(s) else w
   |                             ^
68 |         for s in ("pt","px"): h = h[:-len(s)] if h.endswith(s) else h
69 |         return (float(w)/float(h)) if w and h else None
   |

E701 Multiple statements on one line (colon)
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/gen_graphs.py:68:29
   |
66 |         w = root.attrib.get("width", ""); h = root.attrib.get("height", "")
67 |         for s in ("pt","px"): w = w[:-len(s)] if w.endswith(s) else w
68 |         for s in ("pt","px"): h = h[:-len(s)] if h.endswith(s) else h
   |                             ^
69 |         return (float(w)/float(h)) if w and h else None
70 |     except Exception:
   |

E702 Multiple statements on one line (semicolon)
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/gen_graphs.py:83:34
   |
81 |         with Image.open(p) as im:
82 |             im = im.convert("L")
83 |             hist = im.histogram(); tot = float(sum(hist)) or 1.0
   |                                  ^
84 |             return (hist[0]/tot > 0.95) or (hist[-1]/tot > 0.95)
85 |     except Exception:
   |

E702 Multiple statements on one line (semicolon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/gen_graphs.py:100:32
    |
 98 |         m = re.search(r'\bsubgraph\b[^{]*\{', txt[i:], flags=re.IGNORECASE)
 99 |         if not m:
100 |             out.append(txt[i:]); break
    |                                ^
101 |         start = i + m.start()
102 |         brace = i + m.end() - 1
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/gen_graphs.py:108:28
    |
106 |             while j < n and depth > 0:
107 |                 c = txt[j]
108 |                 if c == '{': depth += 1
    |                            ^
109 |                 elif c == '}': depth -= 1
110 |                 j += 1
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/gen_graphs.py:109:30
    |
107 |                 c = txt[j]
108 |                 if c == '{': depth += 1
109 |                 elif c == '}': depth -= 1
    |                              ^
110 |                 j += 1
111 |             out.append(txt[i:start])  # ヘッダ前は保持
    |

E702 Multiple statements on one line (semicolon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/gen_graphs.py:114:39
    |
112 |             i = j
113 |         else:
114 |             out.append(txt[i:brace+1]); i = brace + 1
    |                                       ^
115 |     txt = ''.join(out)
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/gen_graphs.py:124:13
    |
122 |         kept.append(ln)
123 |         m = re.match(r'\s*"?(?P<id>[\w\.:/\\-]+)"?\s*(\[|;)', ln)
124 |         if m: node_names.add(m.group("id"))
    |             ^
125 |     body = "\n".join(kept)
    |

E702 Multiple statements on one line (semicolon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/gen_graphs.py:166:38
    |
164 |     nodes: set[str] = set()
165 |     for m in _EDGE_RE.finditer(dot_text):
166 |         a = _strip_id(m.group('lhs')); b = _strip_id(m.group('rhs'))
    |                                      ^
167 |         if not a or not b: continue
168 |         edges.add((a, b))
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/gen_graphs.py:167:26
    |
165 |     for m in _EDGE_RE.finditer(dot_text):
166 |         a = _strip_id(m.group('lhs')); b = _strip_id(m.group('rhs'))
167 |         if not a or not b: continue
    |                          ^
168 |         edges.add((a, b))
169 |         nodes.add(a); nodes.add(b)
    |

E702 Multiple statements on one line (semicolon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/gen_graphs.py:169:21
    |
167 |         if not a or not b: continue
168 |         edges.add((a, b))
169 |         nodes.add(a); nodes.add(b)
    |                     ^
170 |
171 |     if not nodes:
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/gen_graphs.py:321:20
    |
319 |         for tmp in (src_for_dot, filtered_dot):
320 |             if tmp is not dot_file:
321 |                 try: tmp.unlink(missing_ok=True)
    |                    ^
322 |                 except Exception: pass
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/gen_graphs.py:322:33
    |
320 |             if tmp is not dot_file:
321 |                 try: tmp.unlink(missing_ok=True)
322 |                 except Exception: pass
    |                                 ^
323 |
324 |     # 健全性チェック → だめなら非フィルタ&フォールバック
    |

E702 Multiple statements on one line (semicolon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/gen_graphs.py:360:50
    |
358 | def svg_to_png():
359 |     if not SVG.exists():
360 |         print("! missing imports.svg (skip PNG)"); return
    |                                                  ^
361 |     PNG.parent.mkdir(parents=True, exist_ok=True)
362 |     tried_cairo = False
    |

E702 Multiple statements on one line (semicolon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/gen_graphs.py:389:42
    |
387 |             "modules": {}, "adjacency": {}, "tests_map": {},
388 |             "allowlist_roots": ["src/"], "banned_paths": [], "critical_files": []
389 |         }, ensure_ascii=False, indent=2)); print(f"+ wrote {CTX}")
    |                                          ^
390 |     if not ALLOWED.exists():
391 |         ALLOWED.write_text("src/\n"); print(f"+ wrote {ALLOWED}")
    |

E702 Multiple statements on one line (semicolon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/gen_graphs.py:391:37
    |
389 |         }, ensure_ascii=False, indent=2)); print(f"+ wrote {CTX}")
390 |     if not ALLOWED.exists():
391 |         ALLOWED.write_text("src/\n"); print(f"+ wrote {ALLOWED}")
    |                                     ^
392 |
393 | def _discover_static_roots() -> list[Path]:
    |

E702 Multiple statements on one line (semicolon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/gen_graphs.py:403:15
    |
401 |     if default_static.exists() and not _samepath(default_static, ROOT):
402 |         roots.append(_norm(default_static))
403 |     seen=set(); return [p for p in roots if not (str(p) in seen or seen.add(str(p)))]
    |               ^
404 |
405 | def sync_to_static():
    |

E702 Multiple statements on one line (semicolon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/gen_graphs.py:408:47
    |
406 |     STATIC_ROOTS = _discover_static_roots()
407 |     if not STATIC_ROOTS:
408 |         print("! static ルートが見つからないためコピーはスキップ"); return
    |                                                                   ^
409 |     src_root = _norm(GRAPHS.parent)
410 |     for sroot in STATIC_ROOTS:
    |

E702 Multiple statements on one line (semicolon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/gen_graphs.py:413:60
    |
411 |         dst_root = _norm(sroot / "codex_reports")
412 |         if _samepath(dst_root, src_root) or (src_root in dst_root.parents):
413 |             print(f"! skip sync: invalid dst ({dst_root})"); continue
    |                                                            ^
414 |         for src_dir, _, files in os.walk(GRAPHS):
415 |             sd = Path(src_dir); rel = sd.relative_to(GRAPHS)
    |

E702 Multiple statements on one line (semicolon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/gen_graphs.py:415:31
    |
413 |             print(f"! skip sync: invalid dst ({dst_root})"); continue
414 |         for src_dir, _, files in os.walk(GRAPHS):
415 |             sd = Path(src_dir); rel = sd.relative_to(GRAPHS)
    |                               ^
416 |             for f in files: _safe_copy(sd / f, dst_root / "graphs" / rel / f)
417 |         for src_dir, _, files in os.walk(CTXDIR):
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/gen_graphs.py:416:27
    |
414 |         for src_dir, _, files in os.walk(GRAPHS):
415 |             sd = Path(src_dir); rel = sd.relative_to(GRAPHS)
416 |             for f in files: _safe_copy(sd / f, dst_root / "graphs" / rel / f)
    |                           ^
417 |         for src_dir, _, files in os.walk(CTXDIR):
418 |             sd = Path(src_dir); rel = sd.relative_to(CTXDIR)
    |

E702 Multiple statements on one line (semicolon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/gen_graphs.py:418:31
    |
416 |             for f in files: _safe_copy(sd / f, dst_root / "graphs" / rel / f)
417 |         for src_dir, _, files in os.walk(CTXDIR):
418 |             sd = Path(src_dir); rel = sd.relative_to(CTXDIR)
    |                               ^
419 |             for f in files: _safe_copy(sd / f, dst_root / "context" / rel / f)
420 |         print(f"+ synced codex_reports -> {dst_root}")
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/gen_graphs.py:419:27
    |
417 |         for src_dir, _, files in os.walk(CTXDIR):
418 |             sd = Path(src_dir); rel = sd.relative_to(CTXDIR)
419 |             for f in files: _safe_copy(sd / f, dst_root / "context" / rel / f)
    |                           ^
420 |         print(f"+ synced codex_reports -> {dst_root}")
    |

E702 Multiple statements on one line (semicolon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/map_tests.py:123:15
    |
122 |     # 一意化
123 |     seen=set(); uniq=[]
    |               ^
124 |     for n in nodeids:
125 |         if n not in seen:
    |

E702 Multiple statements on one line (semicolon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/map_tests.py:126:24
    |
124 |     for n in nodeids:
125 |         if n not in seen:
126 |             seen.add(n); uniq.append(n)
    |                        ^
127 |     return uniq
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/map_tests.py:149:21
    |
147 |             scores[node] += 2
148 |         for k in kw_low:
149 |             if not k: continue
    |                     ^
150 |             cnt = low.count(k)
151 |             if cnt:
    |

E701 Multiple statements on one line (colon)
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/noctria_dead_code_detector.py:63:29
   |
61 | def walk_files() -> List[Path]:
62 |     for base in SCAN_DIRS:
63 |         if not base.exists(): continue
   |                             ^
64 |         for p in base.rglob("*"):
65 |             if p.is_file():
   |

E701 Multiple statements on one line (colon)
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/noctria_dead_code_detector.py:74:37
   |
73 | def load_canon(path: Optional[Path]) -> List[str]:
74 |     if not path or not path.exists(): return DEFAULT_CANON
   |                                     ^
75 |     globs: List[str] = []
76 |     for line in path.read_text(encoding="utf-8").splitlines():
   |

E701 Multiple statements on one line (colon)
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/noctria_dead_code_detector.py:78:17
   |
76 |     for line in path.read_text(encoding="utf-8").splitlines():
77 |         s = line.strip()
78 |         if not s: continue
   |                 ^
79 |         if s.startswith("- "): s = s[2:].strip()
80 |         if s.startswith("#") or ":" in s: continue
   |

E701 Multiple statements on one line (colon)
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/noctria_dead_code_detector.py:79:30
   |
77 |         s = line.strip()
78 |         if not s: continue
79 |         if s.startswith("- "): s = s[2:].strip()
   |                              ^
80 |         if s.startswith("#") or ":" in s: continue
81 |         if re.match(r"^[\w./*-]+$", s): globs.append(s)
   |

E701 Multiple statements on one line (colon)
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/noctria_dead_code_detector.py:80:41
   |
78 |         if not s: continue
79 |         if s.startswith("- "): s = s[2:].strip()
80 |         if s.startswith("#") or ":" in s: continue
   |                                         ^
81 |         if re.match(r"^[\w./*-]+$", s): globs.append(s)
82 |     return globs or DEFAULT_CANON
   |

E701 Multiple statements on one line (colon)
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/noctria_dead_code_detector.py:81:39
   |
79 |         if s.startswith("- "): s = s[2:].strip()
80 |         if s.startswith("#") or ":" in s: continue
81 |         if re.match(r"^[\w./*-]+$", s): globs.append(s)
   |                                       ^
82 |     return globs or DEFAULT_CANON
   |

E701 Multiple statements on one line (colon)
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/noctria_dead_code_detector.py:87:19
   |
85 |     try:
86 |         out = subprocess.check_output(["git","log","-1","--format=%ct", rel(p)], cwd=ROOT).decode().strip()
87 |         if not out: return None
   |                   ^
88 |         t = int(out); return int((time.time()-t)//86400)
89 |     except Exception:
   |

E702 Multiple statements on one line (semicolon)
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/noctria_dead_code_detector.py:88:21
   |
86 |         out = subprocess.check_output(["git","log","-1","--format=%ct", rel(p)], cwd=ROOT).decode().strip()
87 |         if not out: return None
88 |         t = int(out); return int((time.time()-t)//86400)
   |                     ^
89 |     except Exception:
90 |         return None
   |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/noctria_dead_code_detector.py:101:25
    |
 99 |         self.text = text
100 |     def visit_Import(self, n: ast.Import):  # type: ignore[override]
101 |         for a in n.names: self.imports.add(a.name)
    |                         ^
102 |     def visit_ImportFrom(self, n: ast.ImportFrom):  # type: ignore[override]
103 |         self.imports.add(n.module or "")
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/noctria_dead_code_detector.py:115:17
    |
113 |         if isinstance(n.func, ast.Name) and n.func.id == "TemplateResponse":
114 |             v = _tmpl_arg(n) 
115 |             if v: self.templates.add(v)
    |                 ^
116 |         if isinstance(n.func, ast.Attribute) and n.func.attr == "TemplateResponse":
117 |             v = _tmpl_arg(n) 
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/noctria_dead_code_detector.py:118:17
    |
116 |         if isinstance(n.func, ast.Attribute) and n.func.attr == "TemplateResponse":
117 |             v = _tmpl_arg(n) 
118 |             if v: self.templates.add(v)
    |                 ^
119 |         self.generic_visit(n)
    |

E702 Multiple statements on one line (semicolon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/noctria_dead_code_detector.py:126:15
    |
124 |         tree = ast.parse(t)
125 |     except Exception:
126 |         t = ""; tree = ast.parse("pass")
    |               ^
127 |     sig = PySignals(t); sig.visit(tree); return sig
    |

E702 Multiple statements on one line (semicolon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/noctria_dead_code_detector.py:127:23
    |
125 |     except Exception:
126 |         t = ""; tree = ast.parse("pass")
127 |     sig = PySignals(t); sig.visit(tree); return sig
    |                       ^
128 |
129 | def build_module_index(py_files: List[Path]) -> Dict[str, Path]:
    |

E702 Multiple statements on one line (semicolon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/noctria_dead_code_detector.py:127:40
    |
125 |     except Exception:
126 |         t = ""; tree = ast.parse("pass")
127 |     sig = PySignals(t); sig.visit(tree); return sig
    |                                        ^
128 |
129 | def build_module_index(py_files: List[Path]) -> Dict[str, Path]:
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/noctria_dead_code_detector.py:150:25
    |
148 |             else:
149 |                 cands = [m for m in modules if imp == m or imp.startswith(m+".")]
150 |                 if cands: target = max(cands, key=len)
    |                         ^
151 |             if target and target != mod_from:
152 |                 deps[mod_from].add(target)
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/noctria_dead_code_detector.py:154:23
    |
152 |                 deps[mod_from].add(target)
153 |                 rdeps[target] += 1
154 |         if sig.fastapi: fastapi.add(mod_from)
    |                       ^
155 |         if sig.airflow: airflow.add(mod_from)
156 |         for name in sig.templates:
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/noctria_dead_code_detector.py:155:23
    |
153 |                 rdeps[target] += 1
154 |         if sig.fastapi: fastapi.add(mod_from)
155 |         if sig.airflow: airflow.add(mod_from)
    |                       ^
156 |         for name in sig.templates:
157 |             if name in tpl_index:
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/noctria_dead_code_detector.py:175:21
    |
173 |     while dq:
174 |         u = dq.popleft()
175 |         if u in seen: continue
    |                     ^
176 |         seen.add(u)
177 |         for v in deps.get(u, ()):
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/noctria_dead_code_detector.py:184:45
    |
182 | # ---------- coverage / tests / obs ----------
183 | def load_coverage_paths(xml_path: Optional[Path]) -> Set[str]:
184 |     if not xml_path or not xml_path.exists(): return set()
    |                                             ^
185 |     txt = xml_path.read_text(encoding="utf-8", errors="ignore")
186 |     # <class name="..." filename="src/plan_data/statistics.py" ...
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/noctria_dead_code_detector.py:192:30
    |
190 | def tests_reference_name(target: Path) -> bool:
191 |     tests_dir = ROOT / "tests"
192 |     if not tests_dir.exists(): return False
    |                              ^
193 |     name = target.stem
194 |     pat = re.compile(rf'\b{re.escape(name)}\b')
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/noctria_dead_code_detector.py:208:37
    |
206 |     など。path の集合だけ使う。
207 |     """
208 |     if not path or not path.exists(): return set()
    |                                     ^
209 |     try:
210 |         data = json.loads(path.read_text(encoding="utf-8"))
    |

E701 Multiple statements on one line (colon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/noctria_dead_code_detector.py:214:17
    |
212 |         for row in data:
213 |             p = str(row.get("path","")).replace("\\","/")
214 |             if p: s.add(p)
    |                 ^
215 |         return s
216 |     except Exception:
    |

E702 Multiple statements on one line (semicolon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/noctria_dead_code_detector.py:223:22
    |
221 |                   coverage_paths, obs_paths, stale_days_thresh: int):
222 |     rp = rel(p)
223 |     is_pyf = is_py(p); is_tplf = is_tpl(p)
    |                      ^
224 |     days = git_days_since_last_commit(p)
    |

E702 Multiple statements on one line (semicolon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/noctria_dead_code_detector.py:251:28
    |
249 |         for a, outs in deps.items():
250 |             if rp in outs:
251 |                 used = True; break
    |                            ^
252 |         if not used:
253 |             categories.append("unused_template")
    |

E702 Multiple statements on one line (semicolon)
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/scripts/noctria_dead_code_detector.py:307:24
    |
305 |     with csv_path.open("w", newline="", encoding="utf-8") as f:
306 |         w = csv.DictWriter(f, fieldnames=list(rows[0].keys()))
307 |         w.writeheader(); w.writerows(rows)
    |                        ^
308 |
309 |     # MD（要注目候補）
    |

E701 Multiple statements on one line (colon)
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/codex/agents/proxy/tools/fs.py:20:30
   |
18 |         if act == "read_text":
19 |             p = self._abs(kwargs["path"])
20 |             if not p.exists(): return {"ok": False, "error": "not found"}
   |                              ^
21 |             return {"ok": True, "text": p.read_text(encoding="utf-8")}
22 |         return {"ok": False, "error": f"unknown fs action: {act}"}
   |

F821 Undefined name `cat`
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/codex/agents/proxy/tools/pytest_runner.py:1:1
  |
1 | cat > codex/agents/proxy/tools/pytest_runner.py << 'PY'
  | ^^^
2 | from __future__ import annotations
  |

F821 Undefined name `codex`
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/codex/agents/proxy/tools/pytest_runner.py:1:7
  |
1 | cat > codex/agents/proxy/tools/pytest_runner.py << 'PY'
  |       ^^^^^
2 | from __future__ import annotations
  |

F821 Undefined name `agents`
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/codex/agents/proxy/tools/pytest_runner.py:1:13
  |
1 | cat > codex/agents/proxy/tools/pytest_runner.py << 'PY'
  |             ^^^^^^
2 | from __future__ import annotations
  |

F821 Undefined name `proxy`
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/codex/agents/proxy/tools/pytest_runner.py:1:20
  |
1 | cat > codex/agents/proxy/tools/pytest_runner.py << 'PY'
  |                    ^^^^^
2 | from __future__ import annotations
  |

F821 Undefined name `tools`
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/codex/agents/proxy/tools/pytest_runner.py:1:26
  |
1 | cat > codex/agents/proxy/tools/pytest_runner.py << 'PY'
  |                          ^^^^^
2 | from __future__ import annotations
  |

F821 Undefined name `pytest_runner`
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/codex/agents/proxy/tools/pytest_runner.py:1:32
  |
1 | cat > codex/agents/proxy/tools/pytest_runner.py << 'PY'
  |                                ^^^^^^^^^^^^^
2 | from __future__ import annotations
  |

F404 `from __future__` imports must occur at the beginning of the file
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/codex/agents/proxy/tools/pytest_runner.py:2:1
  |
1 | cat > codex/agents/proxy/tools/pytest_runner.py << 'PY'
2 | from __future__ import annotations
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
3 |
4 | import os
  |

E402 Module level import not at top of file
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/codex/agents/proxy/tools/pytest_runner.py:2:1
  |
1 | cat > codex/agents/proxy/tools/pytest_runner.py << 'PY'
2 | from __future__ import annotations
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
3 |
4 | import os
  |

E402 Module level import not at top of file
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/codex/agents/proxy/tools/pytest_runner.py:4:1
  |
2 | from __future__ import annotations
3 |
4 | import os
  | ^^^^^^^^^
5 | import subprocess
6 | from pathlib import Path
  |

E402 Module level import not at top of file
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/codex/agents/proxy/tools/pytest_runner.py:5:1
  |
4 | import os
5 | import subprocess
  | ^^^^^^^^^^^^^^^^^
6 | from pathlib import Path
7 | from typing import Dict, Any
  |

E402 Module level import not at top of file
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/codex/agents/proxy/tools/pytest_runner.py:6:1
  |
4 | import os
5 | import subprocess
6 | from pathlib import Path
  | ^^^^^^^^^^^^^^^^^^^^^^^^
7 | from typing import Dict, Any
  |

E402 Module level import not at top of file
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/codex/agents/proxy/tools/pytest_runner.py:7:1
  |
5 | import subprocess
6 | from pathlib import Path
7 | from typing import Dict, Any
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |

F821 Undefined name `PY`
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/codex/agents/proxy/tools/pytest_runner.py:107:1
    |
106 |         return {"ok": ok, "returncode": rc, "failed": failed, "status": status, "cmd": " ".join(cmd)}
107 | PY
    | ^^
    |

F841 Local variable `pytest_args` is assigned to but never used
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/codex/mini_loop.py:75:9
   |
73 |     if allowed_tests:
74 |         # pytest に渡すためスペース区切りの文字列に変換
75 |         pytest_args = " ".join(allowed_tests)
   |         ^^^^^^^^^^^
76 |
77 |     # 1) pytest 実行
   |
help: Remove assignment to unused variable `pytest_args`

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/codex/run_codex_cycle.py:34:1
   |
33 | # ===== 依存（ローカル静的版のエージェント）=====
34 | from codex.agents.inventor import propose_fixes, InventorOutput  # type: ignore
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
35 | from codex.agents.harmonia import review, ReviewResult            # type: ignore
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/codex/run_codex_cycle.py:35:1
   |
33 | # ===== 依存（ローカル静的版のエージェント）=====
34 | from codex.agents.inventor import propose_fixes, InventorOutput  # type: ignore
35 | from codex.agents.harmonia import review, ReviewResult            # type: ignore
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |

E741 Ambiguous variable name: `l`
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/codex/tools/patch_gen.py:46:48
   |
44 |         return ""
45 |     lines = t.splitlines()
46 |     has_headers = any(l.startswith("--- ") for l in lines) and any(l.startswith("+++ ") for l in lines)
   |                                                ^
47 |     if has_headers:
48 |         return t + "\n"
   |

E741 Ambiguous variable name: `l`
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/codex/tools/patch_gen.py:46:93
   |
44 |         return ""
45 |     lines = t.splitlines()
46 |     has_headers = any(l.startswith("--- ") for l in lines) and any(l.startswith("+++ ") for l in lines)
   |                                                                                             ^
47 |     if has_headers:
48 |         return t + "\n"
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/codex/tools/review_pipeline.py:57:1
   |
55 |         _sys.path.insert(0, _sp)
56 |
57 | import datetime as _dt
   | ^^^^^^^^^^^^^^^^^^^^^^
58 | import json
59 | import os
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/codex/tools/review_pipeline.py:58:1
   |
57 | import datetime as _dt
58 | import json
   | ^^^^^^^^^^^
59 | import os
60 | import re
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/codex/tools/review_pipeline.py:59:1
   |
57 | import datetime as _dt
58 | import json
59 | import os
   | ^^^^^^^^^
60 | import re
61 | import difflib
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/codex/tools/review_pipeline.py:60:1
   |
58 | import json
59 | import os
60 | import re
   | ^^^^^^^^^
61 | import difflib
62 | import subprocess
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/codex/tools/review_pipeline.py:61:1
   |
59 | import os
60 | import re
61 | import difflib
   | ^^^^^^^^^^^^^^
62 | import subprocess
63 | from pathlib import Path
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/codex/tools/review_pipeline.py:62:1
   |
60 | import re
61 | import difflib
62 | import subprocess
   | ^^^^^^^^^^^^^^^^^
63 | from pathlib import Path
64 | from typing import Dict, Any, List, Tuple, Optional
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/codex/tools/review_pipeline.py:63:1
   |
61 | import difflib
62 | import subprocess
63 | from pathlib import Path
   | ^^^^^^^^^^^^^^^^^^^^^^^^
64 | from typing import Dict, Any, List, Tuple, Optional
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/codex/tools/review_pipeline.py:64:1
   |
62 | import subprocess
63 | from pathlib import Path
64 | from typing import Dict, Any, List, Tuple, Optional
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
65 |
66 | from codex.tools.json_parse import load_json, build_pytest_result_for_inventor
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/codex/tools/review_pipeline.py:66:1
   |
64 | from typing import Dict, Any, List, Tuple, Optional
65 |
66 | from codex.tools.json_parse import load_json, build_pytest_result_for_inventor
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
67 |
68 | # 既存 Inventor / Harmonia(API) インターフェース
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/codex/tools/review_pipeline.py:69:1
   |
68 | # 既存 Inventor / Harmonia(API) インターフェース
69 | from codex.agents.inventor import propose_fixes, InventorOutput, PatchSuggestion
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
70 | from codex.agents.harmonia import review, ReviewResult  # ← API版レビュー
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/codex/tools/review_pipeline.py:70:1
   |
68 | # 既存 Inventor / Harmonia(API) インターフェース
69 | from codex.agents.inventor import propose_fixes, InventorOutput, PatchSuggestion
70 | from codex.agents.harmonia import review, ReviewResult  # ← API版レビュー
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
71 |
72 | # オフライン Harmonia（存在しなければ後述のフォールバックを使用）
   |

E701 Multiple statements on one line (colon)
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/codex_reports/dead_code/quarantine.py:36:20
   |
34 |         rts  = (row.get("runtime_seen") or "0").strip()
35 |
36 |         if not path: continue
   |                    ^
37 |         if not any(k in cats for k in ("orphaned","unreferenced","unused_template")): continue
38 |         if cov=="1" or rts=="1": continue
   |

E701 Multiple statements on one line (colon)
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/codex_reports/dead_code/quarantine.py:37:85
   |
36 |         if not path: continue
37 |         if not any(k in cats for k in ("orphaned","unreferenced","unused_template")): continue
   |                                                                                     ^
38 |         if cov=="1" or rts=="1": continue
39 |         if os.path.basename(path) == "__init__.py":
   |

E701 Multiple statements on one line (colon)
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/codex_reports/dead_code/quarantine.py:38:32
   |
36 |         if not path: continue
37 |         if not any(k in cats for k in ("orphaned","unreferenced","unused_template")): continue
38 |         if cov=="1" or rts=="1": continue
   |                                ^
39 |         if os.path.basename(path) == "__init__.py":
40 |             print(f"[skip] {path} (__init__.py)"); continue
   |

E702 Multiple statements on one line (semicolon)
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/codex_reports/dead_code/quarantine.py:40:50
   |
38 |         if cov=="1" or rts=="1": continue
39 |         if os.path.basename(path) == "__init__.py":
40 |             print(f"[skip] {path} (__init__.py)"); continue
   |                                                  ^
41 |
42 |         dest = os.path.join(GRAVEYARD, path)
   |

E702 Multiple statements on one line (semicolon)
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/codex_reports/dead_code/quarantine.py:44:52
   |
42 |         dest = os.path.join(GRAVEYARD, path)
43 |         if os.path.exists(dest):
44 |             print(f"[skip] {path} (already moved)"); continue
   |                                                    ^
45 |
46 |         os.makedirs(os.path.dirname(dest), exist_ok=True)
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/core/data_loader.py:12:1
   |
10 | )
11 |
12 | import requests
   | ^^^^^^^^^^^^^^^
13 | import numpy as np
14 | import logging
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/core/data_loader.py:13:1
   |
12 | import requests
13 | import numpy as np
   | ^^^^^^^^^^^^^^^^^^
14 | import logging
15 | import pandas as pd
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/core/data_loader.py:14:1
   |
12 | import requests
13 | import numpy as np
14 | import logging
   | ^^^^^^^^^^^^^^
15 | import pandas as pd
16 | import json
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/core/data_loader.py:15:1
   |
13 | import numpy as np
14 | import logging
15 | import pandas as pd
   | ^^^^^^^^^^^^^^^^^^^
16 | import json
17 | from src.core.path_config import DATA_DIR   # パス定数をimport
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/core/data_loader.py:16:1
   |
14 | import logging
15 | import pandas as pd
16 | import json
   | ^^^^^^^^^^^
17 | from src.core.path_config import DATA_DIR   # パス定数をimport
18 | from statsmodels.tsa.holtwinters import ExponentialSmoothing
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/core/data_loader.py:17:1
   |
15 | import pandas as pd
16 | import json
17 | from src.core.path_config import DATA_DIR   # パス定数をimport
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
18 | from statsmodels.tsa.holtwinters import ExponentialSmoothing
19 | from typing import Optional, List, Dict, Any
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/core/data_loader.py:18:1
   |
16 | import json
17 | from src.core.path_config import DATA_DIR   # パス定数をimport
18 | from statsmodels.tsa.holtwinters import ExponentialSmoothing
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
19 | from typing import Optional, List, Dict, Any
20 | from pathlib import Path  # buffer_pathでstr型が渡される場合に備えて残す（外部指定ありの場合のみ）
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/core/data_loader.py:19:1
   |
17 | from src.core.path_config import DATA_DIR   # パス定数をimport
18 | from statsmodels.tsa.holtwinters import ExponentialSmoothing
19 | from typing import Optional, List, Dict, Any
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
20 | from pathlib import Path  # buffer_pathでstr型が渡される場合に備えて残す（外部指定ありの場合のみ）
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/core/data_loader.py:20:1
   |
18 | from statsmodels.tsa.holtwinters import ExponentialSmoothing
19 | from typing import Optional, List, Dict, Any
20 | from pathlib import Path  # buffer_pathでstr型が渡される場合に備えて残す（外部指定ありの場合のみ）
   | ^^^^^^^^^^^^^^^^^^^^^^^^
21 |
22 | DEFAULT_BUFFER_PATH = DATA_DIR / "market_data_buffer.json"  # バッファはdata配下に統一
   |

F821 Undefined name `Path`
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/core/meta_ai.py:121:12
    |
119 |     # 実際のパスに合わせて要調整
120 |     df_path = "data/sample_test_data.csv"
121 |     if not Path(df_path).exists():
    |            ^^^^
122 |         # ダミーデータ作成
123 |         dates = pd.date_range(start="2024-01-01", periods=200)
    |

F841 Local variable `dd_diff` is assigned to but never used
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/core/pdca_log_parser.py:94:9
   |
92 |         avg_dd_before = sum(dd_before_vals) / len(group) if group else 0.0
93 |         avg_dd_after = sum(dd_after_vals) / len(group) if group else 0.0
94 |         dd_diff = round(avg_dd_before - avg_dd_after, 2)
   |         ^^^^^^^
95 |
96 |         adopted = any(g["status"] == "adopted" for g in group)
   |
help: Remove assignment to unused variable `dd_diff`

F811 Redefinition of unused `simulate_strategy_adjusted` from line 17
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/core/strategy_optimizer_adjusted.py:51:5
   |
49 |     return risk_control.current_capital
50 |
51 | def simulate_strategy_adjusted(strategy_path: str, market_data: pd.DataFrame) -> dict:
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ `simulate_strategy_adjusted` redefined here
52 |     try:
53 |         namespace = {}
   |
  ::: actions-runner/_work/noctria_kingdom/noctria_kingdom/src/core/strategy_optimizer_adjusted.py:17:5
   |
15 |         return None
16 |
17 | def simulate_strategy_adjusted(prices, entry_threshold, exit_threshold, initial_capital=1000000):
   |     -------------------------- previous definition of `simulate_strategy_adjusted` here
18 |     risk_control = RiskControl(initial_capital)
19 |     position = 0
   |
help: Remove definition: `simulate_strategy_adjusted`

F841 Local variable `state` is assigned to but never used
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/core/task_scheduler.py:21:9
   |
19 |         """市場データをAIへ適用し、最適戦略を動的選定"""
20 |
21 |         state = np.array([market_data["price_change"], market_data["volatility"], market_data["liquidity_index"], market_data["news_se…
   |         ^^^^^
22 |         strategy_scores = {}
   |
help: Remove assignment to unused variable `state`

F821 Undefined name `initial_capital`
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/execution/simulate_official_strategy.py:64:25
   |
62 |         capital = self.initial_capital
63 |         position = 0  # 0: No position, 1: Long, -1: Short
64 |         equity_curve = [initial_capital]
   |                         ^^^^^^^^^^^^^^^
65 |
66 |         for i in range(1, len(self.data)):
   |

F821 Undefined name `json`
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/execution/simulate_official_strategy.py:154:13
    |
153 |         with open(report_path.with_suffix('.json'), 'w') as f:
154 |             json.dump(metrics, f, indent=2)
    |             ^^^^
155 |         logger.info(f"📋 パフォーマンスレポートを保存しました: {report_path.with_suffix('.json')}")
    |

F821 Undefined name `datetime`
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/execution/simulate_official_strategy.py:188:55
    |
186 |     logger.info(f"🏆 シミュレーション結果: {metrics}")
187 |     
188 |     report_file_path = log_dir / f"simulation_report_{datetime.now().strftime('%Y%m%d_%H%M%S')}"
    |                                                       ^^^^^^^^
189 |     Backtester.generate_report(equity_curve, metrics, report_file_path)
    |

E402 Module level import not at top of file
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/execution/trade_analysis.py:3:1
  |
1 | print("=== Trade Analysis Script Started ===")
2 |
3 | import pandas as pd
  | ^^^^^^^^^^^^^^^^^^^
4 | import matplotlib.pyplot as plt
5 | import glob
  |

E402 Module level import not at top of file
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/execution/trade_analysis.py:4:1
  |
3 | import pandas as pd
4 | import matplotlib.pyplot as plt
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
5 | import glob
6 | import os
  |

E402 Module level import not at top of file
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/execution/trade_analysis.py:5:1
  |
3 | import pandas as pd
4 | import matplotlib.pyplot as plt
5 | import glob
  | ^^^^^^^^^^^
6 | import os
  |

E402 Module level import not at top of file
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/execution/trade_analysis.py:6:1
  |
4 | import matplotlib.pyplot as plt
5 | import glob
6 | import os
  | ^^^^^^^^^
7 |
8 | print("[INFO] Checking logs directory for trade history CSVs...")
  |

invalid-syntax: Got unexpected token `
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/plan_data/kpi_minidemo.py:2:1
  |
1 | #### 📂 src/plan_data/kpi_minidemo.py
2 | ```python
  | ^
3 | # -*- coding: utf-8 -*-
4 | """
  |

invalid-syntax: Got unexpected token `
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/plan_data/kpi_minidemo.py:2:2
  |
1 | #### 📂 src/plan_data/kpi_minidemo.py
2 | ```python
  |  ^
3 | # -*- coding: utf-8 -*-
4 | """
  |

invalid-syntax: Got unexpected token `
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/plan_data/kpi_minidemo.py:2:3
  |
1 | #### 📂 src/plan_data/kpi_minidemo.py
2 | ```python
  |   ^
3 | # -*- coding: utf-8 -*-
4 | """
  |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/plan_data/kpi_minidemo.py:59:1
   |
57 |     for k, v in kpis.items():
58 |         print(f"  {k}: {v}")
59 | ```
   | ^
60 |
61 | ---
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/plan_data/kpi_minidemo.py:59:2
   |
57 |     for k, v in kpis.items():
58 |         print(f"  {k}: {v}")
59 | ```
   |  ^
60 |
61 | ---
   |

invalid-syntax: Got unexpected token `
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/plan_data/kpi_minidemo.py:59:3
   |
57 |     for k, v in kpis.items():
58 |         print(f"  {k}: {v}")
59 | ```
   |   ^
60 |
61 | ---
   |

invalid-syntax: Expected a statement
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/plan_data/kpi_minidemo.py:59:4
   |
57 |     for k, v in kpis.items():
58 |         print(f"  {k}: {v}")
59 | ```
   |    ^
60 |
61 | ---
   |

invalid-syntax: Expected an expression
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/plan_data/kpi_minidemo.py:61:4
   |
59 | ```
60 |
61 | ---
   |    ^
   |

F841 Local variable `trace_id` is assigned to but never used
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/plan_data/quality_gate.py:168:5
    |
166 |     features: Dict[str, Any] = _get_attr(bundle, "features", {}) or {}
167 |     context: Dict[str, Any] = _get_attr(bundle, "context", {}) or {}
168 |     trace_id: str = _get_attr(bundle, "trace_id", "") or ""
    |     ^^^^^^^^
169 |
170 |     # -------- 実測/推定値の計算 --------
    |
help: Remove assignment to unused variable `trace_id`

F403 `from core.path_config import *` used; unable to detect undefined names
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/scripts/meta_ai_tensorboard_train.py:1:1
  |
1 | from core.path_config import *
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2 | #!/usr/bin/env python3
3 | # coding: utf-8
  |

F841 Local variable `np` is assigned to but never used
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/scripts/optimize_params_with_optuna.py:76:5
   |
74 | def make_objective(cfg: OptunaConfig):
75 |     mods = _lazy_imports()
76 |     np = mods["np"]
   |     ^^
77 |     gym = mods["gym"]
78 |     PPO = mods["PPO"]
   |
help: Remove assignment to unused variable `np`

F841 Local variable `optuna_mod` is assigned to but never used
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/scripts/optimize_params_with_optuna.py:81:5
   |
79 |     DummyVecEnv = mods["DummyVecEnv"]
80 |     evaluate_policy = mods["evaluate_policy"]
81 |     optuna_mod = mods["optuna"]
   |     ^^^^^^^^^^
82 |
83 |     # env factory（直インスタンス or gym.make）
   |
help: Remove assignment to unused variable `optuna_mod`

F821 Undefined name `optuna`
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/scripts/optimize_params_with_optuna.py:90:27
   |
88 |         return gym.make(cfg.env_id)
89 |
90 |     def objective(trial: "optuna.trial.Trial") -> float:
   |                           ^^^^^^
91 |         # Hyperparameter Search Space
92 |         learning_rate = trial.suggest_float("learning_rate", 1e-5, 1e-3, log=True)
   |

F821 Undefined name `optuna`
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/scripts/optimize_params_with_optuna.py:175:15
    |
174 |     # Sampler
175 |     sampler: "optuna.samplers.BaseSampler"
    |               ^^^^^^
176 |     if cfg.sampler.lower() == "tpe":
177 |         sampler = optuna_mod.samplers.TPESampler(seed=cfg.seed)
    |

F821 Undefined name `optuna`
   --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/scripts/optimize_params_with_optuna.py:184:23
    |
183 |     # Pruner
184 |     pruner: Optional["optuna.pruners.BasePruner"]
    |                       ^^^^^^
185 |     if cfg.pruner.lower() == "median":
186 |         pruner = optuna_mod.pruners.MedianPruner(n_startup_trials=5, n_warmup_steps=cfg.allow_prune_after)
    |

F841 Local variable `prompt` is assigned to but never used
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/strategies/hermes_cognitor.py:49:9
   |
47 |         reason: Optional[str] = None
48 |     ) -> str:
49 |         prompt = self._build_prompt(features, labels, feature_order, reason)
   |         ^^^^^^
50 |         logging.info("HermesCognitor: プロンプト組み立て完了")
51 |         # ※本番ではOpenAI API等で要約を生成（省略）
   |
help: Remove assignment to unused variable `prompt`

F841 Local variable `cov_matrix` is assigned to but never used
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/strategies/portfolio_optimizer.py:11:9
   |
 9 |     def optimize(self, asset_returns):
10 |         """資産のリターンを分析し、最適なポートフォリオ比率を計算"""
11 |         cov_matrix = np.cov(asset_returns, rowvar=False)
   |         ^^^^^^^^^^
12 |         avg_returns = np.mean(asset_returns, axis=0)
   |
help: Remove assignment to unused variable `cov_matrix`

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/strategies/prometheus_oracle.py:39:1
   |
37 |     gym = None  # type: ignore
38 |
39 | from src.core.path_config import VERITAS_MODELS_DIR, ORACLE_FORECAST_JSON, DATA_DIR
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
40 | from src.plan_data.standard_feature_schema import STANDARD_FEATURE_ORDER
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/strategies/prometheus_oracle.py:40:1
   |
39 | from src.core.path_config import VERITAS_MODELS_DIR, ORACLE_FORECAST_JSON, DATA_DIR
40 | from src.plan_data.standard_feature_schema import STANDARD_FEATURE_ORDER
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
41 |
42 | log = logging.getLogger(__name__)
   |

F821 Undefined name `pr`
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/tools/dependency_analyzer.py:46:5
   |
45 | def main():
46 |     pr
   |     ^^
   |

F601 Dictionary key literal `'from strategies.noctus_sentinella import'` repeated
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/tools/fix_import_paths.py:14:5
   |
12 |     'from scripts.apply_best_params_to_metaai import': 'from scripts.apply_best_params_to_metaai import',
13 |     # 念のため strategies から直接も置換
14 |     'from strategies.noctus_sentinella import': 'from strategies.noctus_sentinella import',
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
15 | }
   |
help: Remove repeated key literal `'from strategies.noctus_sentinella import'`

E741 Ambiguous variable name: `l`
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/tools/fix_path_violations.py:49:60
   |
47 |     if modified:
48 |         # import path_config が含まれていなければ追加
49 |         if not any("from core.path_config import" in l for l in new_lines):
   |                                                            ^
50 |             new_lines.insert(0, IMPORT_LINE + "\n")
51 |         with open(file_path, "w", encoding="utf-8") as f:
   |

F841 Local variable `keep` is assigned to but never used
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/tools/generate_cleanup_script.py:34:13
   |
32 |             # 原則として1つを残し、他は削除（要レビュー）
33 |             paths = issue["paths"]
34 |             keep = paths[0]
   |             ^^^^
35 |             for path in paths[1:]:
36 |                 cmds.append(f"# ⚠️ 重複: '{issue['name']}' → 一方を残す\n")
   |
help: Remove assignment to unused variable `keep`

E722 Do not use bare `except`
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/tools/push_official_strategy_to_github.py:41:9
   |
39 |                 if isinstance(data, dict):
40 |                     logs.append((file, data))
41 |         except:
   |         ^^^^^^
42 |             continue
43 |     return logs
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/tools/show_timeline.py:52:1
   |
51 | # We reuse observability helpers (for ensure_* only).
52 | from plan_data.observability import ensure_tables, ensure_views, refresh_materialized  # type: ignore
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/tools/structure_refactor.py:14:1
   |
13 | # === 各種モジュールインポート ===
14 | from tools.hardcoded_path_replacer import replace_paths
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
15 | from tools.structure_auditor import audit_structure  # ← 明示的に audit_structure を呼ぶ
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/tools/structure_refactor.py:15:1
   |
13 | # === 各種モジュールインポート ===
14 | from tools.hardcoded_path_replacer import replace_paths
15 | from tools.structure_auditor import audit_structure  # ← 明示的に audit_structure を呼ぶ
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
16 |
17 | # === 対象ディレクトリ（v3.0構成）===
   |

F841 Local variable `entry_price` is assigned to but never used
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/veritas/generate/templates/strategy_template.py:23:13
   |
21 |         if position == 0 and rsi > 50 and spread < 2:
22 |             position = capital / price
23 |             entry_price = price
   |             ^^^^^^^^^^^
24 |
25 |         elif position > 0 and (rsi < 50 or spread > 2):
   |
help: Remove assignment to unused variable `entry_price`

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/veritas/strategy_generator.py:11:1
   |
 9 |     sys.path.insert(0, str(src_path))
10 |
11 | import os
   | ^^^^^^^^^
12 | import torch
13 | import psycopg2
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/veritas/strategy_generator.py:12:1
   |
11 | import os
12 | import torch
   | ^^^^^^^^^^^^
13 | import psycopg2
14 | from datetime import datetime
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/veritas/strategy_generator.py:13:1
   |
11 | import os
12 | import torch
13 | import psycopg2
   | ^^^^^^^^^^^^^^^
14 | from datetime import datetime
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/veritas/strategy_generator.py:14:1
   |
12 | import torch
13 | import psycopg2
14 | from datetime import datetime
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
15 |
16 | from core.path_config import VERITAS_MODELS_DIR, STRATEGIES_DIR, LOGS_DIR
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/veritas/strategy_generator.py:16:1
   |
14 | from datetime import datetime
15 |
16 | from core.path_config import VERITAS_MODELS_DIR, STRATEGIES_DIR, LOGS_DIR
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
17 | from core.logger import setup_logger
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/veritas/strategy_generator.py:17:1
   |
16 | from core.path_config import VERITAS_MODELS_DIR, STRATEGIES_DIR, LOGS_DIR
17 | from core.logger import setup_logger
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
18 |
19 | from veritas.models.ml_model.simple_model import SimpleModel
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/veritas/strategy_generator.py:19:1
   |
17 | from core.logger import setup_logger
18 |
19 | from veritas.models.ml_model.simple_model import SimpleModel
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
20 |
21 | logger = setup_logger("VeritasGenerator", LOGS_DIR / "veritas" / "generator.log")
   |

F841 Local variable `model` is assigned to but never used
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/src/veritas/strategy_generator.py:68:9
   |
66 |     """
67 |     try:
68 |         model = load_ml_model()
   |         ^^^^^
69 |         # TODO: 入力ベクトル・推論ロジックを本番仕様で置き換え
70 |         import random
   |
help: Remove assignment to unused variable `model`

F841 Local variable `actions_tensor` is assigned to but never used
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/tests/backtesting/dqn_backtest.py:35:13
   |
33 |             states_tensor = torch.tensor(states, dtype=torch.float32)
34 |             next_states_tensor = torch.tensor(next_states, dtype=torch.float32)
35 |             actions_tensor = torch.tensor(actions, dtype=torch.int64)
   |             ^^^^^^^^^^^^^^
36 |             rewards_tensor = torch.tensor(rewards, dtype=torch.float32)
37 |             dones_tensor = torch.tensor(dones, dtype=torch.float32)
   |
help: Remove assignment to unused variable `actions_tensor`

F841 Local variable `rewards_tensor` is assigned to but never used
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/tests/backtesting/dqn_backtest.py:36:13
   |
34 |             next_states_tensor = torch.tensor(next_states, dtype=torch.float32)
35 |             actions_tensor = torch.tensor(actions, dtype=torch.int64)
36 |             rewards_tensor = torch.tensor(rewards, dtype=torch.float32)
   |             ^^^^^^^^^^^^^^
37 |             dones_tensor = torch.tensor(dones, dtype=torch.float32)
   |
help: Remove assignment to unused variable `rewards_tensor`

F841 Local variable `dones_tensor` is assigned to but never used
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/tests/backtesting/dqn_backtest.py:37:13
   |
35 |             actions_tensor = torch.tensor(actions, dtype=torch.int64)
36 |             rewards_tensor = torch.tensor(rewards, dtype=torch.float32)
37 |             dones_tensor = torch.tensor(dones, dtype=torch.float32)
   |             ^^^^^^^^^^^^
38 |
39 |             # Q値の計算
   |
help: Remove assignment to unused variable `dones_tensor`

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/tests/conftest.py:41:1
   |
40 | # --- Fixtures ---------------------------------------------------------------
41 | import logging
   | ^^^^^^^^^^^^^^
42 | import typing as t
43 | import json as _json
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/tests/conftest.py:42:1
   |
40 | # --- Fixtures ---------------------------------------------------------------
41 | import logging
42 | import typing as t
   | ^^^^^^^^^^^^^^^^^^
43 | import json as _json
44 | import pytest
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/tests/conftest.py:43:1
   |
41 | import logging
42 | import typing as t
43 | import json as _json
   | ^^^^^^^^^^^^^^^^^^^^
44 | import pytest
   |

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/tests/conftest.py:44:1
   |
42 | import typing as t
43 | import json as _json
44 | import pytest
   | ^^^^^^^^^^^^^
   |

F403 `from core.path_config import *` used; unable to detect undefined names
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/tests/execute_order_test.py:1:1
  |
1 | from core.path_config import *
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2 |
3 | from order_execution import OrderExecution  # execution/order_execution.py
  |

F403 `from core.path_config import *` used; unable to detect undefined names
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/tests/forward_test_meta_ai.py:1:1
  |
1 | from core.path_config import *
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2 | #!/usr/bin/env python3
3 | # coding: utf-8
  |

F405 `PROCESSED_DATA_DIR` may be undefined, or defined from star imports
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/tests/forward_test_meta_ai.py:21:31
   |
20 |     # 実際の市場データ（MT5からダウンロードしたデータなど）
21 |     real_time_data_path = str(PROCESSED_DATA_DIR / "preprocessed_usdjpy_with_fundamental.csv")
   |                               ^^^^^^^^^^^^^^^^^^
22 |     real_time_data = load_real_time_data(real_time_data_path)
   |

F403 `from core.path_config import *` used; unable to detect undefined names
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/tests/run_ai_trading_loop.py:1:1
  |
1 | from core.path_config import *
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2 | # tests/run_ai_trading_loop.py
  |

F841 Local variable `observation` is assigned to but never used
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/tests/test_meta_ai_rl_longrun.py:27:5
   |
25 |     # 例: 実際のヒストリカルデータファイルから観測データ生成（省略可）
26 |     # ここではランダム観測データを利用
27 |     observation = np.random.rand(12)
   |     ^^^^^^^^^^^
28 |
29 |     # 環境の初期化
   |
help: Remove assignment to unused variable `observation`

F841 Local variable `obs` is assigned to but never used
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/tests/test_meta_ai_rl_longrun.py:30:5
   |
29 |     # 環境の初期化
30 |     obs = meta_ai.reset()
   |     ^^^
31 |
32 |     # 例: 50,000ステップの長期学習
   |
help: Remove assignment to unused variable `obs`

F841 Local variable `mock_market_data` is assigned to but never used
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/tests/test_noctria.py:15:9
   |
13 |     def test_strategy_execution(self):
14 |         """市場データを適用し、戦略精度を評価"""
15 |         mock_market_data = {
   |         ^^^^^^^^^^^^^^^^
16 |             "price": 1.245, "volume": 1500, "sentiment": 0.75, "trend_strength": 0.6,
17 |             "volatility": 0.18, "order_block": 0.5, "institutional_flow": 0.85,
   |
help: Remove assignment to unused variable `mock_market_data`

E402 Module level import not at top of file
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/tests/test_noctus_gate_block.py:17:1
   |
15 | StrategyProposal = sa.StrategyProposal
16 |
17 | from plan_data.adapter_to_decision import run_strategy_and_decide
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |

F841 Local variable `policy` is assigned to but never used
 --> actions-runner/_work/noctria_kingdom/noctria_kingdom/tests/test_policy_guard.py:7:5
  |
6 | def test_inventor_can_propose_patch_basic():
7 |     policy = load_policy()
  |     ^^^^^^
8 |     ctx = {
9 |         "changed_files": 2,
  |
help: Remove assignment to unused variable `policy`

F821 Undefined name `ORDER_TYPE_BUY`
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/tests/unit_tests.py:23:46
   |
21 |     def test_execute_trade(self):
22 |         """注文が正常に送信されるか確認"""
23 |         result = self.executor.execute_trade(ORDER_TYPE_BUY, 0.1)
   |                                              ^^^^^^^^^^^^^^
24 |         self.assertIn("Trade", result)
   |

F841 Local variable `mod_file_map` is assigned to but never used
  --> actions-runner/_work/noctria_kingdom/noctria_kingdom/tools/advanced_import_map.py:41:5
   |
39 |         files += list(Path(base).rglob("*.py"))
40 |     file_mod_map = {str(f): mod_name_from_path(str(f)) for f in files}
41 |     mod_file_map = {v: k for k, v in file_mod_map.items()}
   |     ^^^^^^^^^^^^
42 |
43 |     # ファイル→import先ファイル（.py存在ベースで）
   |
help: Remove assignment to unused variable `mod_file_map`

F404 `from __future__` imports must occur at the beginning of the file
   --> airflow_docker/dags/noctria_act_pipeline.py:157:1
    |
155 | """
156 |
157 | from __future__ import annotations
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
158 | import os
159 | import json
    |

E402 Module level import not at top of file
   --> airflow_docker/dags/noctria_act_pipeline.py:157:1
    |
155 | """
156 |
157 | from __future__ import annotations
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
158 | import os
159 | import json
    |

E402 Module level import not at top of file
   --> airflow_docker/dags/noctria_act_pipeline.py:158:1
    |
157 | from __future__ import annotations
158 | import os
    | ^^^^^^^^^
159 | import json
160 | from glob import glob
    |

E402 Module level import not at top of file
   --> airflow_docker/dags/noctria_act_pipeline.py:159:1
    |
157 | from __future__ import annotations
158 | import os
159 | import json
    | ^^^^^^^^^^^
160 | from glob import glob
161 | from typing import Dict, Any, List
    |

E402 Module level import not at top of file
   --> airflow_docker/dags/noctria_act_pipeline.py:160:1
    |
158 | import os
159 | import json
160 | from glob import glob
    | ^^^^^^^^^^^^^^^^^^^^^
161 | from typing import Dict, Any, List
162 | from datetime import datetime
    |

E402 Module level import not at top of file
   --> airflow_docker/dags/noctria_act_pipeline.py:161:1
    |
159 | import json
160 | from glob import glob
161 | from typing import Dict, Any, List
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
162 | from datetime import datetime
    |

E402 Module level import not at top of file
   --> airflow_docker/dags/noctria_act_pipeline.py:162:1
    |
160 | from glob import glob
161 | from typing import Dict, Any, List
162 | from datetime import datetime
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
163 |
164 | PROJECT_ROOT = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
    |

F404 `from __future__` imports must occur at the beginning of the file
   --> airflow_docker/dags/noctria_act_pipeline.py:304:1
    |
302 | """
303 |
304 | from __future__ import annotations
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
305 | import os
306 | from datetime import datetime
    |

E402 Module level import not at top of file
   --> airflow_docker/dags/noctria_act_pipeline.py:304:1
    |
302 | """
303 |
304 | from __future__ import annotations
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
305 | import os
306 | from datetime import datetime
    |

E402 Module level import not at top of file
   --> airflow_docker/dags/noctria_act_pipeline.py:305:1
    |
304 | from __future__ import annotations
305 | import os
    | ^^^^^^^^^
306 | from datetime import datetime
    |

E402 Module level import not at top of file
   --> airflow_docker/dags/noctria_act_pipeline.py:306:1
    |
304 | from __future__ import annotations
305 | import os
306 | from datetime import datetime
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
307 |
308 | PROJECT_ROOT = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
    |

E402 Module level import not at top of file
  --> airflow_docker/dags/train_prometheus_obs8_dag.py:41:1
   |
39 |         sys.path.append(p)
40 |
41 | from airflow import DAG
   | ^^^^^^^^^^^^^^^^^^^^^^^
42 | from airflow.operators.python import PythonOperator
   |

E402 Module level import not at top of file
  --> airflow_docker/dags/train_prometheus_obs8_dag.py:42:1
   |
41 | from airflow import DAG
42 | from airflow.operators.python import PythonOperator
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |

E402 Module level import not at top of file
  --> airflow_docker/dags/veritas_eval_dag.py:24:1
   |
22 |     sys.path.insert(0, project_root)
23 |
24 | from src.core.path_config import STRATEGIES_VERITAS_GENERATED_DIR
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
25 | from src.core.strategy_evaluator import evaluate_strategy, log_evaluation_result
   |

E402 Module level import not at top of file
  --> airflow_docker/dags/veritas_eval_dag.py:25:1
   |
24 | from src.core.path_config import STRATEGIES_VERITAS_GENERATED_DIR
25 | from src.core.strategy_evaluator import evaluate_strategy, log_evaluation_result
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
26 |
27 | default_args = {
   |

E402 Module level import not at top of file
  --> airflow_docker/dags/veritas_pdca_dag.py:24:1
   |
23 | # --- Veritas戦略関連スクリプトのインポート ---
24 | from src.veritas.veritas_generate_strategy import main as generate_main
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
25 | from src.veritas.evaluate_veritas import main as evaluate_main
26 | from src.scripts.github_push_adopted_strategies import main as push_main
   |

E402 Module level import not at top of file
  --> airflow_docker/dags/veritas_pdca_dag.py:25:1
   |
23 | # --- Veritas戦略関連スクリプトのインポート ---
24 | from src.veritas.veritas_generate_strategy import main as generate_main
25 | from src.veritas.evaluate_veritas import main as evaluate_main
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
26 | from src.scripts.github_push_adopted_strategies import main as push_main
   |

E402 Module level import not at top of file
  --> airflow_docker/dags/veritas_pdca_dag.py:26:1
   |
24 | from src.veritas.veritas_generate_strategy import main as generate_main
25 | from src.veritas.evaluate_veritas import main as evaluate_main
26 | from src.scripts.github_push_adopted_strategies import main as push_main
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
27 |
28 | # === DAG内ヘルパー関数 ===
   |

E402 Module level import not at top of file
  --> airflow_docker/dags/veritas_to_order_dag.py:25:1
   |
23 | # ✅ 修正: 各スクリプトからメインの処理関数をインポート
24 | # 存在しないモジュールを削除し、必要なものを正しくインポート
25 | from src.veritas.evaluate_veritas import main as evaluate_main
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
26 | # from src.veritas.promote_accepted_strategies import main as promote_main # このスクリプトは存在しない可能性
27 | from src.execution.generate_order_json import main as generate_order_main
   |

E402 Module level import not at top of file
  --> airflow_docker/dags/veritas_to_order_dag.py:27:1
   |
25 | from src.veritas.evaluate_veritas import main as evaluate_main
26 | # from src.veritas.promote_accepted_strategies import main as promote_main # このスクリプトは存在しない可能性
27 | from src.execution.generate_order_json import main as generate_order_main
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
28 |
29 | # === DAG基本設定 ===
   |

F403 `from core.path_config import *` used; unable to detect undefined names
 --> airflow_docker/scripts/download_veritas_model.py:1:1
  |
1 | from core.path_config import *
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2 | from huggingface_hub import snapshot_download
3 | import os
  |

F405 `MODELS_DIR` may be undefined, or defined from star imports
  --> airflow_docker/scripts/download_veritas_model.py:9:18
   |
 8 | # 保存先ディレクトリ（Airflow/Dockerマウントパスと一致させる）
 9 | TARGET_DIR = str(MODELS_DIR)
   |                  ^^^^^^^^^^
10 |
11 | # モデルダウンロード
   |

F403 `from core.path_config import *` used; unable to detect undefined names
 --> airflow_docker/scripts/meta_ai_tensorboard_train.py:1:1
  |
1 | from core.path_config import *
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2 | #!/usr/bin/env python3
3 | # coding: utf-8
  |

E741 Ambiguous variable name: `l`
  --> autogen_scripts/fix_missing_imports.py:35:85
   |
33 |         new_imports = []
34 |         for rule in IMPORT_RULES:
35 |             if re.search(rule["pattern"], code) and all(rule["import"] not in l for l in existing_import_lines):
   |                                                                                     ^
36 |                 new_imports.append(rule["import"])
   |

E402 Module level import not at top of file
  --> conversation_history_manager.py:67:1
   |
66 | # 依存注入用ファクトリ関数例
67 | from fastapi import Request
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^
68 |
69 | def get_conversation_history_manager(
   |

E731 Do not assign a `lambda` expression, use a `def`
  --> data/explainable_ai.py:73:9
   |
71 |         sample = market_data.flatten()
72 |         # 予測関数として、モデルの predict メソッドを指定
73 |         prediction_fn = lambda x: self.model.predict(x)
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
74 |         explanation = self.lime_explainer.explain_instance(
75 |             sample, 
   |
help: Rewrite `prediction_fn` as a `def`

invalid-syntax: Got unexpected token `
  --> generated_code/data_collection.py:8:1
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | ```python
   | ^
 9 | # data_collection.py
10 | import requests
   |

invalid-syntax: Got unexpected token `
  --> generated_code/data_collection.py:8:2
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | ```python
   |  ^
 9 | # data_collection.py
10 | import requests
   |

invalid-syntax: Got unexpected token `
  --> generated_code/data_collection.py:8:3
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | ```python
   |   ^
 9 | # data_collection.py
10 | import requests
   |

invalid-syntax: Got unexpected token `
  --> generated_code/data_collection.py:20:1
   |
18 |     else:
19 |         raise ConnectionError(f"Failed to download data. Status code: {response.status_code}")
20 | ```
   | ^
   |

invalid-syntax: Got unexpected token `
  --> generated_code/data_collection.py:20:2
   |
18 |     else:
19 |         raise ConnectionError(f"Failed to download data. Status code: {response.status_code}")
20 | ```
   |  ^
   |

invalid-syntax: Got unexpected token `
  --> generated_code/data_collection.py:20:3
   |
18 |     else:
19 |         raise ConnectionError(f"Failed to download data. Status code: {response.status_code}")
20 | ```
   |   ^
   |

invalid-syntax: Expected a statement
  --> generated_code/data_collection.py:20:4
   |
18 |     else:
19 |         raise ConnectionError(f"Failed to download data. Status code: {response.status_code}")
20 | ```
   |    ^
   |

invalid-syntax: Got unexpected token `
 --> generated_code/data_preprocessing.py:8:1
  |
6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
7 |
8 | ```python
  | ^
9 | # generated_code/data_preprocessing.py
  |

invalid-syntax: Got unexpected token `
 --> generated_code/data_preprocessing.py:8:2
  |
6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
7 |
8 | ```python
  |  ^
9 | # generated_code/data_preprocessing.py
  |

invalid-syntax: Got unexpected token `
 --> generated_code/data_preprocessing.py:8:3
  |
6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
7 |
8 | ```python
  |   ^
9 | # generated_code/data_preprocessing.py
  |

invalid-syntax: Got unexpected token `
  --> generated_code/data_preprocessing.py:23:1
   |
21 |     def transform_data(self):
22 |         pass
23 | ```
   | ^
   |

invalid-syntax: Got unexpected token `
  --> generated_code/data_preprocessing.py:23:2
   |
21 |     def transform_data(self):
22 |         pass
23 | ```
   |  ^
   |

invalid-syntax: Got unexpected token `
  --> generated_code/data_preprocessing.py:23:3
   |
21 |     def transform_data(self):
22 |         pass
23 | ```
   |   ^
   |

invalid-syntax: Expected a statement
  --> generated_code/data_preprocessing.py:23:4
   |
21 |     def transform_data(self):
22 |         pass
23 | ```
   |    ^
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/doc_turn1.py:8:21
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | 指定されたエラーメッセージから判断すると、`pytest`の実行時に必要なプラグインである`pytest-json-report`が不足している可能性があります。                                                    …
   |                                         ^^
 9 |
10 | ### 手順
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn1.py:8:22
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | 指定されたエラーメッセージから判断すると、`pytest`の実行時に必要なプラグインである`pytest-json-report`が不足している可能性があります。                                                    …
   |                                           ^
 9 |
10 | ### 手順
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn1.py:8:29
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | 指定されたエラーメッセージから判断すると、`pytest`の実行時に必要なプラグインである`pytest-json-report`が不足している可能性があります。                                                    …
   |                                                  ^
 9 |
10 | ### 手順
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn1.py:8:46
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | 指定されたエラーメッセージから判断すると、`pytest`の実行時に必要なプラグインである`pytest-json-report`が不足している可能性があります。                                                    …
   |                                                                                   ^
 9 |
10 | ### 手順
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn1.py:8:65
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | 指定されたエラーメッセージから判断すると、`pytest`の実行時に必要なプラグインである`pytest-json-report`が不足している可能性があります。                                                    …
   |                                                                                                      ^
 9 |
10 | ### 手順
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/doc_turn1.py:8:81
   |
 6 | …
 7 | …
 8 | …足している可能性があります。このプラグインは、`pytest`のテスト結果をJSON形式で出力するためのオプションを提供します。以下の手順に従っ                                                            …
   |                             ^^
 9 | …
10 | …
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/doc_turn1.py:8:90
   |
 6 | …
 7 | …
 8 | …グインは、`pytest`のテスト結果をJSON形式で出力するためのオプションを提供します。以下の手順に従って問題を解決できます。
   |           ^^
 9 | …
10 | …
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn1.py:8:91
   |
 6 | …
 7 | …
 8 | …インは、`pytest`のテスト結果をJSON形式で出力するためのオプションを提供します。以下の手順に従って問題を解決できます。
   |           ^
 9 | …
10 | …
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn1.py:8:98
   |
 6 | …
 7 | …
 8 | …test`のテスト結果をJSON形式で出力するためのオプションを提供します。以下の手順に従って問題を解決できます。
   |      ^
 9 | …
10 | …
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/doc_turn1.py:8:131
   |
 6 | …
 7 | …
 8 | …
^  |
 9 | …
10 | …
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/doc_turn1.py:8:150
   |
 6 | …
 7 | …
 8 | …
   ^^
 9 | …
10 | …
   |

invalid-syntax: Expected a statement
  --> generated_code/doc_turn1.py:8:151
   |
 6 | …
 7 | …
 8 | …
   | ^
 9 | …
10 | …
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn1.py:12:6
   |
10 | ### 手順
11 |
12 | 1. **`pytest-json-report`のインストール**
   |      ^
13 |    - `pytest-json-report`プラグインをPython仮想環境内にインストールします。次のコマンドを実行してください。
14 |      ```bash
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn1.py:12:25
   |
10 | ### 手順
11 |
12 | 1. **`pytest-json-report`のインストール**
   |                         ^
13 |    - `pytest-json-report`プラグインをPython仮想環境内にインストールします。次のコマンドを実行してください。
14 |      ```bash
   |

invalid-syntax: Expected an expression
  --> generated_code/doc_turn1.py:12:35
   |
10 | ### 手順
11 |
12 | 1. **`pytest-json-report`のインストール**
   |                                          ^
13 |    - `pytest-json-report`プラグインをPython仮想環境内にインストールします。次のコマンドを実行してください。
14 |      ```bash
   |

invalid-syntax: Unexpected indentation
  --> generated_code/doc_turn1.py:13:1
   |
12 | 1. **`pytest-json-report`のインストール**
13 |    - `pytest-json-report`プラグインをPython仮想環境内にインストールします。次のコマンドを実行してください。
   | ^^^
14 |      ```bash
15 |      pip install pytest-json-report
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn1.py:13:6
   |
12 | 1. **`pytest-json-report`のインストール**
13 |    - `pytest-json-report`プラグインをPython仮想環境内にインストールします。次のコマンドを実行してください。
   |      ^
14 |      ```bash
15 |      pip install pytest-json-report
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn1.py:13:25
   |
12 | 1. **`pytest-json-report`のインストール**
13 |    - `pytest-json-report`プラグインをPython仮想環境内にインストールします。次のコマンドを実行してください。
   |                         ^
14 |      ```bash
15 |      pip install pytest-json-report
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/doc_turn1.py:13:53
   |
12 | 1. **`pytest-json-report`のインストール**
13 |    - `pytest-json-report`プラグインをPython仮想環境内にインストールします。次のコマンドを実行してください。
   |                                                                          ^^
14 |      ```bash
15 |      pip install pytest-json-report
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/doc_turn1.py:13:69
   |
12 | 1. **`pytest-json-report`のインストール**
13 |    - `pytest-json-report`プラグインをPython仮想環境内にインストールします。次のコマンドを実行してください。
   |                                                                                                          ^^
14 |      ```bash
15 |      pip install pytest-json-report
   |

invalid-syntax: Expected a statement
  --> generated_code/doc_turn1.py:13:70
   |
12 | 1. **`pytest-json-report`のインストール**
13 |    - `pytest-json-report`プラグインをPython仮想環境内にインストールします。次のコマンドを実行してください。
   |                                                                                                            ^
14 |      ```bash
15 |      pip install pytest-json-report
   |

invalid-syntax: Unexpected indentation
  --> generated_code/doc_turn1.py:14:1
   |
12 | 1. **`pytest-json-report`のインストール**
13 |    - `pytest-json-report`プラグインをPython仮想環境内にインストールします。次のコマンドを実行してください。
14 |      ```bash
   | ^^^^^
15 |      pip install pytest-json-report
16 |      ```
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn1.py:14:6
   |
12 | 1. **`pytest-json-report`のインストール**
13 |    - `pytest-json-report`プラグインをPython仮想環境内にインストールします。次のコマンドを実行してください。
14 |      ```bash
   |      ^
15 |      pip install pytest-json-report
16 |      ```
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn1.py:14:7
   |
12 | 1. **`pytest-json-report`のインストール**
13 |    - `pytest-json-report`プラグインをPython仮想環境内にインストールします。次のコマンドを実行してください。
14 |      ```bash
   |       ^
15 |      pip install pytest-json-report
16 |      ```
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn1.py:14:8
   |
12 | 1. **`pytest-json-report`のインストール**
13 |    - `pytest-json-report`プラグインをPython仮想環境内にインストールします。次のコマンドを実行してください。
14 |      ```bash
   |        ^
15 |      pip install pytest-json-report
16 |      ```
   |

invalid-syntax: Simple statements must be separated by newlines or semicolons
  --> generated_code/doc_turn1.py:15:10
   |
13 |    - `pytest-json-report`プラグインをPython仮想環境内にインストールします。次のコマンドを実行してください。
14 |      ```bash
15 |      pip install pytest-json-report
   |          ^^^^^^^
16 |      ```
   |

invalid-syntax: Simple statements must be separated by newlines or semicolons
  --> generated_code/doc_turn1.py:15:18
   |
13 |    - `pytest-json-report`プラグインをPython仮想環境内にインストールします。次のコマンドを実行してください。
14 |      ```bash
15 |      pip install pytest-json-report
   |                  ^^^^^^
16 |      ```
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn1.py:16:6
   |
14 |      ```bash
15 |      pip install pytest-json-report
16 |      ```
   |      ^
17 |
18 | 2. **インストールの確認**
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn1.py:16:7
   |
14 |      ```bash
15 |      pip install pytest-json-report
16 |      ```
   |       ^
17 |
18 | 2. **インストールの確認**
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn1.py:16:8
   |
14 |      ```bash
15 |      pip install pytest-json-report
16 |      ```
   |        ^
17 |
18 | 2. **インストールの確認**
   |

invalid-syntax: Expected a statement
  --> generated_code/doc_turn1.py:16:9
   |
14 |      ```bash
15 |      pip install pytest-json-report
16 |      ```
   |         ^
17 |
18 | 2. **インストールの確認**
   |

invalid-syntax: Expected a statement
  --> generated_code/doc_turn1.py:18:1
   |
16 |      ```
17 |
18 | 2. **インストールの確認**
   | ^
19 |    - プラグインが正しくインストールされているか確認するには、`pytest`のヘルプコマンドを使用してインストールされているプラグインリストを                                                            …
20 |      ```bash
   |

invalid-syntax: Expected an expression
  --> generated_code/doc_turn1.py:18:17
   |
16 |      ```
17 |
18 | 2. **インストールの確認**
   |                          ^
19 |    - プラグインが正しくインストールされているか確認するには、`pytest`のヘルプコマンドを使用してインストールされているプラグインリストを                                                            …
20 |      ```bash
   |

invalid-syntax: Unexpected indentation
  --> generated_code/doc_turn1.py:19:1
   |
18 | 2. **インストールの確認**
19 |    - プラグインが正しくインストールされているか確認するには、`pytest`のヘルプコマンドを使用してインストールされているプラグインリストを                                                            …
   | ^^^
20 |      ```bash
21 |      pytest --help
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/doc_turn1.py:19:33
   |
18 | 2. **インストールの確認**
19 |    - プラグインが正しくインストールされているか確認するには、`pytest`のヘルプコマンドを使用してインストールされているプラグインリストを                                                            …
   |                                                            ^^
20 |      ```bash
21 |      pytest --help
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn1.py:19:34
   |
18 | 2. **インストールの確認**
19 |    - プラグインが正しくインストールされているか確認するには、`pytest`のヘルプコマンドを使用してインストールされているプラグインリストを                                                            …
   |                                                              ^
20 |      ```bash
21 |      pytest --help
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn1.py:19:41
   |
18 | 2. **インストールの確認**
19 |    - プラグインが正しくインストールされているか確認するには、`pytest`のヘルプコマンドを使用してインストールされているプラグインリストを                                                            …
   |                                                                     ^
20 |      ```bash
21 |      pytest --help
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/doc_turn1.py:19:80
   |
18 | …
19 | …
   | ^^
20 | …
21 | …
   |

invalid-syntax: Expected a statement
  --> generated_code/doc_turn1.py:19:81
   |
18 | …
19 | …
   | ^
20 | …
21 | …
   |

invalid-syntax: Unexpected indentation
  --> generated_code/doc_turn1.py:20:1
   |
18 | 2. **インストールの確認**
19 |    - プラグインが正しくインストールされているか確認するには、`pytest`のヘルプコマンドを使用してインストールされているプラグインリストを                                                            …
20 |      ```bash
   | ^^^^^
21 |      pytest --help
22 |      ```
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn1.py:20:6
   |
18 | 2. **インストールの確認**
19 |    - プラグインが正しくインストールされているか確認するには、`pytest`のヘルプコマンドを使用してインストールされているプラグインリストを                                                            …
20 |      ```bash
   |      ^
21 |      pytest --help
22 |      ```
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn1.py:20:7
   |
18 | 2. **インストールの確認**
19 |    - プラグインが正しくインストールされているか確認するには、`pytest`のヘルプコマンドを使用してインストールされているプラグインリストを                                                            …
20 |      ```bash
   |       ^
21 |      pytest --help
22 |      ```
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn1.py:20:8
   |
18 | 2. **インストールの確認**
19 |    - プラグインが正しくインストールされているか確認するには、`pytest`のヘルプコマンドを使用してインストールされているプラグインリストを                                                            …
20 |      ```bash
   |        ^
21 |      pytest --help
22 |      ```
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn1.py:22:6
   |
20 |      ```bash
21 |      pytest --help
22 |      ```
   |      ^
23 |    - リストの中に`--json-report`オプションが表示されていることを確認します。
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn1.py:22:7
   |
20 |      ```bash
21 |      pytest --help
22 |      ```
   |       ^
23 |    - リストの中に`--json-report`オプションが表示されていることを確認します。
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn1.py:22:8
   |
20 |      ```bash
21 |      pytest --help
22 |      ```
   |        ^
23 |    - リストの中に`--json-report`オプションが表示されていることを確認します。
   |

invalid-syntax: Expected a statement
  --> generated_code/doc_turn1.py:22:9
   |
20 |      ```bash
21 |      pytest --help
22 |      ```
   |         ^
23 |    - リストの中に`--json-report`オプションが表示されていることを確認します。
   |

invalid-syntax: Expected a statement
  --> generated_code/doc_turn1.py:23:4
   |
21 |      pytest --help
22 |      ```
23 |    - リストの中に`--json-report`オプションが表示されていることを確認します。
   |    ^
24 |
25 | 3. **テストの再実行**
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn1.py:23:12
   |
21 |      pytest --help
22 |      ```
23 |    - リストの中に`--json-report`オプションが表示されていることを確認します。
   |                  ^
24 |
25 | 3. **テストの再実行**
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn1.py:23:26
   |
21 |      pytest --help
22 |      ```
23 |    - リストの中に`--json-report`オプションが表示されていることを確認します。
   |                                ^
24 |
25 | 3. **テストの再実行**
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/doc_turn1.py:23:48
   |
21 |      pytest --help
22 |      ```
23 |    - リストの中に`--json-report`オプションが表示されていることを確認します。
   |                                                                           ^^
24 |
25 | 3. **テストの再実行**
   |

invalid-syntax: Expected a statement
  --> generated_code/doc_turn1.py:23:49
   |
21 |      pytest --help
22 |      ```
23 |    - リストの中に`--json-report`オプションが表示されていることを確認します。
   |                                                                             ^
24 |
25 | 3. **テストの再実行**
   |

invalid-syntax: Expected a statement
  --> generated_code/doc_turn1.py:25:1
   |
23 |    - リストの中に`--json-report`オプションが表示されていることを確認します。
24 |
25 | 3. **テストの再実行**
   | ^
26 |    - プラグインがインストールされていることを確認したら、もう一度`pytest`コマンドを実行して、テスト結果をJSON形式で出力することを試みて                                                          …
27 |      ```bash
   |

invalid-syntax: Expected an expression
  --> generated_code/doc_turn1.py:25:15
   |
23 |    - リストの中に`--json-report`オプションが表示されていることを確認します。
24 |
25 | 3. **テストの再実行**
   |                      ^
26 |    - プラグインがインストールされていることを確認したら、もう一度`pytest`コマンドを実行して、テスト結果をJSON形式で出力することを試みて                                                          …
27 |      ```bash
   |

invalid-syntax: Unexpected indentation
  --> generated_code/doc_turn1.py:26:1
   |
25 | 3. **テストの再実行**
26 |    - プラグインがインストールされていることを確認したら、もう一度`pytest`コマンドを実行して、テスト結果をJSON形式で出力することを試みて                                                          …
   | ^^^
27 |      ```bash
28 |      pytest --json-report --json-report-file=./generated_code/pytest_result.json
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/doc_turn1.py:26:31
   |
25 | 3. **テストの再実行**
26 |    - プラグインがインストールされていることを確認したら、もう一度`pytest`コマンドを実行して、テスト結果をJSON形式で出力することを試みて                                                          …
   |                                                        ^^
27 |      ```bash
28 |      pytest --json-report --json-report-file=./generated_code/pytest_result.json
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn1.py:26:36
   |
25 | 3. **テストの再実行**
26 |    - プラグインがインストールされていることを確認したら、もう一度`pytest`コマンドを実行して、テスト結果をJSON形式で出力することを試みて                                                          …
   |                                                                  ^
27 |      ```bash
28 |      pytest --json-report --json-report-file=./generated_code/pytest_result.json
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn1.py:26:43
   |
25 | 3. **テストの再実行**
26 |    - プラグインがインストールされていることを確認したら、もう一度`pytest`コマンドを実行して、テスト結果をJSON形式で出力することを試みて                                                          …
   |                                                                         ^
27 |      ```bash
28 |      pytest --json-report --json-report-file=./generated_code/pytest_result.json
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/doc_turn1.py:26:53
   |
25 | 3. **テストの再実行**
26 |    - プラグインがインストールされていることを確認したら、もう一度`pytest`コマンドを実行して、テスト結果をJSON形式で出力することを試みて                                                          …
   |                                                                                            ^^
27 |      ```bash
28 |      pytest --json-report --json-report-file=./generated_code/pytest_result.json
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/doc_turn1.py:26:81
   |
25 | …
26 | …さい。
   |       ^^
27 | …
28 | …on
   |

invalid-syntax: Expected a statement
  --> generated_code/doc_turn1.py:26:82
   |
25 | …
26 | …い。
   |       ^
27 | …
28 | …n
   |

invalid-syntax: Unexpected indentation
  --> generated_code/doc_turn1.py:27:1
   |
25 | 3. **テストの再実行**
26 |    - プラグインがインストールされていることを確認したら、もう一度`pytest`コマンドを実行して、テスト結果をJSON形式で出力することを試みて                                                          …
27 |      ```bash
   | ^^^^^
28 |      pytest --json-report --json-report-file=./generated_code/pytest_result.json
29 |      ```
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn1.py:27:6
   |
25 | 3. **テストの再実行**
26 |    - プラグインがインストールされていることを確認したら、もう一度`pytest`コマンドを実行して、テスト結果をJSON形式で出力することを試みて                                                          …
27 |      ```bash
   |      ^
28 |      pytest --json-report --json-report-file=./generated_code/pytest_result.json
29 |      ```
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn1.py:27:7
   |
25 | 3. **テストの再実行**
26 |    - プラグインがインストールされていることを確認したら、もう一度`pytest`コマンドを実行して、テスト結果をJSON形式で出力することを試みて                                                          …
27 |      ```bash
   |       ^
28 |      pytest --json-report --json-report-file=./generated_code/pytest_result.json
29 |      ```
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn1.py:27:8
   |
25 | 3. **テストの再実行**
26 |    - プラグインがインストールされていることを確認したら、もう一度`pytest`コマンドを実行して、テスト結果をJSON形式で出力することを試みて                                                          …
27 |      ```bash
   |        ^
28 |      pytest --json-report --json-report-file=./generated_code/pytest_result.json
29 |      ```
   |

invalid-syntax: Invalid assignment target
  --> generated_code/doc_turn1.py:28:6
   |
26 |    - プラグインがインストールされていることを確認したら、もう一度`pytest`コマンドを実行して、テスト結果をJSON形式で出力することを試みて                                                          …
27 |      ```bash
28 |      pytest --json-report --json-report-file=./generated_code/pytest_result.json
   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
29 |      ```
   |

invalid-syntax: Expected an expression
  --> generated_code/doc_turn1.py:28:46
   |
26 |    - プラグインがインストールされていることを確認したら、もう一度`pytest`コマンドを実行して、テスト結果をJSON形式で出力することを試みて                                                          …
27 |      ```bash
28 |      pytest --json-report --json-report-file=./generated_code/pytest_result.json
   |                                              ^
29 |      ```
   |

invalid-syntax: Expected an identifier
  --> generated_code/doc_turn1.py:28:47
   |
26 |    - プラグインがインストールされていることを確認したら、もう一度`pytest`コマンドを実行して、テスト結果をJSON形式で出力することを試みて                                                          …
27 |      ```bash
28 |      pytest --json-report --json-report-file=./generated_code/pytest_result.json
   |                                               ^
29 |      ```
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn1.py:29:6
   |
27 |      ```bash
28 |      pytest --json-report --json-report-file=./generated_code/pytest_result.json
29 |      ```
   |      ^
30 |
31 | ### 問題が解決しない場合
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn1.py:29:7
   |
27 |      ```bash
28 |      pytest --json-report --json-report-file=./generated_code/pytest_result.json
29 |      ```
   |       ^
30 |
31 | ### 問題が解決しない場合
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn1.py:29:8
   |
27 |      ```bash
28 |      pytest --json-report --json-report-file=./generated_code/pytest_result.json
29 |      ```
   |        ^
30 |
31 | ### 問題が解決しない場合
   |

invalid-syntax: Expected a statement
  --> generated_code/doc_turn1.py:29:9
   |
27 |      ```bash
28 |      pytest --json-report --json-report-file=./generated_code/pytest_result.json
29 |      ```
   |         ^
30 |
31 | ### 問題が解決しない場合
   |

invalid-syntax: Expected a statement
  --> generated_code/doc_turn1.py:33:1
   |
31 | ### 問題が解決しない場合
32 |
33 | - **仮想環境の確認**: 使用している仮想環境が正しく設定されているか確認してください。すべての依存関係が同じ環境にインストールされている                                                              …
   | ^
34 | - **異なる環境での試行**: もし可能であれば、異なる環境で同様の手順を試して問題の範囲を絞り込んでください。
   |

invalid-syntax: Invalid annotated assignment target
  --> generated_code/doc_turn1.py:33:1
   |
31 | ### 問題が解決しない場合
32 |
33 | - **仮想環境の確認**: 使用している仮想環境が正しく設定されているか確認してください。すべての依存関係が同じ環境にインストールされている                                                              …
   | ^^^^^^^^^^^^^^^^^^^^
34 | - **異なる環境での試行**: もし可能であれば、異なる環境で同様の手順を試して問題の範囲を絞り込んでください。
   |

invalid-syntax: Expected an expression
  --> generated_code/doc_turn1.py:33:3
   |
31 | ### 問題が解決しない場合
32 |
33 | - **仮想環境の確認**: 使用している仮想環境が正しく設定されているか確認してください。すべての依存関係が同じ環境にインストールされている                                                              …
   |   ^^
34 | - **異なる環境での試行**: もし可能であれば、異なる環境で同様の手順を試して問題の範囲を絞り込んでください。
   |

invalid-syntax: Expected an expression
  --> generated_code/doc_turn1.py:33:14
   |
31 | ### 問題が解決しない場合
32 |
33 | - **仮想環境の確認**: 使用している仮想環境が正しく設定されているか確認してください。すべての依存関係が同じ環境にインストールされている                                                              …
   |                     ^
34 | - **異なる環境での試行**: もし可能であれば、異なる環境で同様の手順を試して問題の範囲を絞り込んでください。
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/doc_turn1.py:33:46
   |
31 | ### 問題が解決しない場合
32 |
33 | - **仮想環境の確認**: 使用している仮想環境が正しく設定されているか確認してください。すべての依存関係が同じ環境にインストールされている                                                              …
   |                                                                                   ^^
34 | - **異なる環境での試行**: もし可能であれば、異なる環境で同様の手順を試して問題の範囲を絞り込んでください。
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/doc_turn1.py:33:80
   |
31 | …
32 | …
33 | …
   ^^
34 | …
   |

invalid-syntax: Expected a statement
  --> generated_code/doc_turn1.py:33:81
   |
31 | …
32 | …
33 | …
   | ^
34 | …
   |

invalid-syntax: Invalid annotated assignment target
  --> generated_code/doc_turn1.py:34:1
   |
33 | - **仮想環境の確認**: 使用している仮想環境が正しく設定されているか確認してください。すべての依存関係が同じ環境にインストールされている                                                              …
34 | - **異なる環境での試行**: もし可能であれば、異なる環境で同様の手順を試して問題の範囲を絞り込んでください。
   | ^^^^^^^^^^^^^^^^^^^^^^^^
35 |
36 | この手順に従うことで、テスト結果をJSON形式で出力できるはずです。さらに、プラグインが正しくインストールされている環境か確認し、不足して                                                                …
   |

invalid-syntax: Expected an expression
  --> generated_code/doc_turn1.py:34:3
   |
33 | - **仮想環境の確認**: 使用している仮想環境が正しく設定されているか確認してください。すべての依存関係が同じ環境にインストールされている                                                              …
34 | - **異なる環境での試行**: もし可能であれば、異なる環境で同様の手順を試して問題の範囲を絞り込んでください。
   |   ^^
35 |
36 | この手順に従うことで、テスト結果をJSON形式で出力できるはずです。さらに、プラグインが正しくインストールされている環境か確認し、不足して                                                                …
   |

invalid-syntax: Expected an expression
  --> generated_code/doc_turn1.py:34:16
   |
33 | - **仮想環境の確認**: 使用している仮想環境が正しく設定されているか確認してください。すべての依存関係が同じ環境にインストールされている                                                              …
34 | - **異なる環境での試行**: もし可能であれば、異なる環境で同様の手順を試して問題の範囲を絞り込んでください。
   |                         ^
35 |
36 | この手順に従うことで、テスト結果をJSON形式で出力できるはずです。さらに、プラグインが正しくインストールされている環境か確認し、不足して                                                                …
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/doc_turn1.py:34:26
   |
33 | - **仮想環境の確認**: 使用している仮想環境が正しく設定されているか確認してください。すべての依存関係が同じ環境にインストールされている                                                              …
34 | - **異なる環境での試行**: もし可能であれば、異なる環境で同様の手順を試して問題の範囲を絞り込んでください。
   |                                           ^^
35 |
36 | この手順に従うことで、テスト結果をJSON形式で出力できるはずです。さらに、プラグインが正しくインストールされている環境か確認し、不足して                                                                …
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/doc_turn1.py:34:57
   |
33 | - **仮想環境の確認**: 使用している仮想環境が正しく設定されているか確認してください。すべての依存関係が同じ環境にインストールされている                                                              …
34 | - **異なる環境での試行**: もし可能であれば、異なる環境で同様の手順を試して問題の範囲を絞り込んでください。
   |                                                                                                         ^^
35 |
36 | この手順に従うことで、テスト結果をJSON形式で出力できるはずです。さらに、プラグインが正しくインストールされている環境か確認し、不足して                                                                …
   |

invalid-syntax: Expected a statement
  --> generated_code/doc_turn1.py:34:58
   |
33 | - **仮想環境の確認**: 使用している仮想環境が正しく設定されているか確認してください。すべての依存関係が同じ環境にインストールされている                                                              …
34 | - **異なる環境での試行**: もし可能であれば、異なる環境で同様の手順を試して問題の範囲を絞り込んでください。
   |                                                                                                           ^
35 |
36 | この手順に従うことで、テスト結果をJSON形式で出力できるはずです。さらに、プラグインが正しくインストールされている環境か確認し、不足して                                                                …
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/doc_turn1.py:36:11
   |
34 | - **異なる環境での試行**: もし可能であれば、異なる環境で同様の手順を試して問題の範囲を絞り込んでください。
35 |
36 | この手順に従うことで、テスト結果をJSON形式で出力できるはずです。さらに、プラグインが正しくインストールされている環境か確認し、不足して                                                                …
   |                     ^^
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/doc_turn1.py:36:34
   |
34 | - **異なる環境での試行**: もし可能であれば、異なる環境で同様の手順を試して問題の範囲を絞り込んでください。
35 |
36 | この手順に従うことで、テスト結果をJSON形式で出力できるはずです。さらに、プラグインが正しくインストールされている環境か確認し、不足して                                                                …
   |                                                               ^^
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/doc_turn1.py:36:38
   |
34 | - **異なる環境での試行**: もし可能であれば、異なる環境で同様の手順を試して問題の範囲を絞り込んでください。
35 |
36 | この手順に従うことで、テスト結果をJSON形式で出力できるはずです。さらに、プラグインが正しくインストールされている環境か確認し、不足して                                                                …
   |                                                                       ^^
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/doc_turn1.py:36:65
   |
34 | - **異なる環境での試行**: もし可能であれば、異なる環境で同様の手順を試して問題の範囲を絞り込んでください。
35 |
36 | この手順に従うことで、テスト結果をJSON形式で出力できるはずです。さらに、プラグインが正しくインストールされている環境か確認し、不足して                                                                …
   |                                                                                                                             ^^
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/doc_turn1.py:36:94
   |
34 | …
35 | …
36 | …
   ^^
   |

invalid-syntax: Expected a statement
  --> generated_code/doc_turn1.py:36:95
   |
34 | …
35 | …
36 | …
   | ^
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/doc_turn2.py:8:11
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | ありがとうございます。おっしゃる通り、特定のコマンドラインオプションが認識されない場合、対応するプラグインがインストールされていないこ                                                                  …
   |                     ^^
 9 |
10 | 1. **pytest-json-reportのインストール**:
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/doc_turn2.py:8:19
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | ありがとうございます。おっしゃる通り、特定のコマンドラインオプションが認識されない場合、対応するプラグインがインストールされていないこ                                                                  …
   |                                     ^^
 9 |
10 | 1. **pytest-json-reportのインストール**:
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/doc_turn2.py:8:44
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | ありがとうございます。おっしゃる通り、特定のコマンドラインオプションが認識されない場合、対応するプラグインがインストールされていないこ                                                                  …
   |                                                                                       ^^
 9 |
10 | 1. **pytest-json-reportのインストール**:
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/doc_turn2.py:8:84
   |
 6 | …
 7 | …
 8 | …て、さらに詳細な説明と注意事項を加えさせていただきます。
^  |
 9 | …
10 | …
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/doc_turn2.py:8:88
   |
 6 | …
 7 | …
 8 | …説明と注意事項を加えさせていただきます。
^  |
 9 | …
10 | …
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/doc_turn2.py:8:103
   |
 6 | …
 7 | …
 8 | …
^  |
 9 | …
10 | …
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/doc_turn2.py:8:129
   |
 6 | …
 7 | …
 8 | …
   ^^
 9 | …
10 | …
   |

invalid-syntax: Expected a statement
  --> generated_code/doc_turn2.py:8:130
   |
 6 | …
 7 | …
 8 | …
   | ^
 9 | …
10 | …
   |

invalid-syntax: Invalid annotated assignment target
  --> generated_code/doc_turn2.py:10:1
   |
 8 | ありがとうございます。おっしゃる通り、特定のコマンドラインオプションが認識されない場合、対応するプラグインがインストールされていないこ                                                                  …
 9 |
10 | 1. **pytest-json-reportのインストール**:
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
11 |    - 確認している仮想環境もしくはDocker環境がアクティブな状態で、以下のコマンドを実行します。
   |

invalid-syntax: Expected an expression
  --> generated_code/doc_turn2.py:10:33
   |
 8 | ありがとうございます。おっしゃる通り、特定のコマンドラインオプションが認識されない場合、対応するプラグインがインストールされていないこ                                                                  …
 9 |
10 | 1. **pytest-json-reportのインストール**:
   |                                        ^
11 |    - 確認している仮想環境もしくはDocker環境がアクティブな状態で、以下のコマンドを実行します。
   |

invalid-syntax: Expected an expression
  --> generated_code/doc_turn2.py:10:34
   |
 8 | ありがとうございます。おっしゃる通り、特定のコマンドラインオプションが認識されない場合、対応するプラグインがインストールされていないこ                                                                  …
 9 |
10 | 1. **pytest-json-reportのインストール**:
   |                                         ^
11 |    - 確認している仮想環境もしくはDocker環境がアクティブな状態で、以下のコマンドを実行します。
   |

invalid-syntax: Unexpected indentation
  --> generated_code/doc_turn2.py:11:1
   |
10 | 1. **pytest-json-reportのインストール**:
11 |    - 確認している仮想環境もしくはDocker環境がアクティブな状態で、以下のコマンドを実行します。
   | ^^^
12 |
13 |      ```bash
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/doc_turn2.py:11:38
   |
10 | 1. **pytest-json-reportのインストール**:
11 |    - 確認している仮想環境もしくはDocker環境がアクティブな状態で、以下のコマンドを実行します。
   |                                                                ^^
12 |
13 |      ```bash
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/doc_turn2.py:11:52
   |
10 | 1. **pytest-json-reportのインストール**:
11 |    - 確認している仮想環境もしくはDocker環境がアクティブな状態で、以下のコマンドを実行します。
   |                                                                                            ^^
12 |
13 |      ```bash
   |

invalid-syntax: Expected a statement
  --> generated_code/doc_turn2.py:11:53
   |
10 | 1. **pytest-json-reportのインストール**:
11 |    - 確認している仮想環境もしくはDocker環境がアクティブな状態で、以下のコマンドを実行します。
   |                                                                                              ^
12 |
13 |      ```bash
   |

invalid-syntax: Unexpected indentation
  --> generated_code/doc_turn2.py:13:1
   |
11 |    - 確認している仮想環境もしくはDocker環境がアクティブな状態で、以下のコマンドを実行します。
12 |
13 |      ```bash
   | ^^^^^
14 |      pip install pytest-json-report
15 |      ```
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn2.py:13:6
   |
11 |    - 確認している仮想環境もしくはDocker環境がアクティブな状態で、以下のコマンドを実行します。
12 |
13 |      ```bash
   |      ^
14 |      pip install pytest-json-report
15 |      ```
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn2.py:13:7
   |
11 |    - 確認している仮想環境もしくはDocker環境がアクティブな状態で、以下のコマンドを実行します。
12 |
13 |      ```bash
   |       ^
14 |      pip install pytest-json-report
15 |      ```
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn2.py:13:8
   |
11 |    - 確認している仮想環境もしくはDocker環境がアクティブな状態で、以下のコマンドを実行します。
12 |
13 |      ```bash
   |        ^
14 |      pip install pytest-json-report
15 |      ```
   |

invalid-syntax: Simple statements must be separated by newlines or semicolons
  --> generated_code/doc_turn2.py:14:10
   |
13 |      ```bash
14 |      pip install pytest-json-report
   |          ^^^^^^^
15 |      ```
   |

invalid-syntax: Simple statements must be separated by newlines or semicolons
  --> generated_code/doc_turn2.py:14:18
   |
13 |      ```bash
14 |      pip install pytest-json-report
   |                  ^^^^^^
15 |      ```
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn2.py:15:6
   |
13 |      ```bash
14 |      pip install pytest-json-report
15 |      ```
   |      ^
16 |
17 |    - 仮想環境を使用している場合は、必ずその環境をアクティブにしたうえでインストールを行ってください。例えば、`source venv/bin/activate`                                                   …
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn2.py:15:7
   |
13 |      ```bash
14 |      pip install pytest-json-report
15 |      ```
   |       ^
16 |
17 |    - 仮想環境を使用している場合は、必ずその環境をアクティブにしたうえでインストールを行ってください。例えば、`source venv/bin/activate`                                                   …
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn2.py:15:8
   |
13 |      ```bash
14 |      pip install pytest-json-report
15 |      ```
   |        ^
16 |
17 |    - 仮想環境を使用している場合は、必ずその環境をアクティブにしたうえでインストールを行ってください。例えば、`source venv/bin/activate`                                                   …
   |

invalid-syntax: Expected a statement
  --> generated_code/doc_turn2.py:15:9
   |
13 |      ```bash
14 |      pip install pytest-json-report
15 |      ```
   |         ^
16 |
17 |    - 仮想環境を使用している場合は、必ずその環境をアクティブにしたうえでインストールを行ってください。例えば、`source venv/bin/activate`                                                   …
   |

invalid-syntax: Expected a statement
  --> generated_code/doc_turn2.py:17:4
   |
15 |      ```
16 |
17 |    - 仮想環境を使用している場合は、必ずその環境をアクティブにしたうえでインストールを行ってください。例えば、`source venv/bin/activate`                                                   …
   |    ^
18 |
19 | 2. **pytestコマンドの確認**:
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/doc_turn2.py:17:20
   |
15 |      ```
16 |
17 |    - 仮想環境を使用している場合は、必ずその環境をアクティブにしたうえでインストールを行ってください。例えば、`source venv/bin/activate`                                                   …
   |                                  ^^
18 |
19 | 2. **pytestコマンドの確認**:
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/doc_turn2.py:17:53
   |
15 |      ```
16 |
17 |    - 仮想環境を使用している場合は、必ずその環境をアクティブにしたうえでインストールを行ってください。例えば、`source venv/bin/activate`                                                   …
   |                                                                                                    ^^
18 |
19 | 2. **pytestコマンドの確認**:
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/doc_turn2.py:17:57
   |
15 |      ```
16 |
17 |    - 仮想環境を使用している場合は、必ずその環境をアクティブにしたうえでインストールを行ってください。例えば、`source venv/bin/activate`                                                   …
   |                                                                                                            ^^
18 |
19 | 2. **pytestコマンドの確認**:
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn2.py:17:58
   |
15 |      ```
16 |
17 |    - 仮想環境を使用している場合は、必ずその環境をアクティブにしたうえでインストールを行ってください。例えば、`source venv/bin/activate`                                                   …
   |                                                                                                              ^
18 |
19 | 2. **pytestコマンドの確認**:
   |

invalid-syntax: Simple statements must be separated by newlines or semicolons
  --> generated_code/doc_turn2.py:17:66
   |
15 |      ```
16 |
17 |    - 仮想環境を使用している場合は、必ずその環境をアクティブにしたうえでインストールを行ってください。例えば、`source venv/bin/activate`                                                   …
   |                                                                                                                      ^^^^
18 |
19 | 2. **pytestコマンドの確認**:
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn2.py:17:83
   |
15 | …
16 | …
17 | …v/bin/activate` のようなコマンドで仮想環境をアクティブにします。
   |                ^
18 | …
19 | …
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/doc_turn2.py:17:108
   |
15 | …
16 | …
17 | …
   ^^
18 | …
19 | …
   |

invalid-syntax: Expected a statement
  --> generated_code/doc_turn2.py:17:109
   |
15 | …
16 | …
17 | …
   | ^
18 | …
19 | …
   |

invalid-syntax: Expected a statement
  --> generated_code/doc_turn2.py:19:1
   |
17 |    - 仮想環境を使用している場合は、必ずその環境をアクティブにしたうえでインストールを行ってください。例えば、`source venv/bin/activate`                                                   …
18 |
19 | 2. **pytestコマンドの確認**:
   | ^
20 |    - 記載されたコマンドで、テストを実行します。オプション `--json-report` と `--json-report-file` を指定することで、テスト結果がJSON形                                          …
   |

invalid-syntax: Invalid annotated assignment target
  --> generated_code/doc_turn2.py:19:1
   |
17 |    - 仮想環境を使用している場合は、必ずその環境をアクティブにしたうえでインストールを行ってください。例えば、`source venv/bin/activate`                                                   …
18 |
19 | 2. **pytestコマンドの確認**:
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^
20 |    - 記載されたコマンドで、テストを実行します。オプション `--json-report` と `--json-report-file` を指定することで、テスト結果がJSON形                                          …
   |

invalid-syntax: Expected an expression
  --> generated_code/doc_turn2.py:19:21
   |
17 |    - 仮想環境を使用している場合は、必ずその環境をアクティブにしたうえでインストールを行ってください。例えば、`source venv/bin/activate`                                                   …
18 |
19 | 2. **pytestコマンドの確認**:
   |                            ^
20 |    - 記載されたコマンドで、テストを実行します。オプション `--json-report` と `--json-report-file` を指定することで、テスト結果がJSON形                                          …
   |

invalid-syntax: Expected an expression
  --> generated_code/doc_turn2.py:19:22
   |
17 |    - 仮想環境を使用している場合は、必ずその環境をアクティブにしたうえでインストールを行ってください。例えば、`source venv/bin/activate`                                                   …
18 |
19 | 2. **pytestコマンドの確認**:
   |                             ^
20 |    - 記載されたコマンドで、テストを実行します。オプション `--json-report` と `--json-report-file` を指定することで、テスト結果がJSON形                                          …
   |

invalid-syntax: Unexpected indentation
  --> generated_code/doc_turn2.py:20:1
   |
19 | 2. **pytestコマンドの確認**:
20 |    - 記載されたコマンドで、テストを実行します。オプション `--json-report` と `--json-report-file` を指定することで、テスト結果がJSON形                                          …
   | ^^^
21 |
22 |      ```bash
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/doc_turn2.py:20:16
   |
19 | 2. **pytestコマンドの確認**:
20 |    - 記載されたコマンドで、テストを実行します。オプション `--json-report` と `--json-report-file` を指定することで、テスト結果がJSON形                                          …
   |                          ^^
21 |
22 |      ```bash
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/doc_turn2.py:20:26
   |
19 | 2. **pytestコマンドの確認**:
20 |    - 記載されたコマンドで、テストを実行します。オプション `--json-report` と `--json-report-file` を指定することで、テスト結果がJSON形                                          …
   |                                              ^^
21 |
22 |      ```bash
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn2.py:20:33
   |
19 | 2. **pytestコマンドの確認**:
20 |    - 記載されたコマンドで、テストを実行します。オプション `--json-report` と `--json-report-file` を指定することで、テスト結果がJSON形                                          …
   |                                                           ^
21 |
22 |      ```bash
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn2.py:20:47
   |
19 | 2. **pytestコマンドの確認**:
20 |    - 記載されたコマンドで、テストを実行します。オプション `--json-report` と `--json-report-file` を指定することで、テスト結果がJSON形                                          …
   |                                                                         ^
21 |
22 |      ```bash
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn2.py:20:51
   |
19 | 2. **pytestコマンドの確認**:
20 |    - 記載されたコマンドで、テストを実行します。オプション `--json-report` と `--json-report-file` を指定することで、テスト結果がJSON形                                          …
   |                                                                              ^
21 |
22 |      ```bash
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn2.py:20:70
   |
19 | 2. **pytestコマンドの確認**:
20 |    - 記載されたコマンドで、テストを実行します。オプション `--json-report` と `--json-report-file` を指定することで、テスト結果がJSON形                                          …
   |                                                                                                 ^
21 |
22 |      ```bash
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/doc_turn2.py:20:80
   |
19 | 2. **pytestコマンドの確認**:
20 |    - 記載されたコマンドで、テストを実行します。オプション `--json-report` と `--json-report-file` を指定することで、テスト結果がJSON形                                          …
   |                                                                                                                   ^^
21 |
22 |      ```bash
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/doc_turn2.py:20:107
   |
19 | …
20 | …に保存されます。
   |                 ^^
21 | …
22 | …
   |

invalid-syntax: Expected a statement
  --> generated_code/doc_turn2.py:20:108
   |
19 | …
20 | …保存されます。
   |                 ^
21 | …
22 | …
   |

invalid-syntax: Unexpected indentation
  --> generated_code/doc_turn2.py:22:1
   |
20 |    - 記載されたコマンドで、テストを実行します。オプション `--json-report` と `--json-report-file` を指定することで、テスト結果がJSON形                                          …
21 |
22 |      ```bash
   | ^^^^^
23 |      pytest --json-report --json-report-file=./generated_code/pytest_result.json
24 |      ```
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn2.py:22:6
   |
20 |    - 記載されたコマンドで、テストを実行します。オプション `--json-report` と `--json-report-file` を指定することで、テスト結果がJSON形                                          …
21 |
22 |      ```bash
   |      ^
23 |      pytest --json-report --json-report-file=./generated_code/pytest_result.json
24 |      ```
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn2.py:22:7
   |
20 |    - 記載されたコマンドで、テストを実行します。オプション `--json-report` と `--json-report-file` を指定することで、テスト結果がJSON形                                          …
21 |
22 |      ```bash
   |       ^
23 |      pytest --json-report --json-report-file=./generated_code/pytest_result.json
24 |      ```
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn2.py:22:8
   |
20 |    - 記載されたコマンドで、テストを実行します。オプション `--json-report` と `--json-report-file` を指定することで、テスト結果がJSON形                                          …
21 |
22 |      ```bash
   |        ^
23 |      pytest --json-report --json-report-file=./generated_code/pytest_result.json
24 |      ```
   |

invalid-syntax: Invalid assignment target
  --> generated_code/doc_turn2.py:23:6
   |
22 |      ```bash
23 |      pytest --json-report --json-report-file=./generated_code/pytest_result.json
   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
24 |      ```
   |

invalid-syntax: Expected an expression
  --> generated_code/doc_turn2.py:23:46
   |
22 |      ```bash
23 |      pytest --json-report --json-report-file=./generated_code/pytest_result.json
   |                                              ^
24 |      ```
   |

invalid-syntax: Expected an identifier
  --> generated_code/doc_turn2.py:23:47
   |
22 |      ```bash
23 |      pytest --json-report --json-report-file=./generated_code/pytest_result.json
   |                                               ^
24 |      ```
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn2.py:24:6
   |
22 |      ```bash
23 |      pytest --json-report --json-report-file=./generated_code/pytest_result.json
24 |      ```
   |      ^
25 |
26 |    - `./generated_code/` が存在することを確認してください。そのディレクトリが存在していない場合、テスト実行前にディレクトリを作成する必                                                      …
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn2.py:24:7
   |
22 |      ```bash
23 |      pytest --json-report --json-report-file=./generated_code/pytest_result.json
24 |      ```
   |       ^
25 |
26 |    - `./generated_code/` が存在することを確認してください。そのディレクトリが存在していない場合、テスト実行前にディレクトリを作成する必                                                      …
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn2.py:24:8
   |
22 |      ```bash
23 |      pytest --json-report --json-report-file=./generated_code/pytest_result.json
24 |      ```
   |        ^
25 |
26 |    - `./generated_code/` が存在することを確認してください。そのディレクトリが存在していない場合、テスト実行前にディレクトリを作成する必                                                      …
   |

invalid-syntax: Expected a statement
  --> generated_code/doc_turn2.py:24:9
   |
22 |      ```bash
23 |      pytest --json-report --json-report-file=./generated_code/pytest_result.json
24 |      ```
   |         ^
25 |
26 |    - `./generated_code/` が存在することを確認してください。そのディレクトリが存在していない場合、テスト実行前にディレクトリを作成する必                                                      …
   |

invalid-syntax: Expected a statement
  --> generated_code/doc_turn2.py:26:4
   |
24 |      ```
25 |
26 |    - `./generated_code/` が存在することを確認してください。そのディレクトリが存在していない場合、テスト実行前にディレクトリを作成する必                                                      …
   |    ^
27 |
28 | 3. **プラグインの確認と復旧策**:
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn2.py:26:6
   |
24 |      ```
25 |
26 |    - `./generated_code/` が存在することを確認してください。そのディレクトリが存在していない場合、テスト実行前にディレクトリを作成する必                                                      …
   |      ^
27 |
28 | 3. **プラグインの確認と復旧策**:
   |

invalid-syntax: Expected a statement
  --> generated_code/doc_turn2.py:26:7
   |
24 |      ```
25 |
26 |    - `./generated_code/` が存在することを確認してください。そのディレクトリが存在していない場合、テスト実行前にディレクトリを作成する必                                                      …
   |       ^
27 |
28 | 3. **プラグインの確認と復旧策**:
   |

invalid-syntax: Expected a statement
  --> generated_code/doc_turn2.py:26:8
   |
24 |      ```
25 |
26 |    - `./generated_code/` が存在することを確認してください。そのディレクトリが存在していない場合、テスト実行前にディレクトリを作成する必                                                      …
   |        ^
27 |
28 | 3. **プラグインの確認と復旧策**:
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn2.py:26:24
   |
24 |      ```
25 |
26 |    - `./generated_code/` が存在することを確認してください。そのディレクトリが存在していない場合、テスト実行前にディレクトリを作成する必                                                      …
   |                        ^
27 |
28 | 3. **プラグインの確認と復旧策**:
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/doc_turn2.py:26:42
   |
24 |      ```
25 |
26 |    - `./generated_code/` が存在することを確認してください。そのディレクトリが存在していない場合、テスト実行前にディレクトリを作成する必                                                      …
   |                                                          ^^
27 |
28 | 3. **プラグインの確認と復旧策**:
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/doc_turn2.py:26:61
   |
24 |      ```
25 |
26 |    - `./generated_code/` が存在することを確認してください。そのディレクトリが存在していない場合、テスト実行前にディレクトリを作成する必                                                      …
   |                                                                                                ^^
27 |
28 | 3. **プラグインの確認と復旧策**:
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/doc_turn2.py:26:87
   |
24 | …
25 | …
26 | …あります。
   |           ^^
27 | …
28 | …
   |

invalid-syntax: Expected a statement
  --> generated_code/doc_turn2.py:26:88
   |
24 | …
25 | …
26 | …ります。
   |           ^
27 | …
28 | …
   |

invalid-syntax: Expected a statement
  --> generated_code/doc_turn2.py:28:1
   |
26 |    - `./generated_code/` が存在することを確認してください。そのディレクトリが存在していない場合、テスト実行前にディレクトリを作成する必                                                      …
27 |
28 | 3. **プラグインの確認と復旧策**:
   | ^
29 |    - 必要なプラグインやモジュールがインストールされているか、不足しているパッケージがないかを確認します。`pip list` でインストールされ                                                          …
   |

invalid-syntax: Invalid annotated assignment target
  --> generated_code/doc_turn2.py:28:1
   |
26 |    - `./generated_code/` が存在することを確認してください。そのディレクトリが存在していない場合、テスト実行前にディレクトリを作成する必                                                      …
27 |
28 | 3. **プラグインの確認と復旧策**:
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
29 |    - 必要なプラグインやモジュールがインストールされているか、不足しているパッケージがないかを確認します。`pip list` でインストールされ                                                          …
   |

invalid-syntax: Expected an expression
  --> generated_code/doc_turn2.py:28:20
   |
26 |    - `./generated_code/` が存在することを確認してください。そのディレクトリが存在していない場合、テスト実行前にディレクトリを作成する必                                                      …
27 |
28 | 3. **プラグインの確認と復旧策**:
   |                                ^
29 |    - 必要なプラグインやモジュールがインストールされているか、不足しているパッケージがないかを確認します。`pip list` でインストールされ                                                          …
   |

invalid-syntax: Expected an expression
  --> generated_code/doc_turn2.py:28:21
   |
26 |    - `./generated_code/` が存在することを確認してください。そのディレクトリが存在していない場合、テスト実行前にディレクトリを作成する必                                                      …
27 |
28 | 3. **プラグインの確認と復旧策**:
   |                                 ^
29 |    - 必要なプラグインやモジュールがインストールされているか、不足しているパッケージがないかを確認します。`pip list` でインストールされ                                                          …
   |

invalid-syntax: Unexpected indentation
  --> generated_code/doc_turn2.py:29:1
   |
28 | 3. **プラグインの確認と復旧策**:
29 |    - 必要なプラグインやモジュールがインストールされているか、不足しているパッケージがないかを確認します。`pip list` でインストールされ                                                          …
   | ^^^
30 |
31 |    - Docker環境で実行している場合、Dockerfileもしくはdocker-compose.yml内で、`pytest-json-report` がインストールされるように設定を追加                                    …
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/doc_turn2.py:29:33
   |
28 | 3. **プラグインの確認と復旧策**:
29 |    - 必要なプラグインやモジュールがインストールされているか、不足しているパッケージがないかを確認します。`pip list` でインストールされ                                                          …
   |                                                            ^^
30 |
31 |    - Docker環境で実行している場合、Dockerfileもしくはdocker-compose.yml内で、`pytest-json-report` がインストールされるように設定を追加                                    …
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/doc_turn2.py:29:55
   |
28 | 3. **プラグインの確認と復旧策**:
29 |    - 必要なプラグインやモジュールがインストールされているか、不足しているパッケージがないかを確認します。`pip list` でインストールされ                                                          …
   |                                                                                                        ^^
30 |
31 |    - Docker環境で実行している場合、Dockerfileもしくはdocker-compose.yml内で、`pytest-json-report` がインストールされるように設定を追加                                    …
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn2.py:29:56
   |
28 | 3. **プラグインの確認と復旧策**:
29 |    - 必要なプラグインやモジュールがインストールされているか、不足しているパッケージがないかを確認します。`pip list` でインストールされ                                                          …
   |                                                                                                          ^
30 |
31 |    - Docker環境で実行している場合、Dockerfileもしくはdocker-compose.yml内で、`pytest-json-report` がインストールされるように設定を追加                                    …
   |

invalid-syntax: Simple statements must be separated by newlines or semicolons
  --> generated_code/doc_turn2.py:29:61
   |
28 | 3. **プラグインの確認と復旧策**:
29 |    - 必要なプラグインやモジュールがインストールされているか、不足しているパッケージがないかを確認します。`pip list` でインストールされ                                                          …
   |                                                                                                               ^^^^
30 |
31 |    - Docker環境で実行している場合、Dockerfileもしくはdocker-compose.yml内で、`pytest-json-report` がインストールされるように設定を追加                                    …
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn2.py:29:65
   |
28 | 3. **プラグインの確認と復旧策**:
29 |    - 必要なプラグインやモジュールがインストールされているか、不足しているパッケージがないかを確認します。`pip list` でインストールされ                                                          …
   |                                                                                                                   ^
30 |
31 |    - Docker環境で実行している場合、Dockerfileもしくはdocker-compose.yml内で、`pytest-json-report` がインストールされるように設定を追加                                    …
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/doc_turn2.py:29:90
   |
28 | …
29 | …-json-report` が含まれているか確認してください。
^  |
30 | …
31 | …してください。
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn2.py:29:91
   |
28 | …
29 | …json-report` が含まれているか確認してください。
^  |
30 | …
31 | …てください。
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn2.py:29:110
   |
28 | …
29 | …るか確認してください。
^  |
30 | …
31 | …
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/doc_turn2.py:29:128
   |
28 | …
29 | …
   ^^
30 | …
31 | …
   |

invalid-syntax: Expected a statement
  --> generated_code/doc_turn2.py:29:129
   |
28 | …
29 | …
   | ^
30 | …
31 | …
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/doc_turn2.py:31:23
   |
29 |    - 必要なプラグインやモジュールがインストールされているか、不足しているパッケージがないかを確認します。`pip list` でインストールされ                                                          …
30 |
31 |    - Docker環境で実行している場合、Dockerfileもしくはdocker-compose.yml内で、`pytest-json-report` がインストールされるように設定を追加                                    …
   |                                  ^^
32 |
33 | 4. **テスト実行のログ確認**:
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/doc_turn2.py:31:58
   |
29 |    - 必要なプラグインやモジュールがインストールされているか、不足しているパッケージがないかを確認します。`pip list` でインストールされ                                                          …
30 |
31 |    - Docker環境で実行している場合、Dockerfileもしくはdocker-compose.yml内で、`pytest-json-report` がインストールされるように設定を追加                                    …
   |                                                                            ^^
32 |
33 | 4. **テスト実行のログ確認**:
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn2.py:31:59
   |
29 |    - 必要なプラグインやモジュールがインストールされているか、不足しているパッケージがないかを確認します。`pip list` でインストールされ                                                          …
30 |
31 |    - Docker環境で実行している場合、Dockerfileもしくはdocker-compose.yml内で、`pytest-json-report` がインストールされるように設定を追加                                    …
   |                                                                              ^
32 |
33 | 4. **テスト実行のログ確認**:
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn2.py:31:78
   |
29 |    - 必要なプラグインやモジュールがインストールされているか、不足しているパッケージがないかを確認します。`pip list` でインストールされ                                                          …
30 |
31 |    - Docker環境で実行している場合、Dockerfileもしくはdocker-compose.yml内で、`pytest-json-report` がインストールされるように設定を追加                                    …
   |                                                                                                 ^
32 |
33 | 4. **テスト実行のログ確認**:
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/doc_turn2.py:31:104
   |
29 | …ージを一覧表示し、`pytest-json-report` が含まれているか確認してください。
30 | …
31 | …ンストールされるように設定を追加してください。
   |                                               ^^
32 | …
33 | …
   |

invalid-syntax: Expected a statement
  --> generated_code/doc_turn2.py:31:105
   |
29 | …ジを一覧表示し、`pytest-json-report` が含まれているか確認してください。
30 | …
31 | …ストールされるように設定を追加してください。
   |                                               ^
32 | …
33 | …
   |

invalid-syntax: Expected a statement
  --> generated_code/doc_turn2.py:33:1
   |
31 |    - Docker環境で実行している場合、Dockerfileもしくはdocker-compose.yml内で、`pytest-json-report` がインストールされるように設定を追加                                    …
32 |
33 | 4. **テスト実行のログ確認**:
   | ^
34 |    - テスト実行後に生成されたJSONファイルを確認します。テストの詳細結果や、成功・失敗の情報が出力されています。
35 |    - もしエラーが続く場合は、`pytest`のログを細かく確認し、エラーメッセージに基づいて問題を特定します。
   |

invalid-syntax: Invalid annotated assignment target
  --> generated_code/doc_turn2.py:33:1
   |
31 |    - Docker環境で実行している場合、Dockerfileもしくはdocker-compose.yml内で、`pytest-json-report` がインストールされるように設定を追加                                    …
32 |
33 | 4. **テスト実行のログ確認**:
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^
34 |    - テスト実行後に生成されたJSONファイルを確認します。テストの詳細結果や、成功・失敗の情報が出力されています。
35 |    - もしエラーが続く場合は、`pytest`のログを細かく確認し、エラーメッセージに基づいて問題を特定します。
   |

invalid-syntax: Expected an expression
  --> generated_code/doc_turn2.py:33:18
   |
31 |    - Docker環境で実行している場合、Dockerfileもしくはdocker-compose.yml内で、`pytest-json-report` がインストールされるように設定を追加                                    …
32 |
33 | 4. **テスト実行のログ確認**:
   |                            ^
34 |    - テスト実行後に生成されたJSONファイルを確認します。テストの詳細結果や、成功・失敗の情報が出力されています。
35 |    - もしエラーが続く場合は、`pytest`のログを細かく確認し、エラーメッセージに基づいて問題を特定します。
   |

invalid-syntax: Expected an expression
  --> generated_code/doc_turn2.py:33:19
   |
31 |    - Docker環境で実行している場合、Dockerfileもしくはdocker-compose.yml内で、`pytest-json-report` がインストールされるように設定を追加                                    …
32 |
33 | 4. **テスト実行のログ確認**:
   |                             ^
34 |    - テスト実行後に生成されたJSONファイルを確認します。テストの詳細結果や、成功・失敗の情報が出力されています。
35 |    - もしエラーが続く場合は、`pytest`のログを細かく確認し、エラーメッセージに基づいて問題を特定します。
   |

invalid-syntax: Unexpected indentation
  --> generated_code/doc_turn2.py:34:1
   |
33 | 4. **テスト実行のログ確認**:
34 |    - テスト実行後に生成されたJSONファイルを確認します。テストの詳細結果や、成功・失敗の情報が出力されています。
   | ^^^
35 |    - もしエラーが続く場合は、`pytest`のログを細かく確認し、エラーメッセージに基づいて問題を特定します。
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/doc_turn2.py:34:32
   |
33 | 4. **テスト実行のログ確認**:
34 |    - テスト実行後に生成されたJSONファイルを確認します。テストの詳細結果や、成功・失敗の情報が出力されています。
   |                                                      ^^
35 |    - もしエラーが続く場合は、`pytest`のログを細かく確認し、エラーメッセージに基づいて問題を特定します。
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/doc_turn2.py:34:42
   |
33 | 4. **テスト実行のログ確認**:
34 |    - テスト実行後に生成されたJSONファイルを確認します。テストの詳細結果や、成功・失敗の情報が出力されています。
   |                                                                          ^^
35 |    - もしエラーが続く場合は、`pytest`のログを細かく確認し、エラーメッセージに基づいて問題を特定します。
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/doc_turn2.py:34:60
   |
33 | 4. **テスト実行のログ確認**:
34 |    - テスト実行後に生成されたJSONファイルを確認します。テストの詳細結果や、成功・失敗の情報が出力されています。
   |                                                                                                              ^^
35 |    - もしエラーが続く場合は、`pytest`のログを細かく確認し、エラーメッセージに基づいて問題を特定します。
   |

invalid-syntax: Expected a statement
  --> generated_code/doc_turn2.py:34:61
   |
33 | 4. **テスト実行のログ確認**:
34 |    - テスト実行後に生成されたJSONファイルを確認します。テストの詳細結果や、成功・失敗の情報が出力されています。
   |                                                                                                                ^
35 |    - もしエラーが続く場合は、`pytest`のログを細かく確認し、エラーメッセージに基づいて問題を特定します。
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/doc_turn2.py:35:17
   |
33 | 4. **テスト実行のログ確認**:
34 |    - テスト実行後に生成されたJSONファイルを確認します。テストの詳細結果や、成功・失敗の情報が出力されています。
35 |    - もしエラーが続く場合は、`pytest`のログを細かく確認し、エラーメッセージに基づいて問題を特定します。
   |                            ^^
36 |
37 | これらの手順に従うことで、JSON形式のレポートを生成するための環境が整うはずです。問題が解決しない場合は、エラーメッセージやログをもう一                                                                …
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn2.py:35:18
   |
33 | 4. **テスト実行のログ確認**:
34 |    - テスト実行後に生成されたJSONファイルを確認します。テストの詳細結果や、成功・失敗の情報が出力されています。
35 |    - もしエラーが続く場合は、`pytest`のログを細かく確認し、エラーメッセージに基づいて問題を特定します。
   |                              ^
36 |
37 | これらの手順に従うことで、JSON形式のレポートを生成するための環境が整うはずです。問題が解決しない場合は、エラーメッセージやログをもう一                                                                …
   |

invalid-syntax: Got unexpected token `
  --> generated_code/doc_turn2.py:35:25
   |
33 | 4. **テスト実行のログ確認**:
34 |    - テスト実行後に生成されたJSONファイルを確認します。テストの詳細結果や、成功・失敗の情報が出力されています。
35 |    - もしエラーが続く場合は、`pytest`のログを細かく確認し、エラーメッセージに基づいて問題を特定します。
   |                                     ^
36 |
37 | これらの手順に従うことで、JSON形式のレポートを生成するための環境が整うはずです。問題が解決しない場合は、エラーメッセージやログをもう一                                                                …
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/doc_turn2.py:35:36
   |
33 | 4. **テスト実行のログ確認**:
34 |    - テスト実行後に生成されたJSONファイルを確認します。テストの詳細結果や、成功・失敗の情報が出力されています。
35 |    - もしエラーが続く場合は、`pytest`のログを細かく確認し、エラーメッセージに基づいて問題を特定します。
   |                                                          ^^
36 |
37 | これらの手順に従うことで、JSON形式のレポートを生成するための環境が整うはずです。問題が解決しない場合は、エラーメッセージやログをもう一                                                                …
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/doc_turn2.py:35:58
   |
33 | 4. **テスト実行のログ確認**:
34 |    - テスト実行後に生成されたJSONファイルを確認します。テストの詳細結果や、成功・失敗の情報が出力されています。
35 |    - もしエラーが続く場合は、`pytest`のログを細かく確認し、エラーメッセージに基づいて問題を特定します。
   |                                                                                                      ^^
36 |
37 | これらの手順に従うことで、JSON形式のレポートを生成するための環境が整うはずです。問題が解決しない場合は、エラーメッセージやログをもう一                                                                …
   |

invalid-syntax: Expected a statement
  --> generated_code/doc_turn2.py:35:59
   |
33 | 4. **テスト実行のログ確認**:
34 |    - テスト実行後に生成されたJSONファイルを確認します。テストの詳細結果や、成功・失敗の情報が出力されています。
35 |    - もしエラーが続く場合は、`pytest`のログを細かく確認し、エラーメッセージに基づいて問題を特定します。
   |                                                                                                        ^
36 |
37 | これらの手順に従うことで、JSON形式のレポートを生成するための環境が整うはずです。問題が解決しない場合は、エラーメッセージやログをもう一                                                                …
   |

invalid-syntax: Expected a statement
  --> generated_code/doc_turn2.py:37:1
   |
35 |    - もしエラーが続く場合は、`pytest`のログを細かく確認し、エラーメッセージに基づいて問題を特定します。
36 |
37 | これらの手順に従うことで、JSON形式のレポートを生成するための環境が整うはずです。問題が解決しない場合は、エラーメッセージやログをもう一                                                                …
   | ^^
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/doc_turn2.py:37:13
   |
35 |    - もしエラーが続く場合は、`pytest`のログを細かく確認し、エラーメッセージに基づいて問題を特定します。
36 |
37 | これらの手順に従うことで、JSON形式のレポートを生成するための環境が整うはずです。問題が解決しない場合は、エラーメッセージやログをもう一                                                                …
   |                         ^^
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/doc_turn2.py:37:42
   |
35 |    - もしエラーが続く場合は、`pytest`のログを細かく確認し、エラーメッセージに基づいて問題を特定します。
36 |
37 | これらの手順に従うことで、JSON形式のレポートを生成するための環境が整うはずです。問題が解決しない場合は、エラーメッセージやログをもう一                                                                …
   |                                                                               ^^
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/doc_turn2.py:37:54
   |
35 |    - もしエラーが続く場合は、`pytest`のログを細かく確認し、エラーメッセージに基づいて問題を特定します。
36 |
37 | これらの手順に従うことで、JSON形式のレポートを生成するための環境が整うはずです。問題が解決しない場合は、エラーメッセージやログをもう一                                                                …
   |                                                                                                       ^^
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/doc_turn2.py:37:74
   |
35 | …
36 | …
37 | …な問題箇所を特定することが重要です。また、環境ごとのパッケージ管理や依存関係は、Dockerや仮想環境内での整合性を保つことが鍵となります                                                               …
^  |
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/doc_turn2.py:37:95
   |
35 | …
36 | …
37 | …ckerや仮想環境内での整合性を保つことが鍵となります。
^  |
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/doc_turn2.py:37:98
   |
35 | …
36 | …
37 | …想環境内での整合性を保つことが鍵となります。
^  |
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/doc_turn2.py:37:117
   |
35 | …
36 | …
37 | …
^  |
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/doc_turn2.py:37:147
   |
35 | …
36 | …
37 | …
   ^^
   |

invalid-syntax: Expected a statement
  --> generated_code/doc_turn2.py:37:148
   |
35 | …
36 | …
37 | …
   | ^
   |

invalid-syntax: Invalid annotated assignment target
 --> generated_code/doc_turn3.py:1:1
  |
1 | 1. **日本語コメントの英語化**:
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |

invalid-syntax: Expected an expression
 --> generated_code/doc_turn3.py:1:19
  |
1 | 1. **日本語コメントの英語化**:
  |                              ^
  |

invalid-syntax: Expected an expression
 --> generated_code/doc_turn3.py:1:20
  |
1 | 1. **日本語コメントの英語化**:
  |                               ^
  |

invalid-syntax: Invalid annotated assignment target
 --> generated_code/doc_turn3.py:5:1
  |
5 | 2. **ファイルの文字コード確認**:
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
6 |
7 | 3. **コード全体の確認**:
  |

invalid-syntax: Expected an expression
 --> generated_code/doc_turn3.py:5:20
  |
5 | 2. **ファイルの文字コード確認**:
  |                                ^
6 |
7 | 3. **コード全体の確認**:
  |

invalid-syntax: Expected an expression
 --> generated_code/doc_turn3.py:5:21
  |
5 | 2. **ファイルの文字コード確認**:
  |                                 ^
6 |
7 | 3. **コード全体の確認**:
  |

invalid-syntax: Invalid annotated assignment target
 --> generated_code/doc_turn3.py:7:1
  |
5 | 2. **ファイルの文字コード確認**:
6 |
7 | 3. **コード全体の確認**:
  | ^^^^^^^^^^^^^^^^^^^^^^^
8 |
9 | 4. **自動化ツールの使用**:
  |

invalid-syntax: Expected an expression
 --> generated_code/doc_turn3.py:7:16
  |
5 | 2. **ファイルの文字コード確認**:
6 |
7 | 3. **コード全体の確認**:
  |                        ^
8 |
9 | 4. **自動化ツールの使用**:
  |

invalid-syntax: Expected an expression
 --> generated_code/doc_turn3.py:7:17
  |
5 | 2. **ファイルの文字コード確認**:
6 |
7 | 3. **コード全体の確認**:
  |                         ^
8 |
9 | 4. **自動化ツールの使用**:
  |

invalid-syntax: Invalid annotated assignment target
  --> generated_code/doc_turn3.py:9:1
   |
 7 | 3. **コード全体の確認**:
 8 |
 9 | 4. **自動化ツールの使用**:
   | ^^^^^^^^^^^^^^^^^^^^^^^^^
10 |
11 | 5. **テストを実行**:
   |

invalid-syntax: Expected an expression
  --> generated_code/doc_turn3.py:9:17
   |
 7 | 3. **コード全体の確認**:
 8 |
 9 | 4. **自動化ツールの使用**:
   |                          ^
10 |
11 | 5. **テストを実行**:
   |

invalid-syntax: Expected an expression
  --> generated_code/doc_turn3.py:9:18
   |
 7 | 3. **コード全体の確認**:
 8 |
 9 | 4. **自動化ツールの使用**:
   |                           ^
10 |
11 | 5. **テストを実行**:
   |

invalid-syntax: Invalid annotated assignment target
  --> generated_code/doc_turn3.py:11:1
   |
 9 | 4. **自動化ツールの使用**:
10 |
11 | 5. **テストを実行**:
   | ^^^^^^^^^^^^^^^^^^^
   |

invalid-syntax: Expected an expression
  --> generated_code/doc_turn3.py:11:14
   |
 9 | 4. **自動化ツールの使用**:
10 |
11 | 5. **テストを実行**:
   |                    ^
   |

invalid-syntax: Expected an expression
  --> generated_code/doc_turn3.py:11:15
   |
 9 | 4. **自動化ツールの使用**:
10 |
11 | 5. **テストを実行**:
   |                     ^
   |

invalid-syntax: Invalid annotated assignment target
 --> generated_code/doc_turn4.py:1:1
  |
1 | 1. **ソースファイルの確認**:
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^
2 |
3 | 2. **日本語コメントの取扱**:
  |

invalid-syntax: Expected an expression
 --> generated_code/doc_turn4.py:1:18
  |
1 | 1. **ソースファイルの確認**:
  |                            ^
2 |
3 | 2. **日本語コメントの取扱**:
  |

invalid-syntax: Expected an expression
 --> generated_code/doc_turn4.py:1:19
  |
1 | 1. **ソースファイルの確認**:
  |                             ^
2 |
3 | 2. **日本語コメントの取扱**:
  |

invalid-syntax: Invalid annotated assignment target
 --> generated_code/doc_turn4.py:3:1
  |
1 | 1. **ソースファイルの確認**:
2 |
3 | 2. **日本語コメントの取扱**:
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^
4 |
5 | 3. **シンタックスエラーの修正**:
  |

invalid-syntax: Expected an expression
 --> generated_code/doc_turn4.py:3:18
  |
1 | 1. **ソースファイルの確認**:
2 |
3 | 2. **日本語コメントの取扱**:
  |                            ^
4 |
5 | 3. **シンタックスエラーの修正**:
  |

invalid-syntax: Expected an expression
 --> generated_code/doc_turn4.py:3:19
  |
1 | 1. **ソースファイルの確認**:
2 |
3 | 2. **日本語コメントの取扱**:
  |                             ^
4 |
5 | 3. **シンタックスエラーの修正**:
  |

invalid-syntax: Invalid annotated assignment target
 --> generated_code/doc_turn4.py:5:1
  |
3 | 2. **日本語コメントの取扱**:
4 |
5 | 3. **シンタックスエラーの修正**:
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
6 |
7 | 4. **再テスト**:
  |

invalid-syntax: Expected an expression
 --> generated_code/doc_turn4.py:5:20
  |
3 | 2. **日本語コメントの取扱**:
4 |
5 | 3. **シンタックスエラーの修正**:
  |                                ^
6 |
7 | 4. **再テスト**:
  |

invalid-syntax: Expected an expression
 --> generated_code/doc_turn4.py:5:21
  |
3 | 2. **日本語コメントの取扱**:
4 |
5 | 3. **シンタックスエラーの修正**:
  |                                 ^
6 |
7 | 4. **再テスト**:
  |

invalid-syntax: Invalid annotated assignment target
 --> generated_code/doc_turn4.py:7:1
  |
5 | 3. **シンタックスエラーの修正**:
6 |
7 | 4. **再テスト**:
  | ^^^^^^^^^^^^^^^
8 |
9 | 5. **静的解析ツールの使用**:
  |

invalid-syntax: Expected an expression
 --> generated_code/doc_turn4.py:7:12
  |
5 | 3. **シンタックスエラーの修正**:
6 |
7 | 4. **再テスト**:
  |                ^
8 |
9 | 5. **静的解析ツールの使用**:
  |

invalid-syntax: Expected an expression
 --> generated_code/doc_turn4.py:7:13
  |
5 | 3. **シンタックスエラーの修正**:
6 |
7 | 4. **再テスト**:
  |                 ^
8 |
9 | 5. **静的解析ツールの使用**:
  |

invalid-syntax: Invalid annotated assignment target
 --> generated_code/doc_turn4.py:9:1
  |
7 | 4. **再テスト**:
8 |
9 | 5. **静的解析ツールの使用**:
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |

invalid-syntax: Expected an expression
 --> generated_code/doc_turn4.py:9:18
  |
7 | 4. **再テスト**:
8 |
9 | 5. **静的解析ツールの使用**:
  |                            ^
  |

invalid-syntax: Expected an expression
 --> generated_code/doc_turn4.py:9:19
  |
7 | 4. **再テスト**:
8 |
9 | 5. **静的解析ツールの使用**:
  |                             ^
  |

F821 Undefined name `ccxt`
 --> generated_code/example.py:5:16
  |
3 | def fetch_market_data():
4 |     # Binance取引所のインスタンスを作成します
5 |     exchange = ccxt.binance()
  |                ^^^^
6 |     
7 |     # 'USD/JPY'ペアの1分足のOHLCVデータを取得します
  |

invalid-syntax: Got unexpected token `
  --> generated_code/feature_engineering.py:8:1
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | ```python
   | ^
 9 | # feature_engineering.py
10 | import pandas as pd
   |

invalid-syntax: Got unexpected token `
  --> generated_code/feature_engineering.py:8:2
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | ```python
   |  ^
 9 | # feature_engineering.py
10 | import pandas as pd
   |

invalid-syntax: Got unexpected token `
  --> generated_code/feature_engineering.py:8:3
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | ```python
   |   ^
 9 | # feature_engineering.py
10 | import pandas as pd
   |

invalid-syntax: Got unexpected token `
  --> generated_code/feature_engineering.py:18:1
   |
16 |     # Implement feature engineering logic here
17 |     features.to_csv(FEATURES_PATH, index=False)
18 | ```
   | ^
   |

invalid-syntax: Got unexpected token `
  --> generated_code/feature_engineering.py:18:2
   |
16 |     # Implement feature engineering logic here
17 |     features.to_csv(FEATURES_PATH, index=False)
18 | ```
   |  ^
   |

invalid-syntax: Got unexpected token `
  --> generated_code/feature_engineering.py:18:3
   |
16 |     # Implement feature engineering logic here
17 |     features.to_csv(FEATURES_PATH, index=False)
18 | ```
   |   ^
   |

invalid-syntax: Expected a statement
  --> generated_code/feature_engineering.py:18:4
   |
16 |     # Implement feature engineering logic here
17 |     features.to_csv(FEATURES_PATH, index=False)
18 | ```
   |    ^
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/implement_turn1.py:8:33
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | 設計概要をNoctriaガイドラインや設計プロセスと関連付けつつ、戦略の詳細についての説明を進めてまいります。協力して開発を進めるために、戦略                                                               …
   |                                                          ^^
 9 |
10 | ## 設計詳細
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/implement_turn1.py:8:55
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | 設計概要をNoctriaガイドラインや設計プロセスと関連付けつつ、戦略の詳細についての説明を進めてまいります。協力して開発を進めるために、戦略                                                               …
   |                                                                                                      ^^
 9 |
10 | ## 設計詳細
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/implement_turn1.py:8:69
   |
 6 | …
 7 | …
 8 | …るために、戦略の各要素がどのようにガイドラインに従っているかを強調しました。
   |           ^^
 9 | …
10 | …
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/implement_turn1.py:8:102
   |
 6 | …
 7 | …
 8 | …
   ^^
 9 | …
10 | …
   |

invalid-syntax: Expected a statement
  --> generated_code/implement_turn1.py:8:103
   |
 6 | …
 7 | …
 8 | …
   | ^
 9 | …
10 | …
   |

invalid-syntax: Invalid annotated assignment target
  --> generated_code/implement_turn1.py:15:1
   |
14 | #### トレンドフォロー戦略
15 | - **目的**: トレンドフォロー戦略により、相場のトレンドを追随し、リスクを最小限に抑えつつ利益の最大化を狙います。
   | ^^^^^^^^^^
16 | - **ツール**: 移動平均線（SMA）を用い、価格の長短期トレンドを捉えて売買シグナルを生成。
   |

invalid-syntax: Expected an expression
  --> generated_code/implement_turn1.py:15:3
   |
14 | #### トレンドフォロー戦略
15 | - **目的**: トレンドフォロー戦略により、相場のトレンドを追随し、リスクを最小限に抑えつつ利益の最大化を狙います。
   |   ^^
16 | - **ツール**: 移動平均線（SMA）を用い、価格の長短期トレンドを捉えて売買シグナルを生成。
   |

invalid-syntax: Expected an expression
  --> generated_code/implement_turn1.py:15:9
   |
14 | #### トレンドフォロー戦略
15 | - **目的**: トレンドフォロー戦略により、相場のトレンドを追随し、リスクを最小限に抑えつつ利益の最大化を狙います。
   |           ^
16 | - **ツール**: 移動平均線（SMA）を用い、価格の長短期トレンドを捉えて売買シグナルを生成。
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/implement_turn1.py:15:24
   |
14 | #### トレンドフォロー戦略
15 | - **目的**: トレンドフォロー戦略により、相場のトレンドを追随し、リスクを最小限に抑えつつ利益の最大化を狙います。
   |                                       ^^
16 | - **ツール**: 移動平均線（SMA）を用い、価格の長短期トレンドを捉えて売買シグナルを生成。
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/implement_turn1.py:15:36
   |
14 | #### トレンドフォロー戦略
15 | - **目的**: トレンドフォロー戦略により、相場のトレンドを追随し、リスクを最小限に抑えつつ利益の最大化を狙います。
   |                                                               ^^
16 | - **ツール**: 移動平均線（SMA）を用い、価格の長短期トレンドを捉えて売買シグナルを生成。
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/implement_turn1.py:15:60
   |
14 | #### トレンドフォロー戦略
15 | - **目的**: トレンドフォロー戦略により、相場のトレンドを追随し、リスクを最小限に抑えつつ利益の最大化を狙います。
   |                                                                                                               ^^
16 | - **ツール**: 移動平均線（SMA）を用い、価格の長短期トレンドを捉えて売買シグナルを生成。
   |

invalid-syntax: Expected a statement
  --> generated_code/implement_turn1.py:15:61
   |
14 | #### トレンドフォロー戦略
15 | - **目的**: トレンドフォロー戦略により、相場のトレンドを追随し、リスクを最小限に抑えつつ利益の最大化を狙います。
   |                                                                                                                 ^
16 | - **ツール**: 移動平均線（SMA）を用い、価格の長短期トレンドを捉えて売買シグナルを生成。
   |

invalid-syntax: Invalid annotated assignment target
  --> generated_code/implement_turn1.py:16:1
   |
14 | #### トレンドフォロー戦略
15 | - **目的**: トレンドフォロー戦略により、相場のトレンドを追随し、リスクを最小限に抑えつつ利益の最大化を狙います。
16 | - **ツール**: 移動平均線（SMA）を用い、価格の長短期トレンドを捉えて売買シグナルを生成。
   | ^^^^^^^^^^^^
17 |
18 | #### リスク管理
   |

invalid-syntax: Expected an expression
  --> generated_code/implement_turn1.py:16:3
   |
14 | #### トレンドフォロー戦略
15 | - **目的**: トレンドフォロー戦略により、相場のトレンドを追随し、リスクを最小限に抑えつつ利益の最大化を狙います。
16 | - **ツール**: 移動平均線（SMA）を用い、価格の長短期トレンドを捉えて売買シグナルを生成。
   |   ^^
17 |
18 | #### リスク管理
   |

invalid-syntax: Expected an expression
  --> generated_code/implement_turn1.py:16:10
   |
14 | #### トレンドフォロー戦略
15 | - **目的**: トレンドフォロー戦略により、相場のトレンドを追随し、リスクを最小限に抑えつつ利益の最大化を狙います。
16 | - **ツール**: 移動平均線（SMA）を用い、価格の長短期トレンドを捉えて売買シグナルを生成。
   |             ^
17 |
18 | #### リスク管理
   |

invalid-syntax: Got unexpected token （
  --> generated_code/implement_turn1.py:16:17
   |
14 | #### トレンドフォロー戦略
15 | - **目的**: トレンドフォロー戦略により、相場のトレンドを追随し、リスクを最小限に抑えつつ利益の最大化を狙います。
16 | - **ツール**: 移動平均線（SMA）を用い、価格の長短期トレンドを捉えて売買シグナルを生成。
   |                         ^^
17 |
18 | #### リスク管理
   |

invalid-syntax: Got unexpected token ）
  --> generated_code/implement_turn1.py:16:21
   |
14 | #### トレンドフォロー戦略
15 | - **目的**: トレンドフォロー戦略により、相場のトレンドを追随し、リスクを最小限に抑えつつ利益の最大化を狙います。
16 | - **ツール**: 移動平均線（SMA）を用い、価格の長短期トレンドを捉えて売買シグナルを生成。
   |                              ^^
17 |
18 | #### リスク管理
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/implement_turn1.py:16:25
   |
14 | #### トレンドフォロー戦略
15 | - **目的**: トレンドフォロー戦略により、相場のトレンドを追随し、リスクを最小限に抑えつつ利益の最大化を狙います。
16 | - **ツール**: 移動平均線（SMA）を用い、価格の長短期トレンドを捉えて売買シグナルを生成。
   |                                      ^^
17 |
18 | #### リスク管理
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/implement_turn1.py:16:49
   |
14 | #### トレンドフォロー戦略
15 | - **目的**: トレンドフォロー戦略により、相場のトレンドを追随し、リスクを最小限に抑えつつ利益の最大化を狙います。
16 | - **ツール**: 移動平均線（SMA）を用い、価格の長短期トレンドを捉えて売買シグナルを生成。
   |                                                                                      ^^
17 |
18 | #### リスク管理
   |

invalid-syntax: Expected a statement
  --> generated_code/implement_turn1.py:16:50
   |
14 | #### トレンドフォロー戦略
15 | - **目的**: トレンドフォロー戦略により、相場のトレンドを追随し、リスクを最小限に抑えつつ利益の最大化を狙います。
16 | - **ツール**: 移動平均線（SMA）を用い、価格の長短期トレンドを捉えて売買シグナルを生成。
   |                                                                                        ^
17 |
18 | #### リスク管理
   |

invalid-syntax: Invalid annotated assignment target
  --> generated_code/implement_turn1.py:19:1
   |
18 | #### リスク管理
19 | - **ストップロスと利益確定手法**: 目標価格に対する一定比率の変動で売買シグナルを出し、損失の限定と利益の確保を図ります。
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
20 | - **実装**: `risk_management.py`で実装されています。
   |

invalid-syntax: Expected an expression
  --> generated_code/implement_turn1.py:19:3
   |
18 | #### リスク管理
19 | - **ストップロスと利益確定手法**: 目標価格に対する一定比率の変動で売買シグナルを出し、損失の限定と利益の確保を図ります。
   |   ^^
20 | - **実装**: `risk_management.py`で実装されています。
   |

invalid-syntax: Expected an expression
  --> generated_code/implement_turn1.py:19:20
   |
18 | #### リスク管理
19 | - **ストップロスと利益確定手法**: 目標価格に対する一定比率の変動で売買シグナルを出し、損失の限定と利益の確保を図ります。
   |                                 ^
20 | - **実装**: `risk_management.py`で実装されています。
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/implement_turn1.py:19:47
   |
18 | #### リスク管理
19 | - **ストップロスと利益確定手法**: 目標価格に対する一定比率の変動で売買シグナルを出し、損失の限定と利益の確保を図ります。
   |                                                                                     ^^
20 | - **実装**: `risk_management.py`で実装されています。
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/implement_turn1.py:19:64
   |
18 | #### リスク管理
19 | - **ストップロスと利益確定手法**: 目標価格に対する一定比率の変動で売買シグナルを出し、損失の限定と利益の確保を図ります。
   |                                                                                                                       ^^
20 | - **実装**: `risk_management.py`で実装されています。
   |

invalid-syntax: Expected a statement
  --> generated_code/implement_turn1.py:19:65
   |
18 | #### リスク管理
19 | - **ストップロスと利益確定手法**: 目標価格に対する一定比率の変動で売買シグナルを出し、損失の限定と利益の確保を図ります。
   |                                                                                                                         ^
20 | - **実装**: `risk_management.py`で実装されています。
   |

invalid-syntax: Invalid annotated assignment target
  --> generated_code/implement_turn1.py:20:1
   |
18 | #### リスク管理
19 | - **ストップロスと利益確定手法**: 目標価格に対する一定比率の変動で売買シグナルを出し、損失の限定と利益の確保を図ります。
20 | - **実装**: `risk_management.py`で実装されています。
   | ^^^^^^^^^^
21 |
22 | ### 2. 使用技術
   |

invalid-syntax: Expected an expression
  --> generated_code/implement_turn1.py:20:3
   |
18 | #### リスク管理
19 | - **ストップロスと利益確定手法**: 目標価格に対する一定比率の変動で売買シグナルを出し、損失の限定と利益の確保を図ります。
20 | - **実装**: `risk_management.py`で実装されています。
   |   ^^
21 |
22 | ### 2. 使用技術
   |

invalid-syntax: Expected an expression
  --> generated_code/implement_turn1.py:20:9
   |
18 | #### リスク管理
19 | - **ストップロスと利益確定手法**: 目標価格に対する一定比率の変動で売買シグナルを出し、損失の限定と利益の確保を図ります。
20 | - **実装**: `risk_management.py`で実装されています。
   |           ^
21 |
22 | ### 2. 使用技術
   |

invalid-syntax: Got unexpected token `
  --> generated_code/implement_turn1.py:20:11
   |
18 | #### リスク管理
19 | - **ストップロスと利益確定手法**: 目標価格に対する一定比率の変動で売買シグナルを出し、損失の限定と利益の確保を図ります。
20 | - **実装**: `risk_management.py`で実装されています。
   |             ^
21 |
22 | ### 2. 使用技術
   |

invalid-syntax: Got unexpected token `
  --> generated_code/implement_turn1.py:20:30
   |
18 | #### リスク管理
19 | - **ストップロスと利益確定手法**: 目標価格に対する一定比率の変動で売買シグナルを出し、損失の限定と利益の確保を図ります。
20 | - **実装**: `risk_management.py`で実装されています。
   |                                ^
21 |
22 | ### 2. 使用技術
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/implement_turn1.py:20:40
   |
18 | #### リスク管理
19 | - **ストップロスと利益確定手法**: 目標価格に対する一定比率の変動で売買シグナルを出し、損失の限定と利益の確保を図ります。
20 | - **実装**: `risk_management.py`で実装されています。
   |                                                   ^^
21 |
22 | ### 2. 使用技術
   |

invalid-syntax: Expected a statement
  --> generated_code/implement_turn1.py:20:41
   |
18 | #### リスク管理
19 | - **ストップロスと利益確定手法**: 目標価格に対する一定比率の変動で売買シグナルを出し、損失の限定と利益の確保を図ります。
20 | - **実装**: `risk_management.py`で実装されています。
   |                                                     ^
21 |
22 | ### 2. 使用技術
   |

invalid-syntax: Invalid annotated assignment target
  --> generated_code/implement_turn1.py:25:1
   |
24 | #### 技術スタック
25 | - **Pythonとライブラリ**: データ操作にpandas、数値計算にnumpy、テクニカル分析にta-lib。
   | ^^^^^^^^^^^^^^^^^^^^^^^^
26 | - **フレームワーク**: Docker上でAirflowを運用し、スケジューリングとトレード履歴の管理。
27 | - **GUI管理**: noctria_guiにより、システムの稼働状況を一元管理。
   |

invalid-syntax: Expected an expression
  --> generated_code/implement_turn1.py:25:3
   |
24 | #### 技術スタック
25 | - **Pythonとライブラリ**: データ操作にpandas、数値計算にnumpy、テクニカル分析にta-lib。
   |   ^^
26 | - **フレームワーク**: Docker上でAirflowを運用し、スケジューリングとトレード履歴の管理。
27 | - **GUI管理**: noctria_guiにより、システムの稼働状況を一元管理。
   |

invalid-syntax: Expected an expression
  --> generated_code/implement_turn1.py:25:19
   |
24 | #### 技術スタック
25 | - **Pythonとライブラリ**: データ操作にpandas、数値計算にnumpy、テクニカル分析にta-lib。
   |                         ^
26 | - **フレームワーク**: Docker上でAirflowを運用し、スケジューリングとトレード履歴の管理。
27 | - **GUI管理**: noctria_guiにより、システムの稼働状況を一元管理。
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/implement_turn1.py:25:33
   |
24 | #### 技術スタック
25 | - **Pythonとライブラリ**: データ操作にpandas、数値計算にnumpy、テクニカル分析にta-lib。
   |                                             ^^
26 | - **フレームワーク**: Docker上でAirflowを運用し、スケジューリングとトレード履歴の管理。
27 | - **GUI管理**: noctria_guiにより、システムの稼働状況を一元管理。
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/implement_turn1.py:25:44
   |
24 | #### 技術スタック
25 | - **Pythonとライブラリ**: データ操作にpandas、数値計算にnumpy、テクニカル分析にta-lib。
   |                                                              ^^
26 | - **フレームワーク**: Docker上でAirflowを運用し、スケジューリングとトレード履歴の管理。
27 | - **GUI管理**: noctria_guiにより、システムの稼働状況を一元管理。
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/implement_turn1.py:25:59
   |
24 | #### 技術スタック
25 | - **Pythonとライブラリ**: データ操作にpandas、数値計算にnumpy、テクニカル分析にta-lib。
   |                                                                                      ^^
26 | - **フレームワーク**: Docker上でAirflowを運用し、スケジューリングとトレード履歴の管理。
27 | - **GUI管理**: noctria_guiにより、システムの稼働状況を一元管理。
   |

invalid-syntax: Expected a statement
  --> generated_code/implement_turn1.py:25:60
   |
24 | #### 技術スタック
25 | - **Pythonとライブラリ**: データ操作にpandas、数値計算にnumpy、テクニカル分析にta-lib。
   |                                                                                        ^
26 | - **フレームワーク**: Docker上でAirflowを運用し、スケジューリングとトレード履歴の管理。
27 | - **GUI管理**: noctria_guiにより、システムの稼働状況を一元管理。
   |

invalid-syntax: Invalid annotated assignment target
  --> generated_code/implement_turn1.py:26:1
   |
24 | #### 技術スタック
25 | - **Pythonとライブラリ**: データ操作にpandas、数値計算にnumpy、テクニカル分析にta-lib。
26 | - **フレームワーク**: Docker上でAirflowを運用し、スケジューリングとトレード履歴の管理。
   | ^^^^^^^^^^^^^^^^^^^^
27 | - **GUI管理**: noctria_guiにより、システムの稼働状況を一元管理。
   |

invalid-syntax: Expected an expression
  --> generated_code/implement_turn1.py:26:3
   |
24 | #### 技術スタック
25 | - **Pythonとライブラリ**: データ操作にpandas、数値計算にnumpy、テクニカル分析にta-lib。
26 | - **フレームワーク**: Docker上でAirflowを運用し、スケジューリングとトレード履歴の管理。
   |   ^^
27 | - **GUI管理**: noctria_guiにより、システムの稼働状況を一元管理。
   |

invalid-syntax: Expected an expression
  --> generated_code/implement_turn1.py:26:14
   |
24 | #### 技術スタック
25 | - **Pythonとライブラリ**: データ操作にpandas、数値計算にnumpy、テクニカル分析にta-lib。
26 | - **フレームワーク**: Docker上でAirflowを運用し、スケジューリングとトレード履歴の管理。
   |                     ^
27 | - **GUI管理**: noctria_guiにより、システムの稼働状況を一元管理。
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/implement_turn1.py:26:35
   |
24 | #### 技術スタック
25 | - **Pythonとライブラリ**: データ操作にpandas、数値計算にnumpy、テクニカル分析にta-lib。
26 | - **フレームワーク**: Docker上でAirflowを運用し、スケジューリングとトレード履歴の管理。
   |                                                ^^
27 | - **GUI管理**: noctria_guiにより、システムの稼働状況を一元管理。
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/implement_turn1.py:26:54
   |
24 | #### 技術スタック
25 | - **Pythonとライブラリ**: データ操作にpandas、数値計算にnumpy、テクニカル分析にta-lib。
26 | - **フレームワーク**: Docker上でAirflowを運用し、スケジューリングとトレード履歴の管理。
   |                                                                                      ^^
27 | - **GUI管理**: noctria_guiにより、システムの稼働状況を一元管理。
   |

invalid-syntax: Expected a statement
  --> generated_code/implement_turn1.py:26:55
   |
24 | #### 技術スタック
25 | - **Pythonとライブラリ**: データ操作にpandas、数値計算にnumpy、テクニカル分析にta-lib。
26 | - **フレームワーク**: Docker上でAirflowを運用し、スケジューリングとトレード履歴の管理。
   |                                                                                        ^
27 | - **GUI管理**: noctria_guiにより、システムの稼働状況を一元管理。
   |

invalid-syntax: Invalid annotated assignment target
  --> generated_code/implement_turn1.py:27:1
   |
25 | - **Pythonとライブラリ**: データ操作にpandas、数値計算にnumpy、テクニカル分析にta-lib。
26 | - **フレームワーク**: Docker上でAirflowを運用し、スケジューリングとトレード履歴の管理。
27 | - **GUI管理**: noctria_guiにより、システムの稼働状況を一元管理。
   | ^^^^^^^^^^^^^
28 |
29 | ### 3. 実装ファイル
   |

invalid-syntax: Expected an expression
  --> generated_code/implement_turn1.py:27:3
   |
25 | - **Pythonとライブラリ**: データ操作にpandas、数値計算にnumpy、テクニカル分析にta-lib。
26 | - **フレームワーク**: Docker上でAirflowを運用し、スケジューリングとトレード履歴の管理。
27 | - **GUI管理**: noctria_guiにより、システムの稼働状況を一元管理。
   |   ^^
28 |
29 | ### 3. 実装ファイル
   |

invalid-syntax: Expected an expression
  --> generated_code/implement_turn1.py:27:12
   |
25 | - **Pythonとライブラリ**: データ操作にpandas、数値計算にnumpy、テクニカル分析にta-lib。
26 | - **フレームワーク**: Docker上でAirflowを運用し、スケジューリングとトレード履歴の管理。
27 | - **GUI管理**: noctria_guiにより、システムの稼働状況を一元管理。
   |              ^
28 |
29 | ### 3. 実装ファイル
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/implement_turn1.py:27:28
   |
25 | - **Pythonとライブラリ**: データ操作にpandas、数値計算にnumpy、テクニカル分析にta-lib。
26 | - **フレームワーク**: Docker上でAirflowを運用し、スケジューリングとトレード履歴の管理。
27 | - **GUI管理**: noctria_guiにより、システムの稼働状況を一元管理。
   |                                 ^^
28 |
29 | ### 3. 実装ファイル
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/implement_turn1.py:27:43
   |
25 | - **Pythonとライブラリ**: データ操作にpandas、数値計算にnumpy、テクニカル分析にta-lib。
26 | - **フレームワーク**: Docker上でAirflowを運用し、スケジューリングとトレード履歴の管理。
27 | - **GUI管理**: noctria_guiにより、システムの稼働状況を一元管理。
   |                                                               ^^
28 |
29 | ### 3. 実装ファイル
   |

invalid-syntax: Expected a statement
  --> generated_code/implement_turn1.py:27:44
   |
25 | - **Pythonとライブラリ**: データ操作にpandas、数値計算にnumpy、テクニカル分析にta-lib。
26 | - **フレームワーク**: Docker上でAirflowを運用し、スケジューリングとトレード履歴の管理。
27 | - **GUI管理**: noctria_guiにより、システムの稼働状況を一元管理。
   |                                                                 ^
28 |
29 | ### 3. 実装ファイル
   |

invalid-syntax: Invalid annotated assignment target
  --> generated_code/implement_turn1.py:32:1
   |
31 | #### `strategy.py`
32 | - **目的**: トレードシグナル生成の中心を担います。  
   | ^^^^^^^^^^
33 | - **詳細**: 短期移動平均(SMA 20)と長期移動平均(SMA 50)を算出し、そのクロスオーバーで売買シグナルを生成。
   |

invalid-syntax: Expected an expression
  --> generated_code/implement_turn1.py:32:3
   |
31 | #### `strategy.py`
32 | - **目的**: トレードシグナル生成の中心を担います。  
   |   ^^
33 | - **詳細**: 短期移動平均(SMA 20)と長期移動平均(SMA 50)を算出し、そのクロスオーバーで売買シグナルを生成。
   |

invalid-syntax: Expected an expression
  --> generated_code/implement_turn1.py:32:9
   |
31 | #### `strategy.py`
32 | - **目的**: トレードシグナル生成の中心を担います。  
   |           ^
33 | - **詳細**: 短期移動平均(SMA 20)と長期移動平均(SMA 50)を算出し、そのクロスオーバーで売買シグナルを生成。
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/implement_turn1.py:32:29
   |
31 | #### `strategy.py`
32 | - **目的**: トレードシグナル生成の中心を担います。  
   |                                                 ^^
33 | - **詳細**: 短期移動平均(SMA 20)と長期移動平均(SMA 50)を算出し、そのクロスオーバーで売買シグナルを生成。
   |

invalid-syntax: Expected a statement
  --> generated_code/implement_turn1.py:32:32
   |
31 | #### `strategy.py`
32 | - **目的**: トレードシグナル生成の中心を担います。  
   |                                                     ^
33 | - **詳細**: 短期移動平均(SMA 20)と長期移動平均(SMA 50)を算出し、そのクロスオーバーで売買シグナルを生成。
   |

invalid-syntax: Invalid annotated assignment target
  --> generated_code/implement_turn1.py:33:1
   |
31 | #### `strategy.py`
32 | - **目的**: トレードシグナル生成の中心を担います。  
33 | - **詳細**: 短期移動平均(SMA 20)と長期移動平均(SMA 50)を算出し、そのクロスオーバーで売買シグナルを生成。
   | ^^^^^^^^^^
34 |
35 | ```python
   |

invalid-syntax: Expected an expression
  --> generated_code/implement_turn1.py:33:3
   |
31 | #### `strategy.py`
32 | - **目的**: トレードシグナル生成の中心を担います。  
33 | - **詳細**: 短期移動平均(SMA 20)と長期移動平均(SMA 50)を算出し、そのクロスオーバーで売買シグナルを生成。
   |   ^^
34 |
35 | ```python
   |

invalid-syntax: Expected an expression
  --> generated_code/implement_turn1.py:33:9
   |
31 | #### `strategy.py`
32 | - **目的**: トレードシグナル生成の中心を担います。  
33 | - **詳細**: 短期移動平均(SMA 20)と長期移動平均(SMA 50)を算出し、そのクロスオーバーで売買シグナルを生成。
   |           ^
34 |
35 | ```python
   |

invalid-syntax: Expected ',', found int
  --> generated_code/implement_turn1.py:33:22
   |
31 | #### `strategy.py`
32 | - **目的**: トレードシグナル生成の中心を担います。  
33 | - **詳細**: 短期移動平均(SMA 20)と長期移動平均(SMA 50)を算出し、そのクロスオーバーで売買シグナルを生成。
   |                              ^^
34 |
35 | ```python
   |

invalid-syntax: Simple statements must be separated by newlines or semicolons
  --> generated_code/implement_turn1.py:33:25
   |
31 | #### `strategy.py`
32 | - **目的**: トレードシグナル生成の中心を担います。  
33 | - **詳細**: 短期移動平均(SMA 20)と長期移動平均(SMA 50)を算出し、そのクロスオーバーで売買シグナルを生成。
   |                                 ^^^^^^^^^^^^^^
34 |
35 | ```python
   |

invalid-syntax: Expected ',', found int
  --> generated_code/implement_turn1.py:33:37
   |
31 | #### `strategy.py`
32 | - **目的**: トレードシグナル生成の中心を担います。  
33 | - **詳細**: 短期移動平均(SMA 20)と長期移動平均(SMA 50)を算出し、そのクロスオーバーで売買シグナルを生成。
   |                                                    ^^
34 |
35 | ```python
   |

invalid-syntax: Simple statements must be separated by newlines or semicolons
  --> generated_code/implement_turn1.py:33:40
   |
31 | #### `strategy.py`
32 | - **目的**: トレードシグナル生成の中心を担います。  
33 | - **詳細**: 短期移動平均(SMA 20)と長期移動平均(SMA 50)を算出し、そのクロスオーバーで売買シグナルを生成。
   |                                                       ^^^^^^^^
34 |
35 | ```python
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/implement_turn1.py:33:44
   |
31 | #### `strategy.py`
32 | - **目的**: トレードシグナル生成の中心を担います。  
33 | - **詳細**: 短期移動平均(SMA 20)と長期移動平均(SMA 50)を算出し、そのクロスオーバーで売買シグナルを生成。
   |                                                               ^^
34 |
35 | ```python
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/implement_turn1.py:33:64
   |
31 | #### `strategy.py`
32 | - **目的**: トレードシグナル生成の中心を担います。  
33 | - **詳細**: 短期移動平均(SMA 20)と長期移動平均(SMA 50)を算出し、そのクロスオーバーで売買シグナルを生成。
   |                                                                                                       ^^
34 |
35 | ```python
   |

invalid-syntax: Expected a statement
  --> generated_code/implement_turn1.py:33:65
   |
31 | #### `strategy.py`
32 | - **目的**: トレードシグナル生成の中心を担います。  
33 | - **詳細**: 短期移動平均(SMA 20)と長期移動平均(SMA 50)を算出し、そのクロスオーバーで売買シグナルを生成。
   |                                                                                                         ^
34 |
35 | ```python
   |

invalid-syntax: Got unexpected token `
  --> generated_code/implement_turn1.py:35:1
   |
33 | - **詳細**: 短期移動平均(SMA 20)と長期移動平均(SMA 50)を算出し、そのクロスオーバーで売買シグナルを生成。
34 |
35 | ```python
   | ^
36 | import pandas as pd
37 | import numpy as np
   |

invalid-syntax: Got unexpected token `
  --> generated_code/implement_turn1.py:35:2
   |
33 | - **詳細**: 短期移動平均(SMA 20)と長期移動平均(SMA 50)を算出し、そのクロスオーバーで売買シグナルを生成。
34 |
35 | ```python
   |  ^
36 | import pandas as pd
37 | import numpy as np
   |

invalid-syntax: Got unexpected token `
  --> generated_code/implement_turn1.py:35:3
   |
33 | - **詳細**: 短期移動平均(SMA 20)と長期移動平均(SMA 50)を算出し、そのクロスオーバーで売買シグナルを生成。
34 |
35 | ```python
   |   ^
36 | import pandas as pd
37 | import numpy as np
   |

invalid-syntax: Got unexpected token `
  --> generated_code/implement_turn1.py:52:1
   |
51 |     return buy_signal, sell_signal
52 | ```
   | ^
53 |
54 | #### `risk_management.py`
   |

invalid-syntax: Got unexpected token `
  --> generated_code/implement_turn1.py:52:2
   |
51 |     return buy_signal, sell_signal
52 | ```
   |  ^
53 |
54 | #### `risk_management.py`
   |

invalid-syntax: Got unexpected token `
  --> generated_code/implement_turn1.py:52:3
   |
51 |     return buy_signal, sell_signal
52 | ```
   |   ^
53 |
54 | #### `risk_management.py`
   |

invalid-syntax: Expected a statement
  --> generated_code/implement_turn1.py:52:4
   |
51 |     return buy_signal, sell_signal
52 | ```
   |    ^
53 |
54 | #### `risk_management.py`
   |

invalid-syntax: Invalid annotated assignment target
  --> generated_code/implement_turn1.py:55:1
   |
54 | #### `risk_management.py`
55 | - **目的**: 取引でのリスクを管理し、ストップロスと利益確定判断を行う。
   | ^^^^^^^^^^
56 | - **詳細**: 特定の目標価格に基づき、現価格との比較で売買判断を実施。
   |

invalid-syntax: Expected an expression
  --> generated_code/implement_turn1.py:55:3
   |
54 | #### `risk_management.py`
55 | - **目的**: 取引でのリスクを管理し、ストップロスと利益確定判断を行う。
   |   ^^
56 | - **詳細**: 特定の目標価格に基づき、現価格との比較で売買判断を実施。
   |

invalid-syntax: Expected an expression
  --> generated_code/implement_turn1.py:55:9
   |
54 | #### `risk_management.py`
55 | - **目的**: 取引でのリスクを管理し、ストップロスと利益確定判断を行う。
   |           ^
56 | - **詳細**: 特定の目標価格に基づき、現価格との比較で売買判断を実施。
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/implement_turn1.py:55:22
   |
54 | #### `risk_management.py`
55 | - **目的**: 取引でのリスクを管理し、ストップロスと利益確定判断を行う。
   |                                   ^^
56 | - **詳細**: 特定の目標価格に基づき、現価格との比較で売買判断を実施。
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/implement_turn1.py:55:39
   |
54 | #### `risk_management.py`
55 | - **目的**: 取引でのリスクを管理し、ストップロスと利益確定判断を行う。
   |                                                                     ^^
56 | - **詳細**: 特定の目標価格に基づき、現価格との比較で売買判断を実施。
   |

invalid-syntax: Expected a statement
  --> generated_code/implement_turn1.py:55:40
   |
54 | #### `risk_management.py`
55 | - **目的**: 取引でのリスクを管理し、ストップロスと利益確定判断を行う。
   |                                                                       ^
56 | - **詳細**: 特定の目標価格に基づき、現価格との比較で売買判断を実施。
   |

invalid-syntax: Invalid annotated assignment target
  --> generated_code/implement_turn1.py:56:1
   |
54 | #### `risk_management.py`
55 | - **目的**: 取引でのリスクを管理し、ストップロスと利益確定判断を行う。
56 | - **詳細**: 特定の目標価格に基づき、現価格との比較で売買判断を実施。
   | ^^^^^^^^^^
57 |
58 | ```python
   |

invalid-syntax: Expected an expression
  --> generated_code/implement_turn1.py:56:3
   |
54 | #### `risk_management.py`
55 | - **目的**: 取引でのリスクを管理し、ストップロスと利益確定判断を行う。
56 | - **詳細**: 特定の目標価格に基づき、現価格との比較で売買判断を実施。
   |   ^^
57 |
58 | ```python
   |

invalid-syntax: Expected an expression
  --> generated_code/implement_turn1.py:56:9
   |
54 | #### `risk_management.py`
55 | - **目的**: 取引でのリスクを管理し、ストップロスと利益確定判断を行う。
56 | - **詳細**: 特定の目標価格に基づき、現価格との比較で売買判断を実施。
   |           ^
57 |
58 | ```python
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/implement_turn1.py:56:22
   |
54 | #### `risk_management.py`
55 | - **目的**: 取引でのリスクを管理し、ストップロスと利益確定判断を行う。
56 | - **詳細**: 特定の目標価格に基づき、現価格との比較で売買判断を実施。
   |                                   ^^
57 |
58 | ```python
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/implement_turn1.py:56:38
   |
54 | #### `risk_management.py`
55 | - **目的**: 取引でのリスクを管理し、ストップロスと利益確定判断を行う。
56 | - **詳細**: 特定の目標価格に基づき、現価格との比較で売買判断を実施。
   |                                                                   ^^
57 |
58 | ```python
   |

invalid-syntax: Expected a statement
  --> generated_code/implement_turn1.py:56:39
   |
54 | #### `risk_management.py`
55 | - **目的**: 取引でのリスクを管理し、ストップロスと利益確定判断を行う。
56 | - **詳細**: 特定の目標価格に基づき、現価格との比較で売買判断を実施。
   |                                                                     ^
57 |
58 | ```python
   |

invalid-syntax: Got unexpected token `
  --> generated_code/implement_turn1.py:58:1
   |
56 | - **詳細**: 特定の目標価格に基づき、現価格との比較で売買判断を実施。
57 |
58 | ```python
   | ^
59 | def risk_management(target_price, current_price):
60 |     """
   |

invalid-syntax: Got unexpected token `
  --> generated_code/implement_turn1.py:58:2
   |
56 | - **詳細**: 特定の目標価格に基づき、現価格との比較で売買判断を実施。
57 |
58 | ```python
   |  ^
59 | def risk_management(target_price, current_price):
60 |     """
   |

invalid-syntax: Got unexpected token `
  --> generated_code/implement_turn1.py:58:3
   |
56 | - **詳細**: 特定の目標価格に基づき、現価格との比較で売買判断を実施。
57 |
58 | ```python
   |   ^
59 | def risk_management(target_price, current_price):
60 |     """
   |

invalid-syntax: Got unexpected token `
  --> generated_code/implement_turn1.py:72:1
   |
70 |         return "take_profit"
71 |     return "hold"
72 | ```
   | ^
73 |
74 | #### `execution.py`
   |

invalid-syntax: Got unexpected token `
  --> generated_code/implement_turn1.py:72:2
   |
70 |         return "take_profit"
71 |     return "hold"
72 | ```
   |  ^
73 |
74 | #### `execution.py`
   |

invalid-syntax: Got unexpected token `
  --> generated_code/implement_turn1.py:72:3
   |
70 |         return "take_profit"
71 |     return "hold"
72 | ```
   |   ^
73 |
74 | #### `execution.py`
   |

invalid-syntax: Expected a statement
  --> generated_code/implement_turn1.py:72:4
   |
70 |         return "take_profit"
71 |     return "hold"
72 | ```
   |    ^
73 |
74 | #### `execution.py`
   |

invalid-syntax: Invalid annotated assignment target
  --> generated_code/implement_turn1.py:75:1
   |
74 | #### `execution.py`
75 | - **目的**: 取引シグナルに基づいた実際の注文を実行。
   | ^^^^^^^^^^
76 | - **詳細**: シグナルに応じた注文をsrc/core/king_noctria.pyへ送信。
   |

invalid-syntax: Expected an expression
  --> generated_code/implement_turn1.py:75:3
   |
74 | #### `execution.py`
75 | - **目的**: 取引シグナルに基づいた実際の注文を実行。
   |   ^^
76 | - **詳細**: シグナルに応じた注文をsrc/core/king_noctria.pyへ送信。
   |

invalid-syntax: Expected an expression
  --> generated_code/implement_turn1.py:75:9
   |
74 | #### `execution.py`
75 | - **目的**: 取引シグナルに基づいた実際の注文を実行。
   |           ^
76 | - **詳細**: シグナルに応じた注文をsrc/core/king_noctria.pyへ送信。
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/implement_turn1.py:75:30
   |
74 | #### `execution.py`
75 | - **目的**: 取引シグナルに基づいた実際の注文を実行。
   |                                                   ^^
76 | - **詳細**: シグナルに応じた注文をsrc/core/king_noctria.pyへ送信。
   |

invalid-syntax: Expected a statement
  --> generated_code/implement_turn1.py:75:31
   |
74 | #### `execution.py`
75 | - **目的**: 取引シグナルに基づいた実際の注文を実行。
   |                                                     ^
76 | - **詳細**: シグナルに応じた注文をsrc/core/king_noctria.pyへ送信。
   |

invalid-syntax: Invalid annotated assignment target
  --> generated_code/implement_turn1.py:76:1
   |
74 | #### `execution.py`
75 | - **目的**: 取引シグナルに基づいた実際の注文を実行。
76 | - **詳細**: シグナルに応じた注文をsrc/core/king_noctria.pyへ送信。
   | ^^^^^^^^^^
77 |
78 | ```python
   |

invalid-syntax: Expected an expression
  --> generated_code/implement_turn1.py:76:3
   |
74 | #### `execution.py`
75 | - **目的**: 取引シグナルに基づいた実際の注文を実行。
76 | - **詳細**: シグナルに応じた注文をsrc/core/king_noctria.pyへ送信。
   |   ^^
77 |
78 | ```python
   |

invalid-syntax: Expected an expression
  --> generated_code/implement_turn1.py:76:9
   |
74 | #### `execution.py`
75 | - **目的**: 取引シグナルに基づいた実際の注文を実行。
76 | - **詳細**: シグナルに応じた注文をsrc/core/king_noctria.pyへ送信。
   |           ^
77 |
78 | ```python
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/implement_turn1.py:76:49
   |
74 | #### `execution.py`
75 | - **目的**: 取引シグナルに基づいた実際の注文を実行。
76 | - **詳細**: シグナルに応じた注文をsrc/core/king_noctria.pyへ送信。
   |                                                                 ^^
77 |
78 | ```python
   |

invalid-syntax: Expected a statement
  --> generated_code/implement_turn1.py:76:50
   |
74 | #### `execution.py`
75 | - **目的**: 取引シグナルに基づいた実際の注文を実行。
76 | - **詳細**: シグナルに応じた注文をsrc/core/king_noctria.pyへ送信。
   |                                                                   ^
77 |
78 | ```python
   |

invalid-syntax: Got unexpected token `
  --> generated_code/implement_turn1.py:78:1
   |
76 | - **詳細**: シグナルに応じた注文をsrc/core/king_noctria.pyへ送信。
77 |
78 | ```python
   | ^
79 | def execute_order(signal):
80 |     """
   |

invalid-syntax: Got unexpected token `
  --> generated_code/implement_turn1.py:78:2
   |
76 | - **詳細**: シグナルに応じた注文をsrc/core/king_noctria.pyへ送信。
77 |
78 | ```python
   |  ^
79 | def execute_order(signal):
80 |     """
   |

invalid-syntax: Got unexpected token `
  --> generated_code/implement_turn1.py:78:3
   |
76 | - **詳細**: シグナルに応じた注文をsrc/core/king_noctria.pyへ送信。
77 |
78 | ```python
   |   ^
79 | def execute_order(signal):
80 |     """
   |

invalid-syntax: Got unexpected token `
  --> generated_code/implement_turn1.py:91:1
   |
89 |     elif signal == "take_profit":
90 |         pass
91 | ```
   | ^
92 |
93 | ### 4. ガイドライン準拠
   |

invalid-syntax: Got unexpected token `
  --> generated_code/implement_turn1.py:91:2
   |
89 |     elif signal == "take_profit":
90 |         pass
91 | ```
   |  ^
92 |
93 | ### 4. ガイドライン準拠
   |

invalid-syntax: Got unexpected token `
  --> generated_code/implement_turn1.py:91:3
   |
89 |     elif signal == "take_profit":
90 |         pass
91 | ```
   |   ^
92 |
93 | ### 4. ガイドライン準拠
   |

invalid-syntax: Expected a statement
  --> generated_code/implement_turn1.py:91:4
   |
89 |     elif signal == "take_profit":
90 |         pass
91 | ```
   |    ^
92 |
93 | ### 4. ガイドライン準拠
   |

invalid-syntax: Invalid annotated assignment target
  --> generated_code/implement_turn1.py:95:1
   |
93 | ### 4. ガイドライン準拠
94 |
95 | - **バージョン管理**: 各ファイルにバージョンとリリースノートを記録。
   | ^^^^^^^^^^^^^^^^^^^^
96 | - **説明責任コメント**: コード注釈を通じて、各処理の目的と理由を明示。
97 | - **セキュリティ考慮**: 取引API通信での暗号化と認証対策。
   |

invalid-syntax: Expected an expression
  --> generated_code/implement_turn1.py:95:3
   |
93 | ### 4. ガイドライン準拠
94 |
95 | - **バージョン管理**: 各ファイルにバージョンとリリースノートを記録。
   |   ^^
96 | - **説明責任コメント**: コード注釈を通じて、各処理の目的と理由を明示。
97 | - **セキュリティ考慮**: 取引API通信での暗号化と認証対策。
   |

invalid-syntax: Expected an expression
  --> generated_code/implement_turn1.py:95:14
   |
93 | ### 4. ガイドライン準拠
94 |
95 | - **バージョン管理**: 各ファイルにバージョンとリリースノートを記録。
   |                     ^
96 | - **説明責任コメント**: コード注釈を通じて、各処理の目的と理由を明示。
97 | - **セキュリティ考慮**: 取引API通信での暗号化と認証対策。
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/implement_turn1.py:95:38
   |
93 | ### 4. ガイドライン準拠
94 |
95 | - **バージョン管理**: 各ファイルにバージョンとリリースノートを記録。
   |                                                                   ^^
96 | - **説明責任コメント**: コード注釈を通じて、各処理の目的と理由を明示。
97 | - **セキュリティ考慮**: 取引API通信での暗号化と認証対策。
   |

invalid-syntax: Expected a statement
  --> generated_code/implement_turn1.py:95:39
   |
93 | ### 4. ガイドライン準拠
94 |
95 | - **バージョン管理**: 各ファイルにバージョンとリリースノートを記録。
   |                                                                     ^
96 | - **説明責任コメント**: コード注釈を通じて、各処理の目的と理由を明示。
97 | - **セキュリティ考慮**: 取引API通信での暗号化と認証対策。
   |

invalid-syntax: Invalid annotated assignment target
  --> generated_code/implement_turn1.py:96:1
   |
95 | - **バージョン管理**: 各ファイルにバージョンとリリースノートを記録。
96 | - **説明責任コメント**: コード注釈を通じて、各処理の目的と理由を明示。
   | ^^^^^^^^^^^^^^^^^^^^^^
97 | - **セキュリティ考慮**: 取引API通信での暗号化と認証対策。
98 | - **A/Bテスト**: 戦略の異なる実装をテストし、効果を比較。
   |

invalid-syntax: Expected an expression
  --> generated_code/implement_turn1.py:96:3
   |
95 | - **バージョン管理**: 各ファイルにバージョンとリリースノートを記録。
96 | - **説明責任コメント**: コード注釈を通じて、各処理の目的と理由を明示。
   |   ^^
97 | - **セキュリティ考慮**: 取引API通信での暗号化と認証対策。
98 | - **A/Bテスト**: 戦略の異なる実装をテストし、効果を比較。
   |

invalid-syntax: Expected an expression
  --> generated_code/implement_turn1.py:96:15
   |
95 | - **バージョン管理**: 各ファイルにバージョンとリリースノートを記録。
96 | - **説明責任コメント**: コード注釈を通じて、各処理の目的と理由を明示。
   |                       ^
97 | - **セキュリティ考慮**: 取引API通信での暗号化と認証対策。
98 | - **A/Bテスト**: 戦略の異なる実装をテストし、効果を比較。
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/implement_turn1.py:96:26
   |
95 | - **バージョン管理**: 各ファイルにバージョンとリリースノートを記録。
96 | - **説明責任コメント**: コード注釈を通じて、各処理の目的と理由を明示。
   |                                           ^^
97 | - **セキュリティ考慮**: 取引API通信での暗号化と認証対策。
98 | - **A/Bテスト**: 戦略の異なる実装をテストし、効果を比較。
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/implement_turn1.py:96:39
   |
95 | - **バージョン管理**: 各ファイルにバージョンとリリースノートを記録。
96 | - **説明責任コメント**: コード注釈を通じて、各処理の目的と理由を明示。
   |                                                                     ^^
97 | - **セキュリティ考慮**: 取引API通信での暗号化と認証対策。
98 | - **A/Bテスト**: 戦略の異なる実装をテストし、効果を比較。
   |

invalid-syntax: Expected a statement
  --> generated_code/implement_turn1.py:96:40
   |
95 | - **バージョン管理**: 各ファイルにバージョンとリリースノートを記録。
96 | - **説明責任コメント**: コード注釈を通じて、各処理の目的と理由を明示。
   |                                                                       ^
97 | - **セキュリティ考慮**: 取引API通信での暗号化と認証対策。
98 | - **A/Bテスト**: 戦略の異なる実装をテストし、効果を比較。
   |

invalid-syntax: Invalid annotated assignment target
  --> generated_code/implement_turn1.py:97:1
   |
95 | - **バージョン管理**: 各ファイルにバージョンとリリースノートを記録。
96 | - **説明責任コメント**: コード注釈を通じて、各処理の目的と理由を明示。
97 | - **セキュリティ考慮**: 取引API通信での暗号化と認証対策。
   | ^^^^^^^^^^^^^^^^^^^^^^
98 | - **A/Bテスト**: 戦略の異なる実装をテストし、効果を比較。
   |

invalid-syntax: Expected an expression
  --> generated_code/implement_turn1.py:97:3
   |
95 | - **バージョン管理**: 各ファイルにバージョンとリリースノートを記録。
96 | - **説明責任コメント**: コード注釈を通じて、各処理の目的と理由を明示。
97 | - **セキュリティ考慮**: 取引API通信での暗号化と認証対策。
   |   ^^
98 | - **A/Bテスト**: 戦略の異なる実装をテストし、効果を比較。
   |

invalid-syntax: Expected an expression
  --> generated_code/implement_turn1.py:97:15
   |
95 | - **バージョン管理**: 各ファイルにバージョンとリリースノートを記録。
96 | - **説明責任コメント**: コード注釈を通じて、各処理の目的と理由を明示。
97 | - **セキュリティ考慮**: 取引API通信での暗号化と認証対策。
   |                       ^
98 | - **A/Bテスト**: 戦略の異なる実装をテストし、効果を比較。
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/implement_turn1.py:97:34
   |
95 | - **バージョン管理**: 各ファイルにバージョンとリリースノートを記録。
96 | - **説明責任コメント**: コード注釈を通じて、各処理の目的と理由を明示。
97 | - **セキュリティ考慮**: 取引API通信での暗号化と認証対策。
   |                                                        ^^
98 | - **A/Bテスト**: 戦略の異なる実装をテストし、効果を比較。
   |

invalid-syntax: Expected a statement
  --> generated_code/implement_turn1.py:97:35
   |
95 | - **バージョン管理**: 各ファイルにバージョンとリリースノートを記録。
96 | - **説明責任コメント**: コード注釈を通じて、各処理の目的と理由を明示。
97 | - **セキュリティ考慮**: 取引API通信での暗号化と認証対策。
   |                                                          ^
98 | - **A/Bテスト**: 戦略の異なる実装をテストし、効果を比較。
   |

invalid-syntax: Invalid annotated assignment target
   --> generated_code/implement_turn1.py:98:1
    |
 96 | - **説明責任コメント**: コード注釈を通じて、各処理の目的と理由を明示。
 97 | - **セキュリティ考慮**: 取引API通信での暗号化と認証対策。
 98 | - **A/Bテスト**: 戦略の異なる実装をテストし、効果を比較。
    | ^^^^^^^^^^^^^^^
 99 |
100 | この設計により、トレンド追随に合わせた効率的な取引が可能で、将来的なシステム拡張やクラウド環境移行を視野に入れています。すべての取り組                                                                  …
    |

invalid-syntax: Expected an expression
   --> generated_code/implement_turn1.py:98:3
    |
 96 | - **説明責任コメント**: コード注釈を通じて、各処理の目的と理由を明示。
 97 | - **セキュリティ考慮**: 取引API通信での暗号化と認証対策。
 98 | - **A/Bテスト**: 戦略の異なる実装をテストし、効果を比較。
    |   ^^
 99 |
100 | この設計により、トレンド追随に合わせた効率的な取引が可能で、将来的なシステム拡張やクラウド環境移行を視野に入れています。すべての取り組                                                                  …
    |

invalid-syntax: Expected an expression
   --> generated_code/implement_turn1.py:98:13
    |
 96 | - **説明責任コメント**: コード注釈を通じて、各処理の目的と理由を明示。
 97 | - **セキュリティ考慮**: 取引API通信での暗号化と認証対策。
 98 | - **A/Bテスト**: 戦略の異なる実装をテストし、効果を比較。
    |                ^
 99 |
100 | この設計により、トレンド追随に合わせた効率的な取引が可能で、将来的なシステム拡張やクラウド環境移行を視野に入れています。すべての取り組                                                                  …
    |

invalid-syntax: Got unexpected token 、
   --> generated_code/implement_turn1.py:98:28
    |
 96 | - **説明責任コメント**: コード注釈を通じて、各処理の目的と理由を明示。
 97 | - **セキュリティ考慮**: 取引API通信での暗号化と認証対策。
 98 | - **A/Bテスト**: 戦略の異なる実装をテストし、効果を比較。
    |                                            ^^
 99 |
100 | この設計により、トレンド追随に合わせた効率的な取引が可能で、将来的なシステム拡張やクラウド環境移行を視野に入れています。すべての取り組                                                                  …
    |

invalid-syntax: Got unexpected token 。
   --> generated_code/implement_turn1.py:98:34
    |
 96 | - **説明責任コメント**: コード注釈を通じて、各処理の目的と理由を明示。
 97 | - **セキュリティ考慮**: 取引API通信での暗号化と認証対策。
 98 | - **A/Bテスト**: 戦略の異なる実装をテストし、効果を比較。
    |                                                        ^^
 99 |
100 | この設計により、トレンド追随に合わせた効率的な取引が可能で、将来的なシステム拡張やクラウド環境移行を視野に入れています。すべての取り組                                                                  …
    |

invalid-syntax: Expected a statement
   --> generated_code/implement_turn1.py:98:35
    |
 96 | - **説明責任コメント**: コード注釈を通じて、各処理の目的と理由を明示。
 97 | - **セキュリティ考慮**: 取引API通信での暗号化と認証対策。
 98 | - **A/Bテスト**: 戦略の異なる実装をテストし、効果を比較。
    |                                                          ^
 99 |
100 | この設計により、トレンド追随に合わせた効率的な取引が可能で、将来的なシステム拡張やクラウド環境移行を視野に入れています。すべての取り組                                                                  …
    |

invalid-syntax: Got unexpected token 、
   --> generated_code/implement_turn1.py:100:8
    |
 98 | - **A/Bテスト**: 戦略の異なる実装をテストし、効果を比較。
 99 |
100 | この設計により、トレンド追随に合わせた効率的な取引が可能で、将来的なシステム拡張やクラウド環境移行を視野に入れています。すべての取り組                                                                  …
    |               ^^
    |

invalid-syntax: Got unexpected token 、
   --> generated_code/implement_turn1.py:100:30
    |
 98 | - **A/Bテスト**: 戦略の異なる実装をテストし、効果を比較。
 99 |
100 | この設計により、トレンド追随に合わせた効率的な取引が可能で、将来的なシステム拡張やクラウド環境移行を視野に入れています。すべての取り組                                                                  …
    |                                                           ^^
    |

invalid-syntax: Got unexpected token 。
   --> generated_code/implement_turn1.py:100:60
    |
 98 | - **A/Bテスト**: 戦略の異なる実装をテストし、効果を比較。
 99 |
100 | この設計により、トレンド追随に合わせた効率的な取引が可能で、将来的なシステム拡張やクラウド環境移行を視野に入れています。すべての取り組                                                                  …
    |                                                                                                                       ^^
    |

invalid-syntax: Got unexpected token 、
   --> generated_code/implement_turn1.py:100:70
    |
 98 | …
 99 | …
100 | …証跡としての履歴DBに記録し、開発の透明性と追従性を保ちます。
^^  |
    |

invalid-syntax: Got unexpected token 、
   --> generated_code/implement_turn1.py:100:88
    |
 98 | …
 99 | …
100 | …
^   |
    |

invalid-syntax: Got unexpected token 。
   --> generated_code/implement_turn1.py:100:104
    |
 98 | …
 99 | …
100 | …
    ^^
    |

invalid-syntax: Expected a statement
   --> generated_code/implement_turn1.py:100:105
    |
 98 | …
 99 | …
100 | …
    | ^
    |

invalid-syntax: Got unexpected token 、
  --> generated_code/implement_turn2.py:8:46
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | USD/JPY自動トレードAIの戦略設計をNoctriaガイドラインに従って進めるにあたり、以下の詳細なコード設計を行います。基本戦略、技術要素、およ                                                          …
   |                                                                           ^^
 9 |
10 | ### メインスクリプト: `main.py`
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/implement_turn2.py:8:63
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | USD/JPY自動トレードAIの戦略設計をNoctriaガイドラインに従って進めるにあたり、以下の詳細なコード設計を行います。基本戦略、技術要素、およ                                                          …
   |                                                                                                             ^^
 9 |
10 | ### メインスクリプト: `main.py`
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/implement_turn2.py:8:68
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | USD/JPY自動トレードAIの戦略設計をNoctriaガイドラインに従って進めるにあたり、以下の詳細なコード設計を行います。基本戦略、技術要素、およ                                                          …
   |                                                                                                                       ^^
 9 |
10 | ### メインスクリプト: `main.py`
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/implement_turn2.py:8:73
   |
 6 | …。
 7 | …
 8 | …基本戦略、技術要素、および設計根拠に基づき、各コンポーネントに対応するPythonファイルを作成します。すべてのファイルはバージョン管理、                                                               …
   |                     ^^
 9 | …
10 | …
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/implement_turn2.py:8:85
   |
 6 | …
 7 | …
 8 | …ンポーネントに対応するPythonファイルを作成します。すべてのファイルはバージョン管理、説明責任、ABテストを考慮して設計されます。
 ^^|
 9 | …
10 | …
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/implement_turn2.py:8:115
   |
 6 | …
 7 | …
 8 | …トを考慮して設計されます。
^  |
 9 | …
10 | …
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/implement_turn2.py:8:132
   |
 6 | …
 7 | …
 8 | …
^  |
 9 | …
10 | …
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/implement_turn2.py:8:137
   |
 6 | …
 7 | …
 8 | …
^  |
 9 | …
10 | …
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/implement_turn2.py:8:154
   |
 6 | …
 7 | …
 8 | …
   ^^
 9 | …
10 | …
   |

invalid-syntax: Expected a statement
  --> generated_code/implement_turn2.py:8:155
   |
 6 | …
 7 | …
 8 | …
   | ^
 9 | …
10 | …
   |

invalid-syntax: Got unexpected token `
  --> generated_code/implement_turn2.py:12:1
   |
10 | ### メインスクリプト: `main.py`
11 |
12 | ```python
   | ^
13 | """
14 | main.py
   |

invalid-syntax: Got unexpected token `
  --> generated_code/implement_turn2.py:12:2
   |
10 | ### メインスクリプト: `main.py`
11 |
12 | ```python
   |  ^
13 | """
14 | main.py
   |

invalid-syntax: Got unexpected token `
  --> generated_code/implement_turn2.py:12:3
   |
10 | ### メインスクリプト: `main.py`
11 |
12 | ```python
   |   ^
13 | """
14 | main.py
   |

invalid-syntax: Got unexpected token `
  --> generated_code/implement_turn2.py:34:1
   |
32 |     risk_manager = RiskManager(selected_model, PathConfig.risk_params_path)
33 |     risk_manager.execute_trades()
34 | ```
   | ^
35 |
36 | ### データ収集モジュール: `data_collector.py`
   |

invalid-syntax: Got unexpected token `
  --> generated_code/implement_turn2.py:34:2
   |
32 |     risk_manager = RiskManager(selected_model, PathConfig.risk_params_path)
33 |     risk_manager.execute_trades()
34 | ```
   |  ^
35 |
36 | ### データ収集モジュール: `data_collector.py`
   |

invalid-syntax: Got unexpected token `
  --> generated_code/implement_turn2.py:34:3
   |
32 |     risk_manager = RiskManager(selected_model, PathConfig.risk_params_path)
33 |     risk_manager.execute_trades()
34 | ```
   |   ^
35 |
36 | ### データ収集モジュール: `data_collector.py`
   |

invalid-syntax: Expected a statement
  --> generated_code/implement_turn2.py:34:4
   |
32 |     risk_manager = RiskManager(selected_model, PathConfig.risk_params_path)
33 |     risk_manager.execute_trades()
34 | ```
   |    ^
35 |
36 | ### データ収集モジュール: `data_collector.py`
   |

invalid-syntax: Got unexpected token `
  --> generated_code/implement_turn2.py:38:1
   |
36 | ### データ収集モジュール: `data_collector.py`
37 |
38 | ```python
   | ^
39 | """
40 | data_collector.py
   |

invalid-syntax: Got unexpected token `
  --> generated_code/implement_turn2.py:38:2
   |
36 | ### データ収集モジュール: `data_collector.py`
37 |
38 | ```python
   |  ^
39 | """
40 | data_collector.py
   |

invalid-syntax: Got unexpected token `
  --> generated_code/implement_turn2.py:38:3
   |
36 | ### データ収集モジュール: `data_collector.py`
37 |
38 | ```python
   |   ^
39 | """
40 | data_collector.py
   |

invalid-syntax: Got unexpected token `
  --> generated_code/implement_turn2.py:55:1
   |
53 |     # データ加工・整形処理
54 |     return data
55 | ```
   | ^
56 |
57 | ### モデル選定モジュール: `model_selector.py`
   |

invalid-syntax: Got unexpected token `
  --> generated_code/implement_turn2.py:55:2
   |
53 |     # データ加工・整形処理
54 |     return data
55 | ```
   |  ^
56 |
57 | ### モデル選定モジュール: `model_selector.py`
   |

invalid-syntax: Got unexpected token `
  --> generated_code/implement_turn2.py:55:3
   |
53 |     # データ加工・整形処理
54 |     return data
55 | ```
   |   ^
56 |
57 | ### モデル選定モジュール: `model_selector.py`
   |

invalid-syntax: Expected a statement
  --> generated_code/implement_turn2.py:55:4
   |
53 |     # データ加工・整形処理
54 |     return data
55 | ```
   |    ^
56 |
57 | ### モデル選定モジュール: `model_selector.py`
   |

invalid-syntax: Got unexpected token `
  --> generated_code/implement_turn2.py:59:1
   |
57 | ### モデル選定モジュール: `model_selector.py`
58 |
59 | ```python
   | ^
60 | """
61 | model_selector.py
   |

invalid-syntax: Got unexpected token `
  --> generated_code/implement_turn2.py:59:2
   |
57 | ### モデル選定モジュール: `model_selector.py`
58 |
59 | ```python
   |  ^
60 | """
61 | model_selector.py
   |

invalid-syntax: Got unexpected token `
  --> generated_code/implement_turn2.py:59:3
   |
57 | ### モデル選定モジュール: `model_selector.py`
58 |
59 | ```python
   |   ^
60 | """
61 | model_selector.py
   |

invalid-syntax: Got unexpected token `
  --> generated_code/implement_turn2.py:84:1
   |
82 |         best_model = model_rf  # Placeholder decision
83 |         return best_model
84 | ```
   | ^
85 |
86 | ### リスク管理モジュール: `risk_manager.py`
   |

invalid-syntax: Got unexpected token `
  --> generated_code/implement_turn2.py:84:2
   |
82 |         best_model = model_rf  # Placeholder decision
83 |         return best_model
84 | ```
   |  ^
85 |
86 | ### リスク管理モジュール: `risk_manager.py`
   |

invalid-syntax: Got unexpected token `
  --> generated_code/implement_turn2.py:84:3
   |
82 |         best_model = model_rf  # Placeholder decision
83 |         return best_model
84 | ```
   |   ^
85 |
86 | ### リスク管理モジュール: `risk_manager.py`
   |

invalid-syntax: Expected a statement
  --> generated_code/implement_turn2.py:84:4
   |
82 |         best_model = model_rf  # Placeholder decision
83 |         return best_model
84 | ```
   |    ^
85 |
86 | ### リスク管理モジュール: `risk_manager.py`
   |

invalid-syntax: Got unexpected token `
  --> generated_code/implement_turn2.py:88:1
   |
86 | ### リスク管理モジュール: `risk_manager.py`
87 |
88 | ```python
   | ^
89 | """
90 | risk_manager.py
   |

invalid-syntax: Got unexpected token `
  --> generated_code/implement_turn2.py:88:2
   |
86 | ### リスク管理モジュール: `risk_manager.py`
87 |
88 | ```python
   |  ^
89 | """
90 | risk_manager.py
   |

invalid-syntax: Got unexpected token `
  --> generated_code/implement_turn2.py:88:3
   |
86 | ### リスク管理モジュール: `risk_manager.py`
87 |
88 | ```python
   |   ^
89 | """
90 | risk_manager.py
   |

invalid-syntax: Got unexpected token `
   --> generated_code/implement_turn2.py:110:1
    |
108 |         # トレード実行ロジック（仮置き）
109 |         print("Executing trades with risk parameters:", self.risk_params)
110 | ```
    | ^
111 |
112 | ### 備考
    |

invalid-syntax: Got unexpected token `
   --> generated_code/implement_turn2.py:110:2
    |
108 |         # トレード実行ロジック（仮置き）
109 |         print("Executing trades with risk parameters:", self.risk_params)
110 | ```
    |  ^
111 |
112 | ### 備考
    |

invalid-syntax: Got unexpected token `
   --> generated_code/implement_turn2.py:110:3
    |
108 |         # トレード実行ロジック（仮置き）
109 |         print("Executing trades with risk parameters:", self.risk_params)
110 | ```
    |   ^
111 |
112 | ### 備考
    |

invalid-syntax: Expected a statement
   --> generated_code/implement_turn2.py:110:4
    |
108 |         # トレード実行ロジック（仮置き）
109 |         print("Executing trades with risk parameters:", self.risk_params)
110 | ```
    |    ^
111 |
112 | ### 備考
    |

invalid-syntax: Got unexpected token 、
   --> generated_code/implement_turn2.py:113:12
    |
112 | ### 備考
113 | - これらのファイルは、Noctriaのガイドラインに従い適切にバージョン管理され、各モジュールの責任と役割を明確にしています。
    |                     ^^
114 | - すべての変更や生成物は履歴DBに記録し、プロセスの透明性を確保します。
115 | - `path_config.py`は各種設定やパスの管理を一元化します。
    |

invalid-syntax: Got unexpected token 、
   --> generated_code/implement_turn2.py:113:42
    |
112 | ### 備考
113 | - これらのファイルは、Noctriaのガイドラインに従い適切にバージョン管理され、各モジュールの責任と役割を明確にしています。
    |                                                                          ^^
114 | - すべての変更や生成物は履歴DBに記録し、プロセスの透明性を確保します。
115 | - `path_config.py`は各種設定やパスの管理を一元化します。
    |

invalid-syntax: Got unexpected token 。
   --> generated_code/implement_turn2.py:113:64
    |
112 | ### 備考
113 | - これらのファイルは、Noctriaのガイドラインに従い適切にバージョン管理され、各モジュールの責任と役割を明確にしています。
    |                                                                                                                      ^^
114 | - すべての変更や生成物は履歴DBに記録し、プロセスの透明性を確保します。
115 | - `path_config.py`は各種設定やパスの管理を一元化します。
    |

invalid-syntax: Expected a statement
   --> generated_code/implement_turn2.py:113:65
    |
112 | ### 備考
113 | - これらのファイルは、Noctriaのガイドラインに従い適切にバージョン管理され、各モジュールの責任と役割を明確にしています。
    |                                                                                                                        ^
114 | - すべての変更や生成物は履歴DBに記録し、プロセスの透明性を確保します。
115 | - `path_config.py`は各種設定やパスの管理を一元化します。
    |

invalid-syntax: Got unexpected token 、
   --> generated_code/implement_turn2.py:114:22
    |
112 | ### 備考
113 | - これらのファイルは、Noctriaのガイドラインに従い適切にバージョン管理され、各モジュールの責任と役割を明確にしています。
114 | - すべての変更や生成物は履歴DBに記録し、プロセスの透明性を確保します。
    |                                       ^^
115 | - `path_config.py`は各種設定やパスの管理を一元化します。
116 | - 今後のクラウド対応やGPU活用の基盤として、現在のローカル環境での実績を積み上げます。
    |

invalid-syntax: Got unexpected token 。
   --> generated_code/implement_turn2.py:114:37
    |
112 | ### 備考
113 | - これらのファイルは、Noctriaのガイドラインに従い適切にバージョン管理され、各モジュールの責任と役割を明確にしています。
114 | - すべての変更や生成物は履歴DBに記録し、プロセスの透明性を確保します。
    |                                                                     ^^
115 | - `path_config.py`は各種設定やパスの管理を一元化します。
116 | - 今後のクラウド対応やGPU活用の基盤として、現在のローカル環境での実績を積み上げます。
    |

invalid-syntax: Expected a statement
   --> generated_code/implement_turn2.py:114:38
    |
112 | ### 備考
113 | - これらのファイルは、Noctriaのガイドラインに従い適切にバージョン管理され、各モジュールの責任と役割を明確にしています。
114 | - すべての変更や生成物は履歴DBに記録し、プロセスの透明性を確保します。
    |                                                                       ^
115 | - `path_config.py`は各種設定やパスの管理を一元化します。
116 | - 今後のクラウド対応やGPU活用の基盤として、現在のローカル環境での実績を積み上げます。
    |

invalid-syntax: Got unexpected token `
   --> generated_code/implement_turn2.py:115:3
    |
113 | - これらのファイルは、Noctriaのガイドラインに従い適切にバージョン管理され、各モジュールの責任と役割を明確にしています。
114 | - すべての変更や生成物は履歴DBに記録し、プロセスの透明性を確保します。
115 | - `path_config.py`は各種設定やパスの管理を一元化します。
    |   ^
116 | - 今後のクラウド対応やGPU活用の基盤として、現在のローカル環境での実績を積み上げます。
    |

invalid-syntax: Got unexpected token `
   --> generated_code/implement_turn2.py:115:18
    |
113 | - これらのファイルは、Noctriaのガイドラインに従い適切にバージョン管理され、各モジュールの責任と役割を明確にしています。
114 | - すべての変更や生成物は履歴DBに記録し、プロセスの透明性を確保します。
115 | - `path_config.py`は各種設定やパスの管理を一元化します。
    |                  ^
116 | - 今後のクラウド対応やGPU活用の基盤として、現在のローカル環境での実績を積み上げます。
    |

invalid-syntax: Got unexpected token 。
   --> generated_code/implement_turn2.py:115:37
    |
113 | - これらのファイルは、Noctriaのガイドラインに従い適切にバージョン管理され、各モジュールの責任と役割を明確にしています。
114 | - すべての変更や生成物は履歴DBに記録し、プロセスの透明性を確保します。
115 | - `path_config.py`は各種設定やパスの管理を一元化します。
    |                                                       ^^
116 | - 今後のクラウド対応やGPU活用の基盤として、現在のローカル環境での実績を積み上げます。
    |

invalid-syntax: Expected a statement
   --> generated_code/implement_turn2.py:115:38
    |
113 | - これらのファイルは、Noctriaのガイドラインに従い適切にバージョン管理され、各モジュールの責任と役割を明確にしています。
114 | - すべての変更や生成物は履歴DBに記録し、プロセスの透明性を確保します。
115 | - `path_config.py`は各種設定やパスの管理を一元化します。
    |                                                         ^
116 | - 今後のクラウド対応やGPU活用の基盤として、現在のローカル環境での実績を積み上げます。
    |

invalid-syntax: Got unexpected token 、
   --> generated_code/implement_turn2.py:116:24
    |
114 | - すべての変更や生成物は履歴DBに記録し、プロセスの透明性を確保します。
115 | - `path_config.py`は各種設定やパスの管理を一元化します。
116 | - 今後のクラウド対応やGPU活用の基盤として、現在のローカル環境での実績を積み上げます。
    |                                          ^^
117 |
118 | この戦略設計により、USD/JPYの自動トレードを効果的かつ安全に実行できるようにサポートします。
    |

invalid-syntax: Got unexpected token 。
   --> generated_code/implement_turn2.py:116:45
    |
114 | - すべての変更や生成物は履歴DBに記録し、プロセスの透明性を確保します。
115 | - `path_config.py`は各種設定やパスの管理を一元化します。
116 | - 今後のクラウド対応やGPU活用の基盤として、現在のローカル環境での実績を積み上げます。
    |                                                                                    ^^
117 |
118 | この戦略設計により、USD/JPYの自動トレードを効果的かつ安全に実行できるようにサポートします。
    |

invalid-syntax: Expected a statement
   --> generated_code/implement_turn2.py:116:46
    |
114 | - すべての変更や生成物は履歴DBに記録し、プロセスの透明性を確保します。
115 | - `path_config.py`は各種設定やパスの管理を一元化します。
116 | - 今後のクラウド対応やGPU活用の基盤として、現在のローカル環境での実績を積み上げます。
    |                                                                                      ^
117 |
118 | この戦略設計により、USD/JPYの自動トレードを効果的かつ安全に実行できるようにサポートします。
    |

invalid-syntax: Got unexpected token 、
   --> generated_code/implement_turn2.py:118:10
    |
116 | - 今後のクラウド対応やGPU活用の基盤として、現在のローカル環境での実績を積み上げます。
117 |
118 | この戦略設計により、USD/JPYの自動トレードを効果的かつ安全に実行できるようにサポートします。
    |                   ^^
    |

invalid-syntax: Got unexpected token 。
   --> generated_code/implement_turn2.py:118:49
    |
116 | - 今後のクラウド対応やGPU活用の基盤として、現在のローカル環境での実績を積み上げます。
117 |
118 | この戦略設計により、USD/JPYの自動トレードを効果的かつ安全に実行できるようにサポートします。
    |                                                                                          ^^
    |

invalid-syntax: Expected a statement
   --> generated_code/implement_turn2.py:118:50
    |
116 | - 今後のクラウド対応やGPU活用の基盤として、現在のローカル環境での実績を積み上げます。
117 |
118 | この戦略設計により、USD/JPYの自動トレードを効果的かつ安全に実行できるようにサポートします。
    |                                                                                            ^
    |

invalid-syntax: Invalid annotated assignment target
 --> generated_code/implement_turn3.py:1:1
  |
1 | 1. **日本語をコメントとして使用**: 
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2 |
3 | 2. **エンコードの指定**:
  |

invalid-syntax: Expected an expression
 --> generated_code/implement_turn3.py:1:21
  |
1 | 1. **日本語をコメントとして使用**: 
  |                                  ^
2 |
3 | 2. **エンコードの指定**:
  |

invalid-syntax: Expected an expression
 --> generated_code/implement_turn3.py:1:23
  |
1 | 1. **日本語をコメントとして使用**: 
  |                                    ^
2 |
3 | 2. **エンコードの指定**:
  |

invalid-syntax: Invalid annotated assignment target
 --> generated_code/implement_turn3.py:3:1
  |
1 | 1. **日本語をコメントとして使用**: 
2 |
3 | 2. **エンコードの指定**:
  | ^^^^^^^^^^^^^^^^^^^^^^^
  |

invalid-syntax: Expected an expression
 --> generated_code/implement_turn3.py:3:16
  |
1 | 1. **日本語をコメントとして使用**: 
2 |
3 | 2. **エンコードの指定**:
  |                        ^
  |

invalid-syntax: Expected an expression
 --> generated_code/implement_turn3.py:3:17
  |
1 | 1. **日本語をコメントとして使用**: 
2 |
3 | 2. **エンコードの指定**:
  |                         ^
  |

invalid-syntax: Invalid annotated assignment target
 --> generated_code/implement_turn4.py:1:1
  |
1 | 1. **ファイル名: usd_jpy_strategy.py**
  | ^^^^^^^^^^^^^^^
  |

invalid-syntax: Expected an expression
 --> generated_code/implement_turn4.py:1:34
  |
1 | 1. **ファイル名: usd_jpy_strategy.py**
  |                                       ^
  |

invalid-syntax: Invalid annotated assignment target
 --> generated_code/implement_turn4.py:5:1
  |
5 | 2. **ファイル名: risk_management.py**
  | ^^^^^^^^^^^^^^^
  |

invalid-syntax: Expected an expression
 --> generated_code/implement_turn4.py:5:33
  |
5 | 2. **ファイル名: risk_management.py**
  |                                      ^
  |

invalid-syntax: Invalid annotated assignment target
 --> generated_code/implement_turn4.py:9:1
  |
9 | 3. **ファイル名: backtesting.py**
  | ^^^^^^^^^^^^^^^
  |

invalid-syntax: Expected an expression
 --> generated_code/implement_turn4.py:9:29
  |
9 | 3. **ファイル名: backtesting.py**
  |                                  ^
  |

F821 Undefined name `cleaned_data`
 --> generated_code/model_selection.py:6:30
  |
4 |     pass
5 |
6 | optimal_model = select_model(cleaned_data)
  |                              ^^^^^^^^^^^^
  |

invalid-syntax: Got unexpected token `
 --> generated_code/model_training.py:8:1
  |
6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
7 |
8 | ```python
  | ^
9 | # generated_code/model_training.py
  |

invalid-syntax: Got unexpected token `
 --> generated_code/model_training.py:8:2
  |
6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
7 |
8 | ```python
  |  ^
9 | # generated_code/model_training.py
  |

invalid-syntax: Got unexpected token `
 --> generated_code/model_training.py:8:3
  |
6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
7 |
8 | ```python
  |   ^
9 | # generated_code/model_training.py
  |

invalid-syntax: Got unexpected token `
  --> generated_code/model_training.py:13:1
   |
11 | def train_model(features_path: str, model_path: str):
12 |     pass
13 | ```
   | ^
   |

invalid-syntax: Got unexpected token `
  --> generated_code/model_training.py:13:2
   |
11 | def train_model(features_path: str, model_path: str):
12 |     pass
13 | ```
   |  ^
   |

invalid-syntax: Got unexpected token `
  --> generated_code/model_training.py:13:3
   |
11 | def train_model(features_path: str, model_path: str):
12 |     pass
13 | ```
   |   ^
   |

invalid-syntax: Expected a statement
  --> generated_code/model_training.py:13:4
   |
11 | def train_model(features_path: str, model_path: str):
12 |     pass
13 | ```
   |    ^
   |

invalid-syntax: Got unexpected token `
 --> generated_code/order_execution.py:8:1
  |
6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
7 |
8 | ```python
  | ^
9 | # generated_code/order_execution.py
  |

invalid-syntax: Got unexpected token `
 --> generated_code/order_execution.py:8:2
  |
6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
7 |
8 | ```python
  |  ^
9 | # generated_code/order_execution.py
  |

invalid-syntax: Got unexpected token `
 --> generated_code/order_execution.py:8:3
  |
6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
7 |
8 | ```python
  |   ^
9 | # generated_code/order_execution.py
  |

invalid-syntax: Got unexpected token `
  --> generated_code/order_execution.py:13:1
   |
11 | def execute_trade(model_path: str, features_path: str):
12 |     pass
13 | ```
   | ^
14 |
15 | 【テストファイル】
   |

invalid-syntax: Got unexpected token `
  --> generated_code/order_execution.py:13:2
   |
11 | def execute_trade(model_path: str, features_path: str):
12 |     pass
13 | ```
   |  ^
14 |
15 | 【テストファイル】
   |

invalid-syntax: Got unexpected token `
  --> generated_code/order_execution.py:13:3
   |
11 | def execute_trade(model_path: str, features_path: str):
12 |     pass
13 | ```
   |   ^
14 |
15 | 【テストファイル】
   |

invalid-syntax: Expected a statement
  --> generated_code/order_execution.py:13:4
   |
11 | def execute_trade(model_path: str, features_path: str):
12 |     pass
13 | ```
   |    ^
14 |
15 | 【テストファイル】
   |

invalid-syntax: Got unexpected token 【
  --> generated_code/order_execution.py:15:1
   |
13 | ```
14 |
15 | 【テストファイル】
   | ^^
16 |
17 | 各テストファイルの未定義シンボルはすべて `path_config.py` からインポートするように修正します。また、未定義関数はそれぞれのモジュールか                                                         …
   |

invalid-syntax: Got unexpected token 】
  --> generated_code/order_execution.py:15:9
   |
13 | ```
14 |
15 | 【テストファイル】
   |                 ^^
16 |
17 | 各テストファイルの未定義シンボルはすべて `path_config.py` からインポートするように修正します。また、未定義関数はそれぞれのモジュールか                                                         …
   |

invalid-syntax: Expected a statement
  --> generated_code/order_execution.py:15:10
   |
13 | ```
14 |
15 | 【テストファイル】
   |                   ^
16 |
17 | 各テストファイルの未定義シンボルはすべて `path_config.py` からインポートするように修正します。また、未定義関数はそれぞれのモジュールか                                                         …
   |

invalid-syntax: Got unexpected token `
  --> generated_code/order_execution.py:17:22
   |
15 | 【テストファイル】
16 |
17 | 各テストファイルの未定義シンボルはすべて `path_config.py` からインポートするように修正します。また、未定義関数はそれぞれのモジュールか                                                         …
   |                                          ^
   |

invalid-syntax: Got unexpected token `
  --> generated_code/order_execution.py:17:37
   |
15 | 【テストファイル】
16 |
17 | 各テストファイルの未定義シンボルはすべて `path_config.py` からインポートするように修正します。また、未定義関数はそれぞれのモジュールか                                                         …
   |                                                         ^
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/order_execution.py:17:56
   |
15 | 【テストファイル】
16 |
17 | 各テストファイルの未定義シンボルはすべて `path_config.py` からインポートするように修正します。また、未定義関数はそれぞれのモジュールか                                                         …
   |                                                                                             ^^
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/order_execution.py:17:59
   |
15 | 【テストファイル】
16 |
17 | 各テストファイルの未定義シンボルはすべて `path_config.py` からインポートするように修正します。また、未定義関数はそれぞれのモジュールか                                                         …
   |                                                                                                   ^^
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/order_execution.py:17:86
   |
15 | …
16 | …
17 | …
   ^^
   |

invalid-syntax: Expected a statement
  --> generated_code/order_execution.py:17:87
   |
15 | …
16 | …
17 | …
   | ^
   |

F821 Undefined name `requests`
  --> generated_code/order_executor.py:10:24
   |
 8 |         if signal in ['BUY', 'SELL']:
 9 |             # 実際のAPI呼び出し
10 |             response = requests.post(self.api_endpoint, json={'order': signal})
   |                        ^^^^^^^^
11 |             if response.status_code == 200:
12 |                 return response.json()
   |

F821 Undefined name `trade_history`
 --> generated_code/performance_evaluation.py:5:44
  |
3 |     pass
4 |
5 | performance_metrics = evaluate_performance(trade_history)
  |                                            ^^^^^^^^^^^^^
  |

invalid-syntax: Got unexpected token `
  --> generated_code/src/data_preprocessing.py:8:1
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | ```python
   | ^
 9 | class DataPreprocessing:
10 |     def __init__(self, data):
   |

invalid-syntax: Got unexpected token `
  --> generated_code/src/data_preprocessing.py:8:2
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | ```python
   |  ^
 9 | class DataPreprocessing:
10 |     def __init__(self, data):
   |

invalid-syntax: Got unexpected token `
  --> generated_code/src/data_preprocessing.py:8:3
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | ```python
   |   ^
 9 | class DataPreprocessing:
10 |     def __init__(self, data):
   |

invalid-syntax: Got unexpected token `
  --> generated_code/src/data_preprocessing.py:20:1
   |
18 |         # Implement data transformation logic here
19 |         pass
20 | ```
   | ^
   |

invalid-syntax: Got unexpected token `
  --> generated_code/src/data_preprocessing.py:20:2
   |
18 |         # Implement data transformation logic here
19 |         pass
20 | ```
   |  ^
   |

invalid-syntax: Got unexpected token `
  --> generated_code/src/data_preprocessing.py:20:3
   |
18 |         # Implement data transformation logic here
19 |         pass
20 | ```
   |   ^
   |

invalid-syntax: Expected a statement
  --> generated_code/src/data_preprocessing.py:20:4
   |
18 |         # Implement data transformation logic here
19 |         pass
20 | ```
   |    ^
   |

invalid-syntax: Got unexpected token `
  --> generated_code/src/model_training.py:8:1
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | ```python
   | ^
 9 | def train_model(features_path: str, model_path: str) -> None:
10 |     # Implement model training logic here
   |

invalid-syntax: Got unexpected token `
  --> generated_code/src/model_training.py:8:2
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | ```python
   |  ^
 9 | def train_model(features_path: str, model_path: str) -> None:
10 |     # Implement model training logic here
   |

invalid-syntax: Got unexpected token `
  --> generated_code/src/model_training.py:8:3
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | ```python
   |   ^
 9 | def train_model(features_path: str, model_path: str) -> None:
10 |     # Implement model training logic here
   |

invalid-syntax: Got unexpected token `
  --> generated_code/src/model_training.py:14:1
   |
12 |     # Save the trained model to model_path
13 |     pass
14 | ```
   | ^
   |

invalid-syntax: Got unexpected token `
  --> generated_code/src/model_training.py:14:2
   |
12 |     # Save the trained model to model_path
13 |     pass
14 | ```
   |  ^
   |

invalid-syntax: Got unexpected token `
  --> generated_code/src/model_training.py:14:3
   |
12 |     # Save the trained model to model_path
13 |     pass
14 | ```
   |   ^
   |

invalid-syntax: Expected a statement
  --> generated_code/src/model_training.py:14:4
   |
12 |     # Save the trained model to model_path
13 |     pass
14 | ```
   |    ^
   |

invalid-syntax: Got unexpected token `
  --> generated_code/src/order_execution.py:8:1
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | ```python
   | ^
 9 | def execute_trade(features_path: str, model_path: str) -> None:
10 |     # Implement trade execution logic here
   |

invalid-syntax: Got unexpected token `
  --> generated_code/src/order_execution.py:8:2
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | ```python
   |  ^
 9 | def execute_trade(features_path: str, model_path: str) -> None:
10 |     # Implement trade execution logic here
   |

invalid-syntax: Got unexpected token `
  --> generated_code/src/order_execution.py:8:3
   |
 6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
 7 |
 8 | ```python
   |   ^
 9 | def execute_trade(features_path: str, model_path: str) -> None:
10 |     # Implement trade execution logic here
   |

invalid-syntax: Got unexpected token `
  --> generated_code/src/order_execution.py:13:1
   |
11 |     # Use the model from model_path and features from features_path
12 |     pass
13 | ```
   | ^
   |

invalid-syntax: Got unexpected token `
  --> generated_code/src/order_execution.py:13:2
   |
11 |     # Use the model from model_path and features from features_path
12 |     pass
13 | ```
   |  ^
   |

invalid-syntax: Got unexpected token `
  --> generated_code/src/order_execution.py:13:3
   |
11 |     # Use the model from model_path and features from features_path
12 |     pass
13 | ```
   |   ^
   |

invalid-syntax: Expected a statement
  --> generated_code/src/order_execution.py:13:4
   |
11 |     # Use the model from model_path and features from features_path
12 |     pass
13 | ```
   |    ^
   |

invalid-syntax: Got unexpected token `
 --> generated_code/test_data_collection.py:8:1
  |
6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
7 |
8 | ```python
  | ^
9 | # generated_code/test_data_collection.py
  |

invalid-syntax: Got unexpected token `
 --> generated_code/test_data_collection.py:8:2
  |
6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
7 |
8 | ```python
  |  ^
9 | # generated_code/test_data_collection.py
  |

invalid-syntax: Got unexpected token `
 --> generated_code/test_data_collection.py:8:3
  |
6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
7 |
8 | ```python
  |   ^
9 | # generated_code/test_data_collection.py
  |

invalid-syntax: Got unexpected token `
  --> generated_code/test_data_collection.py:16:1
   |
14 |     assert DATA_SOURCE_URL is not None
15 |     assert LOCAL_DATA_PATH is not None
16 | ```
   | ^
   |

invalid-syntax: Got unexpected token `
  --> generated_code/test_data_collection.py:16:2
   |
14 |     assert DATA_SOURCE_URL is not None
15 |     assert LOCAL_DATA_PATH is not None
16 | ```
   |  ^
   |

invalid-syntax: Got unexpected token `
  --> generated_code/test_data_collection.py:16:3
   |
14 |     assert DATA_SOURCE_URL is not None
15 |     assert LOCAL_DATA_PATH is not None
16 | ```
   |   ^
   |

invalid-syntax: Expected a statement
  --> generated_code/test_data_collection.py:16:4
   |
14 |     assert DATA_SOURCE_URL is not None
15 |     assert LOCAL_DATA_PATH is not None
16 | ```
   |    ^
   |

invalid-syntax: Got unexpected token `
 --> generated_code/test_data_preprocessing.py:8:1
  |
6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
7 |
8 | ```python
  | ^
9 | # generated_code/test_data_preprocessing.py
  |

invalid-syntax: Got unexpected token `
 --> generated_code/test_data_preprocessing.py:8:2
  |
6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
7 |
8 | ```python
  |  ^
9 | # generated_code/test_data_preprocessing.py
  |

invalid-syntax: Got unexpected token `
 --> generated_code/test_data_preprocessing.py:8:3
  |
6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
7 |
8 | ```python
  |   ^
9 | # generated_code/test_data_preprocessing.py
  |

invalid-syntax: Got unexpected token `
  --> generated_code/test_data_preprocessing.py:16:1
   |
14 |     dp = DataPreprocessing("dummy_path")
15 |     assert dp is not None
16 | ```
   | ^
   |

invalid-syntax: Got unexpected token `
  --> generated_code/test_data_preprocessing.py:16:2
   |
14 |     dp = DataPreprocessing("dummy_path")
15 |     assert dp is not None
16 | ```
   |  ^
   |

invalid-syntax: Got unexpected token `
  --> generated_code/test_data_preprocessing.py:16:3
   |
14 |     dp = DataPreprocessing("dummy_path")
15 |     assert dp is not None
16 | ```
   |   ^
   |

invalid-syntax: Expected a statement
  --> generated_code/test_data_preprocessing.py:16:4
   |
14 |     dp = DataPreprocessing("dummy_path")
15 |     assert dp is not None
16 | ```
   |    ^
   |

invalid-syntax: Got unexpected token `
 --> generated_code/test_feature_engineering.py:8:1
  |
6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
7 |
8 | ```python
  | ^
9 | # generated_code/test_feature_engineering.py
  |

invalid-syntax: Got unexpected token `
 --> generated_code/test_feature_engineering.py:8:2
  |
6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
7 |
8 | ```python
  |  ^
9 | # generated_code/test_feature_engineering.py
  |

invalid-syntax: Got unexpected token `
 --> generated_code/test_feature_engineering.py:8:3
  |
6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
7 |
8 | ```python
  |   ^
9 | # generated_code/test_feature_engineering.py
  |

invalid-syntax: Got unexpected token `
  --> generated_code/test_feature_engineering.py:16:1
   |
14 |     assert LOCAL_DATA_PATH is not None
15 |     assert FEATURES_PATH is not None
16 | ```
   | ^
   |

invalid-syntax: Got unexpected token `
  --> generated_code/test_feature_engineering.py:16:2
   |
14 |     assert LOCAL_DATA_PATH is not None
15 |     assert FEATURES_PATH is not None
16 | ```
   |  ^
   |

invalid-syntax: Got unexpected token `
  --> generated_code/test_feature_engineering.py:16:3
   |
14 |     assert LOCAL_DATA_PATH is not None
15 |     assert FEATURES_PATH is not None
16 | ```
   |   ^
   |

invalid-syntax: Expected a statement
  --> generated_code/test_feature_engineering.py:16:4
   |
14 |     assert LOCAL_DATA_PATH is not None
15 |     assert FEATURES_PATH is not None
16 | ```
   |    ^
   |

F821 Undefined name `pytest`
  --> generated_code/test_model_design.py:10:9
   |
 8 |         assert len(model.layers) > 0
 9 |     except Exception:
10 |         pytest.fail("Model could not be built.")
   |         ^^^^^^
   |

invalid-syntax: Got unexpected token `
 --> generated_code/test_model_training.py:8:1
  |
6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
7 |
8 | ```python
  | ^
9 | # generated_code/test_model_training.py
  |

invalid-syntax: Got unexpected token `
 --> generated_code/test_model_training.py:8:2
  |
6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
7 |
8 | ```python
  |  ^
9 | # generated_code/test_model_training.py
  |

invalid-syntax: Got unexpected token `
 --> generated_code/test_model_training.py:8:3
  |
6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
7 |
8 | ```python
  |   ^
9 | # generated_code/test_model_training.py
  |

invalid-syntax: Got unexpected token `
  --> generated_code/test_model_training.py:18:1
   |
16 |     assert MODEL_PATH is not None
17 |     train_model(FEATURES_PATH, MODEL_PATH)
18 | ```
   | ^
   |

invalid-syntax: Got unexpected token `
  --> generated_code/test_model_training.py:18:2
   |
16 |     assert MODEL_PATH is not None
17 |     train_model(FEATURES_PATH, MODEL_PATH)
18 | ```
   |  ^
   |

invalid-syntax: Got unexpected token `
  --> generated_code/test_model_training.py:18:3
   |
16 |     assert MODEL_PATH is not None
17 |     train_model(FEATURES_PATH, MODEL_PATH)
18 | ```
   |   ^
   |

invalid-syntax: Expected a statement
  --> generated_code/test_model_training.py:18:4
   |
16 |     assert MODEL_PATH is not None
17 |     train_model(FEATURES_PATH, MODEL_PATH)
18 | ```
   |    ^
   |

invalid-syntax: Got unexpected token `
 --> generated_code/test_order_execution.py:8:1
  |
6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
7 |
8 | ```python
  | ^
9 | # generated_code/test_order_execution.py
  |

invalid-syntax: Got unexpected token `
 --> generated_code/test_order_execution.py:8:2
  |
6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
7 |
8 | ```python
  |  ^
9 | # generated_code/test_order_execution.py
  |

invalid-syntax: Got unexpected token `
 --> generated_code/test_order_execution.py:8:3
  |
6 | # 説明責任: このファイルはNoctria Kingdomナレッジベース・ガイドライン・設計根拠を遵守し自動生成されています。
7 |
8 | ```python
  |   ^
9 | # generated_code/test_order_execution.py
  |

invalid-syntax: Got unexpected token `
  --> generated_code/test_order_execution.py:18:1
   |
16 |     assert FEATURES_PATH is not None
17 |     execute_trade(MODEL_PATH, FEATURES_PATH)
18 | ```
   | ^
19 |
20 | すべてのパスと未定義シンボルが定義され、pytestでテストされるコードが用意されました。型アノテーションと命名規則も適用されています。
   |

invalid-syntax: Got unexpected token `
  --> generated_code/test_order_execution.py:18:2
   |
16 |     assert FEATURES_PATH is not None
17 |     execute_trade(MODEL_PATH, FEATURES_PATH)
18 | ```
   |  ^
19 |
20 | すべてのパスと未定義シンボルが定義され、pytestでテストされるコードが用意されました。型アノテーションと命名規則も適用されています。
   |

invalid-syntax: Got unexpected token `
  --> generated_code/test_order_execution.py:18:3
   |
16 |     assert FEATURES_PATH is not None
17 |     execute_trade(MODEL_PATH, FEATURES_PATH)
18 | ```
   |   ^
19 |
20 | すべてのパスと未定義シンボルが定義され、pytestでテストされるコードが用意されました。型アノテーションと命名規則も適用されています。
   |

invalid-syntax: Expected a statement
  --> generated_code/test_order_execution.py:18:4
   |
16 |     assert FEATURES_PATH is not None
17 |     execute_trade(MODEL_PATH, FEATURES_PATH)
18 | ```
   |    ^
19 |
20 | すべてのパスと未定義シンボルが定義され、pytestでテストされるコードが用意されました。型アノテーションと命名規則も適用されています。
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/test_order_execution.py:20:20
   |
18 | ```
19 |
20 | すべてのパスと未定義シンボルが定義され、pytestでテストされるコードが用意されました。型アノテーションと命名規則も適用されています。
   |                                       ^^
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/test_order_execution.py:20:45
   |
18 | ```
19 |
20 | すべてのパスと未定義シンボルが定義され、pytestでテストされるコードが用意されました。型アノテーションと命名規則も適用されています。
   |                                                                                   ^^
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/test_order_execution.py:20:68
   |
18 | …
19 | …
20 | …ています。
   |           ^^
   |

invalid-syntax: Expected a statement
  --> generated_code/test_order_execution.py:20:69
   |
18 | …
19 | …
20 | …います。
   |           ^
   |

F841 Local variable `result` is assigned to but never used
  --> generated_code/test_strategy_model.py:27:5
   |
25 |     data = pd.DataFrame({'close': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]})
26 |     model = StrategyModel(short_window=3, medium_window=5, rsi_period=14)
27 |     result = model.calculate_rsi(data)
   |     ^^^^^^
   |
help: Remove assignment to unused variable `result`

invalid-syntax: Invalid annotated assignment target
  --> generated_code/test_turn1.py:13:1
   |
12 | #### トレンドフォロー戦略
13 | - **目的**: 相場のトレンドを見極め、リスクを制限しつつ最大限の利益を得ることを目指しています。この戦略は、ガイドライン上の説明責任と明                                                              …
   | ^^^^^^^^^^
14 | - **ツール**: 短期（SMA20）と長期（SMA50）の移動平均線を用いて、価格の動きを捉えた売買シグナルを生成します。
   |

invalid-syntax: Expected an expression
  --> generated_code/test_turn1.py:13:3
   |
12 | #### トレンドフォロー戦略
13 | - **目的**: 相場のトレンドを見極め、リスクを制限しつつ最大限の利益を得ることを目指しています。この戦略は、ガイドライン上の説明責任と明                                                              …
   |   ^^
14 | - **ツール**: 短期（SMA20）と長期（SMA50）の移動平均線を用いて、価格の動きを捉えた売買シグナルを生成します。
   |

invalid-syntax: Expected an expression
  --> generated_code/test_turn1.py:13:9
   |
12 | #### トレンドフォロー戦略
13 | - **目的**: 相場のトレンドを見極め、リスクを制限しつつ最大限の利益を得ることを目指しています。この戦略は、ガイドライン上の説明責任と明                                                              …
   |           ^
14 | - **ツール**: 短期（SMA20）と長期（SMA50）の移動平均線を用いて、価格の動きを捉えた売買シグナルを生成します。
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/test_turn1.py:13:22
   |
12 | #### トレンドフォロー戦略
13 | - **目的**: 相場のトレンドを見極め、リスクを制限しつつ最大限の利益を得ることを目指しています。この戦略は、ガイドライン上の説明責任と明                                                              …
   |                                   ^^
14 | - **ツール**: 短期（SMA20）と長期（SMA50）の移動平均線を用いて、価格の動きを捉えた売買シグナルを生成します。
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/test_turn1.py:13:51
   |
12 | #### トレンドフォロー戦略
13 | - **目的**: 相場のトレンドを見極め、リスクを制限しつつ最大限の利益を得ることを目指しています。この戦略は、ガイドライン上の説明責任と明                                                              …
   |                                                                                             ^^
14 | - **ツール**: 短期（SMA20）と長期（SMA50）の移動平均線を用いて、価格の動きを捉えた売買シグナルを生成します。
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/test_turn1.py:13:57
   |
12 | #### トレンドフォロー戦略
13 | - **目的**: 相場のトレンドを見極め、リスクを制限しつつ最大限の利益を得ることを目指しています。この戦略は、ガイドライン上の説明責任と明                                                              …
   |                                                                                                         ^^
14 | - **ツール**: 短期（SMA20）と長期（SMA50）の移動平均線を用いて、価格の動きを捉えた売買シグナルを生成します。
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/test_turn1.py:13:90
   |
12 | …
13 | …
   ^^
14 | …
   |

invalid-syntax: Expected a statement
  --> generated_code/test_turn1.py:13:91
   |
12 | …
13 | …
   | ^
14 | …
   |

invalid-syntax: Invalid annotated assignment target
  --> generated_code/test_turn1.py:14:1
   |
12 | #### トレンドフォロー戦略
13 | - **目的**: 相場のトレンドを見極め、リスクを制限しつつ最大限の利益を得ることを目指しています。この戦略は、ガイドライン上の説明責任と明                                                              …
14 | - **ツール**: 短期（SMA20）と長期（SMA50）の移動平均線を用いて、価格の動きを捉えた売買シグナルを生成します。
   | ^^^^^^^^^^^^
15 |
16 | #### リスク管理
   |

invalid-syntax: Expected an expression
  --> generated_code/test_turn1.py:14:3
   |
12 | #### トレンドフォロー戦略
13 | - **目的**: 相場のトレンドを見極め、リスクを制限しつつ最大限の利益を得ることを目指しています。この戦略は、ガイドライン上の説明責任と明                                                              …
14 | - **ツール**: 短期（SMA20）と長期（SMA50）の移動平均線を用いて、価格の動きを捉えた売買シグナルを生成します。
   |   ^^
15 |
16 | #### リスク管理
   |

invalid-syntax: Expected an expression
  --> generated_code/test_turn1.py:14:10
   |
12 | #### トレンドフォロー戦略
13 | - **目的**: 相場のトレンドを見極め、リスクを制限しつつ最大限の利益を得ることを目指しています。この戦略は、ガイドライン上の説明責任と明                                                              …
14 | - **ツール**: 短期（SMA20）と長期（SMA50）の移動平均線を用いて、価格の動きを捉えた売買シグナルを生成します。
   |             ^
15 |
16 | #### リスク管理
   |

invalid-syntax: Got unexpected token （
  --> generated_code/test_turn1.py:14:14
   |
12 | #### トレンドフォロー戦略
13 | - **目的**: 相場のトレンドを見極め、リスクを制限しつつ最大限の利益を得ることを目指しています。この戦略は、ガイドライン上の説明責任と明                                                              …
14 | - **ツール**: 短期（SMA20）と長期（SMA50）の移動平均線を用いて、価格の動きを捉えた売買シグナルを生成します。
   |                   ^^
15 |
16 | #### リスク管理
   |

invalid-syntax: Got unexpected token ）
  --> generated_code/test_turn1.py:14:20
   |
12 | #### トレンドフォロー戦略
13 | - **目的**: 相場のトレンドを見極め、リスクを制限しつつ最大限の利益を得ることを目指しています。この戦略は、ガイドライン上の説明責任と明                                                              …
14 | - **ツール**: 短期（SMA20）と長期（SMA50）の移動平均線を用いて、価格の動きを捉えた売買シグナルを生成します。
   |                          ^^
15 |
16 | #### リスク管理
   |

invalid-syntax: Got unexpected token （
  --> generated_code/test_turn1.py:14:24
   |
12 | #### トレンドフォロー戦略
13 | - **目的**: 相場のトレンドを見極め、リスクを制限しつつ最大限の利益を得ることを目指しています。この戦略は、ガイドライン上の説明責任と明                                                              …
14 | - **ツール**: 短期（SMA20）と長期（SMA50）の移動平均線を用いて、価格の動きを捉えた売買シグナルを生成します。
   |                                  ^^
15 |
16 | #### リスク管理
   |

invalid-syntax: Got unexpected token ）
  --> generated_code/test_turn1.py:14:30
   |
12 | #### トレンドフォロー戦略
13 | - **目的**: 相場のトレンドを見極め、リスクを制限しつつ最大限の利益を得ることを目指しています。この戦略は、ガイドライン上の説明責任と明                                                              …
14 | - **ツール**: 短期（SMA20）と長期（SMA50）の移動平均線を用いて、価格の動きを捉えた売買シグナルを生成します。
   |                                         ^^
15 |
16 | #### リスク管理
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/test_turn1.py:14:41
   |
12 | #### トレンドフォロー戦略
13 | - **目的**: 相場のトレンドを見極め、リスクを制限しつつ最大限の利益を得ることを目指しています。この戦略は、ガイドライン上の説明責任と明                                                              …
14 | - **ツール**: 短期（SMA20）と長期（SMA50）の移動平均線を用いて、価格の動きを捉えた売買シグナルを生成します。
   |                                                               ^^
15 |
16 | #### リスク管理
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/test_turn1.py:14:63
   |
12 | #### トレンドフォロー戦略
13 | - **目的**: 相場のトレンドを見極め、リスクを制限しつつ最大限の利益を得ることを目指しています。この戦略は、ガイドライン上の説明責任と明                                                              …
14 | - **ツール**: 短期（SMA20）と長期（SMA50）の移動平均線を用いて、価格の動きを捉えた売買シグナルを生成します。
   |                                                                                                           ^^
15 |
16 | #### リスク管理
   |

invalid-syntax: Expected a statement
  --> generated_code/test_turn1.py:14:64
   |
12 | #### トレンドフォロー戦略
13 | - **目的**: 相場のトレンドを見極め、リスクを制限しつつ最大限の利益を得ることを目指しています。この戦略は、ガイドライン上の説明責任と明                                                              …
14 | - **ツール**: 短期（SMA20）と長期（SMA50）の移動平均線を用いて、価格の動きを捉えた売買シグナルを生成します。
   |                                                                                                             ^
15 |
16 | #### リスク管理
   |

invalid-syntax: Invalid annotated assignment target
  --> generated_code/test_turn1.py:17:1
   |
16 | #### リスク管理
17 | - **ストップロスと利益確定手法**: 目標価格の一定比率を基に、売買シグナルを生成することで損失を限定し、利益を確保します。このプロセスは                                                              …
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
18 | - **実装**: `risk_management.py`でリスク管理ロジックが実装されています。
   |

invalid-syntax: Expected an expression
  --> generated_code/test_turn1.py:17:3
   |
16 | #### リスク管理
17 | - **ストップロスと利益確定手法**: 目標価格の一定比率を基に、売買シグナルを生成することで損失を限定し、利益を確保します。このプロセスは                                                              …
   |   ^^
18 | - **実装**: `risk_management.py`でリスク管理ロジックが実装されています。
   |

invalid-syntax: Expected an expression
  --> generated_code/test_turn1.py:17:20
   |
16 | #### リスク管理
17 | - **ストップロスと利益確定手法**: 目標価格の一定比率を基に、売買シグナルを生成することで損失を限定し、利益を確保します。このプロセスは                                                              …
   |                                 ^
18 | - **実装**: `risk_management.py`でリスク管理ロジックが実装されています。
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/test_turn1.py:17:34
   |
16 | #### リスク管理
17 | - **ストップロスと利益確定手法**: 目標価格の一定比率を基に、売買シグナルを生成することで損失を限定し、利益を確保します。このプロセスは                                                              …
   |                                                           ^^
18 | - **実装**: `risk_management.py`でリスク管理ロジックが実装されています。
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/test_turn1.py:17:55
   |
16 | #### リスク管理
17 | - **ストップロスと利益確定手法**: 目標価格の一定比率を基に、売買シグナルを生成することで損失を限定し、利益を確保します。このプロセスは                                                              …
   |                                                                                                     ^^
18 | - **実装**: `risk_management.py`でリスク管理ロジックが実装されています。
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/test_turn1.py:17:64
   |
16 | #### リスク管理
17 | - **ストップロスと利益確定手法**: 目標価格の一定比率を基に、売買シグナルを生成することで損失を限定し、利益を確保します。このプロセスは                                                              …
   |                                                                                                                       ^^
18 | - **実装**: `risk_management.py`でリスク管理ロジックが実装されています。
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/test_turn1.py:17:72
   |
16 | …
17 | …スは、セキュリティと障害対応の観点から、各取引のリスクを管理するために設計されています。
   |       ^^
18 | …
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/test_turn1.py:17:89
   |
16 | …
17 | …に設計されています。
^  |
18 | …
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/test_turn1.py:17:113
   |
16 | …
17 | …
   ^^
18 | …
   |

invalid-syntax: Expected a statement
  --> generated_code/test_turn1.py:17:114
   |
16 | …
17 | …
   | ^
18 | …
   |

invalid-syntax: Invalid annotated assignment target
  --> generated_code/test_turn1.py:18:1
   |
16 | #### リスク管理
17 | - **ストップロスと利益確定手法**: 目標価格の一定比率を基に、売買シグナルを生成することで損失を限定し、利益を確保します。このプロセスは                                                              …
18 | - **実装**: `risk_management.py`でリスク管理ロジックが実装されています。
   | ^^^^^^^^^^
19 |
20 | ### 2. 使用技術
   |

invalid-syntax: Expected an expression
  --> generated_code/test_turn1.py:18:3
   |
16 | #### リスク管理
17 | - **ストップロスと利益確定手法**: 目標価格の一定比率を基に、売買シグナルを生成することで損失を限定し、利益を確保します。このプロセスは                                                              …
18 | - **実装**: `risk_management.py`でリスク管理ロジックが実装されています。
   |   ^^
19 |
20 | ### 2. 使用技術
   |

invalid-syntax: Expected an expression
  --> generated_code/test_turn1.py:18:9
   |
16 | #### リスク管理
17 | - **ストップロスと利益確定手法**: 目標価格の一定比率を基に、売買シグナルを生成することで損失を限定し、利益を確保します。このプロセスは                                                              …
18 | - **実装**: `risk_management.py`でリスク管理ロジックが実装されています。
   |           ^
19 |
20 | ### 2. 使用技術
   |

invalid-syntax: Got unexpected token `
  --> generated_code/test_turn1.py:18:11
   |
16 | #### リスク管理
17 | - **ストップロスと利益確定手法**: 目標価格の一定比率を基に、売買シグナルを生成することで損失を限定し、利益を確保します。このプロセスは                                                              …
18 | - **実装**: `risk_management.py`でリスク管理ロジックが実装されています。
   |             ^
19 |
20 | ### 2. 使用技術
   |

invalid-syntax: Got unexpected token `
  --> generated_code/test_turn1.py:18:30
   |
16 | #### リスク管理
17 | - **ストップロスと利益確定手法**: 目標価格の一定比率を基に、売買シグナルを生成することで損失を限定し、利益を確保します。このプロセスは                                                              …
18 | - **実装**: `risk_management.py`でリスク管理ロジックが実装されています。
   |                                ^
19 |
20 | ### 2. 使用技術
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/test_turn1.py:18:50
   |
16 | #### リスク管理
17 | - **ストップロスと利益確定手法**: 目標価格の一定比率を基に、売買シグナルを生成することで損失を限定し、利益を確保します。このプロセスは                                                              …
18 | - **実装**: `risk_management.py`でリスク管理ロジックが実装されています。
   |                                                                       ^^
19 |
20 | ### 2. 使用技術
   |

invalid-syntax: Expected a statement
  --> generated_code/test_turn1.py:18:51
   |
16 | #### リスク管理
17 | - **ストップロスと利益確定手法**: 目標価格の一定比率を基に、売買シグナルを生成することで損失を限定し、利益を確保します。このプロセスは                                                              …
18 | - **実装**: `risk_management.py`でリスク管理ロジックが実装されています。
   |                                                                         ^
19 |
20 | ### 2. 使用技術
   |

invalid-syntax: Got unexpected token （
  --> generated_code/test_turn1.py:23:26
   |
22 | #### 技術スタック
23 | - Python言語の堅牢性とその豊富なライブラリ（pandas、numpy、ta-lib）を用いてデータ操作とテクニカル分析を行います。
   |                                           ^^
24 | - Docker上でのAirflowを用いてスケジューリングし、トレード履歴の管理とプロセス自動化を行います。
25 | - noctria_guiにより、すべての機能をGUI管理ツールで一元管理し、ユーザーエクスペリエンスの向上を図ります。
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/test_turn1.py:23:33
   |
22 | #### 技術スタック
23 | - Python言語の堅牢性とその豊富なライブラリ（pandas、numpy、ta-lib）を用いてデータ操作とテクニカル分析を行います。
   |                                                   ^^
24 | - Docker上でのAirflowを用いてスケジューリングし、トレード履歴の管理とプロセス自動化を行います。
25 | - noctria_guiにより、すべての機能をGUI管理ツールで一元管理し、ユーザーエクスペリエンスの向上を図ります。
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/test_turn1.py:23:39
   |
22 | #### 技術スタック
23 | - Python言語の堅牢性とその豊富なライブラリ（pandas、numpy、ta-lib）を用いてデータ操作とテクニカル分析を行います。
   |                                                          ^^
24 | - Docker上でのAirflowを用いてスケジューリングし、トレード履歴の管理とプロセス自動化を行います。
25 | - noctria_guiにより、すべての機能をGUI管理ツールで一元管理し、ユーザーエクスペリエンスの向上を図ります。
   |

invalid-syntax: Got unexpected token ）
  --> generated_code/test_turn1.py:23:46
   |
22 | #### 技術スタック
23 | - Python言語の堅牢性とその豊富なライブラリ（pandas、numpy、ta-lib）を用いてデータ操作とテクニカル分析を行います。
   |                                                                  ^^
24 | - Docker上でのAirflowを用いてスケジューリングし、トレード履歴の管理とプロセス自動化を行います。
25 | - noctria_guiにより、すべての機能をGUI管理ツールで一元管理し、ユーザーエクスペリエンスの向上を図ります。
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/test_turn1.py:23:69
   |
22 | #### 技術スタック
23 | - Python言語の堅牢性とその豊富なライブラリ（pandas、numpy、ta-lib）を用いてデータ操作とテクニカル分析を行います。
   |                                                                                                                ^^
24 | - Docker上でのAirflowを用いてスケジューリングし、トレード履歴の管理とプロセス自動化を行います。
25 | - noctria_guiにより、すべての機能をGUI管理ツールで一元管理し、ユーザーエクスペリエンスの向上を図ります。
   |

invalid-syntax: Expected a statement
  --> generated_code/test_turn1.py:23:70
   |
22 | #### 技術スタック
23 | - Python言語の堅牢性とその豊富なライブラリ（pandas、numpy、ta-lib）を用いてデータ操作とテクニカル分析を行います。
   |                                                                                                                  ^
24 | - Docker上でのAirflowを用いてスケジューリングし、トレード履歴の管理とプロセス自動化を行います。
25 | - noctria_guiにより、すべての機能をGUI管理ツールで一元管理し、ユーザーエクスペリエンスの向上を図ります。
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/test_turn1.py:24:32
   |
22 | #### 技術スタック
23 | - Python言語の堅牢性とその豊富なライブラリ（pandas、numpy、ta-lib）を用いてデータ操作とテクニカル分析を行います。
24 | - Docker上でのAirflowを用いてスケジューリングし、トレード履歴の管理とプロセス自動化を行います。
   |                                                ^^
25 | - noctria_guiにより、すべての機能をGUI管理ツールで一元管理し、ユーザーエクスペリエンスの向上を図ります。
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/test_turn1.py:24:55
   |
22 | #### 技術スタック
23 | - Python言語の堅牢性とその豊富なライブラリ（pandas、numpy、ta-lib）を用いてデータ操作とテクニカル分析を行います。
24 | - Docker上でのAirflowを用いてスケジューリングし、トレード履歴の管理とプロセス自動化を行います。
   |                                                                                              ^^
25 | - noctria_guiにより、すべての機能をGUI管理ツールで一元管理し、ユーザーエクスペリエンスの向上を図ります。
   |

invalid-syntax: Expected a statement
  --> generated_code/test_turn1.py:24:56
   |
22 | #### 技術スタック
23 | - Python言語の堅牢性とその豊富なライブラリ（pandas、numpy、ta-lib）を用いてデータ操作とテクニカル分析を行います。
24 | - Docker上でのAirflowを用いてスケジューリングし、トレード履歴の管理とプロセス自動化を行います。
   |                                                                                                ^
25 | - noctria_guiにより、すべての機能をGUI管理ツールで一元管理し、ユーザーエクスペリエンスの向上を図ります。
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/test_turn1.py:25:17
   |
23 | - Python言語の堅牢性とその豊富なライブラリ（pandas、numpy、ta-lib）を用いてデータ操作とテクニカル分析を行います。
24 | - Docker上でのAirflowを用いてスケジューリングし、トレード履歴の管理とプロセス自動化を行います。
25 | - noctria_guiにより、すべての機能をGUI管理ツールで一元管理し、ユーザーエクスペリエンスの向上を図ります。
   |                    ^^
26 |
27 | ### 3. 実装ファイル
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/test_turn1.py:25:39
   |
23 | - Python言語の堅牢性とその豊富なライブラリ（pandas、numpy、ta-lib）を用いてデータ操作とテクニカル分析を行います。
24 | - Docker上でのAirflowを用いてスケジューリングし、トレード履歴の管理とプロセス自動化を行います。
25 | - noctria_guiにより、すべての機能をGUI管理ツールで一元管理し、ユーザーエクスペリエンスの向上を図ります。
   |                                                             ^^
26 |
27 | ### 3. 実装ファイル
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/test_turn1.py:25:60
   |
23 | - Python言語の堅牢性とその豊富なライブラリ（pandas、numpy、ta-lib）を用いてデータ操作とテクニカル分析を行います。
24 | - Docker上でのAirflowを用いてスケジューリングし、トレード履歴の管理とプロセス自動化を行います。
25 | - noctria_guiにより、すべての機能をGUI管理ツールで一元管理し、ユーザーエクスペリエンスの向上を図ります。
   |                                                                                                       ^^
26 |
27 | ### 3. 実装ファイル
   |

invalid-syntax: Expected a statement
  --> generated_code/test_turn1.py:25:61
   |
23 | - Python言語の堅牢性とその豊富なライブラリ（pandas、numpy、ta-lib）を用いてデータ操作とテクニカル分析を行います。
24 | - Docker上でのAirflowを用いてスケジューリングし、トレード履歴の管理とプロセス自動化を行います。
25 | - noctria_guiにより、すべての機能をGUI管理ツールで一元管理し、ユーザーエクスペリエンスの向上を図ります。
   |                                                                                                         ^
26 |
27 | ### 3. 実装ファイル
   |

invalid-syntax: Invalid annotated assignment target
  --> generated_code/test_turn1.py:30:1
   |
29 | #### `strategy.py`
30 | - **目的**: トレードシグナルの生成を中心に実施。コード内での注釈が各プロセスの目的とその動機を詳細に説明しています。
   | ^^^^^^^^^^
31 |   
32 | ```python
   |

invalid-syntax: Expected an expression
  --> generated_code/test_turn1.py:30:3
   |
29 | #### `strategy.py`
30 | - **目的**: トレードシグナルの生成を中心に実施。コード内での注釈が各プロセスの目的とその動機を詳細に説明しています。
   |   ^^
31 |   
32 | ```python
   |

invalid-syntax: Expected an expression
  --> generated_code/test_turn1.py:30:9
   |
29 | #### `strategy.py`
30 | - **目的**: トレードシグナルの生成を中心に実施。コード内での注釈が各プロセスの目的とその動機を詳細に説明しています。
   |           ^
31 |   
32 | ```python
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/test_turn1.py:30:28
   |
29 | #### `strategy.py`
30 | - **目的**: トレードシグナルの生成を中心に実施。コード内での注釈が各プロセスの目的とその動機を詳細に説明しています。
   |                                               ^^
31 |   
32 | ```python
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/test_turn1.py:30:62
   |
29 | #### `strategy.py`
30 | - **目的**: トレードシグナルの生成を中心に実施。コード内での注釈が各プロセスの目的とその動機を詳細に説明しています。
   |                                                                                                                   ^^
31 |   
32 | ```python
   |

invalid-syntax: Expected a statement
  --> generated_code/test_turn1.py:30:63
   |
29 | #### `strategy.py`
30 | - **目的**: トレードシグナルの生成を中心に実施。コード内での注釈が各プロセスの目的とその動機を詳細に説明しています。
   |                                                                                                                     ^
31 |   
32 | ```python
   |

invalid-syntax: Got unexpected token `
  --> generated_code/test_turn1.py:32:1
   |
30 | - **目的**: トレードシグナルの生成を中心に実施。コード内での注釈が各プロセスの目的とその動機を詳細に説明しています。
31 |   
32 | ```python
   | ^
33 | import pandas as pd
34 | import numpy as np
   |

invalid-syntax: Got unexpected token `
  --> generated_code/test_turn1.py:32:2
   |
30 | - **目的**: トレードシグナルの生成を中心に実施。コード内での注釈が各プロセスの目的とその動機を詳細に説明しています。
31 |   
32 | ```python
   |  ^
33 | import pandas as pd
34 | import numpy as np
   |

invalid-syntax: Got unexpected token `
  --> generated_code/test_turn1.py:32:3
   |
30 | - **目的**: トレードシグナルの生成を中心に実施。コード内での注釈が各プロセスの目的とその動機を詳細に説明しています。
31 |   
32 | ```python
   |   ^
33 | import pandas as pd
34 | import numpy as np
   |

invalid-syntax: Got unexpected token `
  --> generated_code/test_turn1.py:49:1
   |
48 |     return buy_signal, sell_signal
49 | ```
   | ^
50 |
51 | #### `risk_management.py`
   |

invalid-syntax: Got unexpected token `
  --> generated_code/test_turn1.py:49:2
   |
48 |     return buy_signal, sell_signal
49 | ```
   |  ^
50 |
51 | #### `risk_management.py`
   |

invalid-syntax: Got unexpected token `
  --> generated_code/test_turn1.py:49:3
   |
48 |     return buy_signal, sell_signal
49 | ```
   |   ^
50 |
51 | #### `risk_management.py`
   |

invalid-syntax: Expected a statement
  --> generated_code/test_turn1.py:49:4
   |
48 |     return buy_signal, sell_signal
49 | ```
   |    ^
50 |
51 | #### `risk_management.py`
   |

invalid-syntax: Invalid annotated assignment target
  --> generated_code/test_turn1.py:52:1
   |
51 | #### `risk_management.py`
52 | - **目的**: リスクを管理し、ストップロスと利益確定を判断する。ガイドラインに従い、安全で効果的なリスク管理を実装します。
   | ^^^^^^^^^^
53 |   
54 | ```python
   |

invalid-syntax: Expected an expression
  --> generated_code/test_turn1.py:52:3
   |
51 | #### `risk_management.py`
52 | - **目的**: リスクを管理し、ストップロスと利益確定を判断する。ガイドラインに従い、安全で効果的なリスク管理を実装します。
   |   ^^
53 |   
54 | ```python
   |

invalid-syntax: Expected an expression
  --> generated_code/test_turn1.py:52:9
   |
51 | #### `risk_management.py`
52 | - **目的**: リスクを管理し、ストップロスと利益確定を判断する。ガイドラインに従い、安全で効果的なリスク管理を実装します。
   |           ^
53 |   
54 | ```python
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/test_turn1.py:52:18
   |
51 | #### `risk_management.py`
52 | - **目的**: リスクを管理し、ストップロスと利益確定を判断する。ガイドラインに従い、安全で効果的なリスク管理を実装します。
   |                           ^^
53 |   
54 | ```python
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/test_turn1.py:52:35
   |
51 | #### `risk_management.py`
52 | - **目的**: リスクを管理し、ストップロスと利益確定を判断する。ガイドラインに従い、安全で効果的なリスク管理を実装します。
   |                                                             ^^
53 |   
54 | ```python
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/test_turn1.py:52:45
   |
51 | #### `risk_management.py`
52 | - **目的**: リスクを管理し、ストップロスと利益確定を判断する。ガイドラインに従い、安全で効果的なリスク管理を実装します。
   |                                                                                 ^^
53 |   
54 | ```python
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/test_turn1.py:52:64
   |
51 | #### `risk_management.py`
52 | - **目的**: リスクを管理し、ストップロスと利益確定を判断する。ガイドラインに従い、安全で効果的なリスク管理を実装します。
   |                                                                                                                       ^^
53 |   
54 | ```python
   |

invalid-syntax: Expected a statement
  --> generated_code/test_turn1.py:52:65
   |
51 | #### `risk_management.py`
52 | - **目的**: リスクを管理し、ストップロスと利益確定を判断する。ガイドラインに従い、安全で効果的なリスク管理を実装します。
   |                                                                                                                         ^
53 |   
54 | ```python
   |

invalid-syntax: Got unexpected token `
  --> generated_code/test_turn1.py:54:1
   |
52 | - **目的**: リスクを管理し、ストップロスと利益確定を判断する。ガイドラインに従い、安全で効果的なリスク管理を実装します。
53 |   
54 | ```python
   | ^
55 | def risk_management(target_price, current_price):
56 |     """
   |

invalid-syntax: Got unexpected token `
  --> generated_code/test_turn1.py:54:2
   |
52 | - **目的**: リスクを管理し、ストップロスと利益確定を判断する。ガイドラインに従い、安全で効果的なリスク管理を実装します。
53 |   
54 | ```python
   |  ^
55 | def risk_management(target_price, current_price):
56 |     """
   |

invalid-syntax: Got unexpected token `
  --> generated_code/test_turn1.py:54:3
   |
52 | - **目的**: リスクを管理し、ストップロスと利益確定を判断する。ガイドラインに従い、安全で効果的なリスク管理を実装します。
53 |   
54 | ```python
   |   ^
55 | def risk_management(target_price, current_price):
56 |     """
   |

invalid-syntax: Got unexpected token `
  --> generated_code/test_turn1.py:68:1
   |
66 |         return "take_profit"
67 |     return "hold"
68 | ```
   | ^
69 |
70 | #### `execution.py`
   |

invalid-syntax: Got unexpected token `
  --> generated_code/test_turn1.py:68:2
   |
66 |         return "take_profit"
67 |     return "hold"
68 | ```
   |  ^
69 |
70 | #### `execution.py`
   |

invalid-syntax: Got unexpected token `
  --> generated_code/test_turn1.py:68:3
   |
66 |         return "take_profit"
67 |     return "hold"
68 | ```
   |   ^
69 |
70 | #### `execution.py`
   |

invalid-syntax: Expected a statement
  --> generated_code/test_turn1.py:68:4
   |
66 |         return "take_profit"
67 |     return "hold"
68 | ```
   |    ^
69 |
70 | #### `execution.py`
   |

invalid-syntax: Invalid annotated assignment target
  --> generated_code/test_turn1.py:71:1
   |
70 | #### `execution.py`
71 | - **目的**: 取引シグナルに基づき、実際の注文を実行します。このプロセスはNoctriaの中心であるsrc/core/king_noctria.pyに統合されています。
   | ^^^^^^^^^^
72 |   
73 | ```python
   |

invalid-syntax: Expected an expression
  --> generated_code/test_turn1.py:71:3
   |
70 | #### `execution.py`
71 | - **目的**: 取引シグナルに基づき、実際の注文を実行します。このプロセスはNoctriaの中心であるsrc/core/king_noctria.pyに統合されています。
   |   ^^
72 |   
73 | ```python
   |

invalid-syntax: Expected an expression
  --> generated_code/test_turn1.py:71:9
   |
70 | #### `execution.py`
71 | - **目的**: 取引シグナルに基づき、実際の注文を実行します。このプロセスはNoctriaの中心であるsrc/core/king_noctria.pyに統合されています。
   |           ^
72 |   
73 | ```python
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/test_turn1.py:71:21
   |
70 | #### `execution.py`
71 | - **目的**: 取引シグナルに基づき、実際の注文を実行します。このプロセスはNoctriaの中心であるsrc/core/king_noctria.pyに統合されています。
   |                                 ^^
72 |   
73 | ```python
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/test_turn1.py:71:33
   |
70 | #### `execution.py`
71 | - **目的**: 取引シグナルに基づき、実際の注文を実行します。このプロセスはNoctriaの中心であるsrc/core/king_noctria.pyに統合されています。
   |                                                         ^^
72 |   
73 | ```python
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/test_turn1.py:71:87
   |
70 | …
71 | …octria.pyに統合されています。
   |                             ^^
72 | …
73 | …
   |

invalid-syntax: Expected a statement
  --> generated_code/test_turn1.py:71:88
   |
70 | …
71 | …ctria.pyに統合されています。
   |                              ^
72 | …
73 | …
   |

invalid-syntax: Got unexpected token `
  --> generated_code/test_turn1.py:73:1
   |
71 | - **目的**: 取引シグナルに基づき、実際の注文を実行します。このプロセスはNoctriaの中心であるsrc/core/king_noctria.pyに統合されています。
72 |   
73 | ```python
   | ^
74 | def execute_order(signal):
75 |     """
   |

invalid-syntax: Got unexpected token `
  --> generated_code/test_turn1.py:73:2
   |
71 | - **目的**: 取引シグナルに基づき、実際の注文を実行します。このプロセスはNoctriaの中心であるsrc/core/king_noctria.pyに統合されています。
72 |   
73 | ```python
   |  ^
74 | def execute_order(signal):
75 |     """
   |

invalid-syntax: Got unexpected token `
  --> generated_code/test_turn1.py:73:3
   |
71 | - **目的**: 取引シグナルに基づき、実際の注文を実行します。このプロセスはNoctriaの中心であるsrc/core/king_noctria.pyに統合されています。
72 |   
73 | ```python
   |   ^
74 | def execute_order(signal):
75 |     """
   |

invalid-syntax: Got unexpected token `
  --> generated_code/test_turn1.py:86:1
   |
84 |     elif signal == "take_profit":
85 |         pass
86 | ```
   | ^
87 |
88 | ### 4. ガイドライン準拠
   |

invalid-syntax: Got unexpected token `
  --> generated_code/test_turn1.py:86:2
   |
84 |     elif signal == "take_profit":
85 |         pass
86 | ```
   |  ^
87 |
88 | ### 4. ガイドライン準拠
   |

invalid-syntax: Got unexpected token `
  --> generated_code/test_turn1.py:86:3
   |
84 |     elif signal == "take_profit":
85 |         pass
86 | ```
   |   ^
87 |
88 | ### 4. ガイドライン準拠
   |

invalid-syntax: Expected a statement
  --> generated_code/test_turn1.py:86:4
   |
84 |     elif signal == "take_profit":
85 |         pass
86 | ```
   |    ^
87 |
88 | ### 4. ガイドライン準拠
   |

invalid-syntax: Invalid annotated assignment target
  --> generated_code/test_turn1.py:90:1
   |
88 | ### 4. ガイドライン準拠
89 |
90 | - **バージョン管理**: コードのバージョンを管理し、リリースノートを付けて変更履歴を記録します。
   | ^^^^^^^^^^^^^^^^^^^^
91 | - **説明責任コメント**: 各プロセスで目的とロジックを詳細に説明し、説明責任を果たします。
92 | - **セキュリティ考慮**: 取引API通信では暗号化と認証によるセキュリティ対策を講じています。
   |

invalid-syntax: Expected an expression
  --> generated_code/test_turn1.py:90:3
   |
88 | ### 4. ガイドライン準拠
89 |
90 | - **バージョン管理**: コードのバージョンを管理し、リリースノートを付けて変更履歴を記録します。
   |   ^^
91 | - **説明責任コメント**: 各プロセスで目的とロジックを詳細に説明し、説明責任を果たします。
92 | - **セキュリティ考慮**: 取引API通信では暗号化と認証によるセキュリティ対策を講じています。
   |

invalid-syntax: Expected an expression
  --> generated_code/test_turn1.py:90:14
   |
88 | ### 4. ガイドライン準拠
89 |
90 | - **バージョン管理**: コードのバージョンを管理し、リリースノートを付けて変更履歴を記録します。
   |                     ^
91 | - **説明責任コメント**: 各プロセスで目的とロジックを詳細に説明し、説明責任を果たします。
92 | - **セキュリティ考慮**: 取引API通信では暗号化と認証によるセキュリティ対策を講じています。
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/test_turn1.py:90:29
   |
88 | ### 4. ガイドライン準拠
89 |
90 | - **バージョン管理**: コードのバージョンを管理し、リリースノートを付けて変更履歴を記録します。
   |                                                 ^^
91 | - **説明責任コメント**: 各プロセスで目的とロジックを詳細に説明し、説明責任を果たします。
92 | - **セキュリティ考慮**: 取引API通信では暗号化と認証によるセキュリティ対策を講じています。
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/test_turn1.py:90:51
   |
88 | ### 4. ガイドライン準拠
89 |
90 | - **バージョン管理**: コードのバージョンを管理し、リリースノートを付けて変更履歴を記録します。
   |                                                                                             ^^
91 | - **説明責任コメント**: 各プロセスで目的とロジックを詳細に説明し、説明責任を果たします。
92 | - **セキュリティ考慮**: 取引API通信では暗号化と認証によるセキュリティ対策を講じています。
   |

invalid-syntax: Expected a statement
  --> generated_code/test_turn1.py:90:52
   |
88 | ### 4. ガイドライン準拠
89 |
90 | - **バージョン管理**: コードのバージョンを管理し、リリースノートを付けて変更履歴を記録します。
   |                                                                                               ^
91 | - **説明責任コメント**: 各プロセスで目的とロジックを詳細に説明し、説明責任を果たします。
92 | - **セキュリティ考慮**: 取引API通信では暗号化と認証によるセキュリティ対策を講じています。
   |

invalid-syntax: Invalid annotated assignment target
  --> generated_code/test_turn1.py:91:1
   |
90 | - **バージョン管理**: コードのバージョンを管理し、リリースノートを付けて変更履歴を記録します。
91 | - **説明責任コメント**: 各プロセスで目的とロジックを詳細に説明し、説明責任を果たします。
   | ^^^^^^^^^^^^^^^^^^^^^^
92 | - **セキュリティ考慮**: 取引API通信では暗号化と認証によるセキュリティ対策を講じています。
93 | - **A/Bテスト**: 複数の戦略実装を比較し、その効果を検証します。また、すべての取り組みを履歴DBに記録し、開発の透明性を確保します。
   |

invalid-syntax: Expected an expression
  --> generated_code/test_turn1.py:91:3
   |
90 | - **バージョン管理**: コードのバージョンを管理し、リリースノートを付けて変更履歴を記録します。
91 | - **説明責任コメント**: 各プロセスで目的とロジックを詳細に説明し、説明責任を果たします。
   |   ^^
92 | - **セキュリティ考慮**: 取引API通信では暗号化と認証によるセキュリティ対策を講じています。
93 | - **A/Bテスト**: 複数の戦略実装を比較し、その効果を検証します。また、すべての取り組みを履歴DBに記録し、開発の透明性を確保します。
   |

invalid-syntax: Expected an expression
  --> generated_code/test_turn1.py:91:15
   |
90 | - **バージョン管理**: コードのバージョンを管理し、リリースノートを付けて変更履歴を記録します。
91 | - **説明責任コメント**: 各プロセスで目的とロジックを詳細に説明し、説明責任を果たします。
   |                       ^
92 | - **セキュリティ考慮**: 取引API通信では暗号化と認証によるセキュリティ対策を講じています。
93 | - **A/Bテスト**: 複数の戦略実装を比較し、その効果を検証します。また、すべての取り組みを履歴DBに記録し、開発の透明性を確保します。
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/test_turn1.py:91:37
   |
90 | - **バージョン管理**: コードのバージョンを管理し、リリースノートを付けて変更履歴を記録します。
91 | - **説明責任コメント**: 各プロセスで目的とロジックを詳細に説明し、説明責任を果たします。
   |                                                                 ^^
92 | - **セキュリティ考慮**: 取引API通信では暗号化と認証によるセキュリティ対策を講じています。
93 | - **A/Bテスト**: 複数の戦略実装を比較し、その効果を検証します。また、すべての取り組みを履歴DBに記録し、開発の透明性を確保します。
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/test_turn1.py:91:48
   |
90 | - **バージョン管理**: コードのバージョンを管理し、リリースノートを付けて変更履歴を記録します。
91 | - **説明責任コメント**: 各プロセスで目的とロジックを詳細に説明し、説明責任を果たします。
   |                                                                                       ^^
92 | - **セキュリティ考慮**: 取引API通信では暗号化と認証によるセキュリティ対策を講じています。
93 | - **A/Bテスト**: 複数の戦略実装を比較し、その効果を検証します。また、すべての取り組みを履歴DBに記録し、開発の透明性を確保します。
   |

invalid-syntax: Expected a statement
  --> generated_code/test_turn1.py:91:49
   |
90 | - **バージョン管理**: コードのバージョンを管理し、リリースノートを付けて変更履歴を記録します。
91 | - **説明責任コメント**: 各プロセスで目的とロジックを詳細に説明し、説明責任を果たします。
   |                                                                                         ^
92 | - **セキュリティ考慮**: 取引API通信では暗号化と認証によるセキュリティ対策を講じています。
93 | - **A/Bテスト**: 複数の戦略実装を比較し、その効果を検証します。また、すべての取り組みを履歴DBに記録し、開発の透明性を確保します。
   |

invalid-syntax: Invalid annotated assignment target
  --> generated_code/test_turn1.py:92:1
   |
90 | - **バージョン管理**: コードのバージョンを管理し、リリースノートを付けて変更履歴を記録します。
91 | - **説明責任コメント**: 各プロセスで目的とロジックを詳細に説明し、説明責任を果たします。
92 | - **セキュリティ考慮**: 取引API通信では暗号化と認証によるセキュリティ対策を講じています。
   | ^^^^^^^^^^^^^^^^^^^^^^
93 | - **A/Bテスト**: 複数の戦略実装を比較し、その効果を検証します。また、すべての取り組みを履歴DBに記録し、開発の透明性を確保します。
   |

invalid-syntax: Expected an expression
  --> generated_code/test_turn1.py:92:3
   |
90 | - **バージョン管理**: コードのバージョンを管理し、リリースノートを付けて変更履歴を記録します。
91 | - **説明責任コメント**: 各プロセスで目的とロジックを詳細に説明し、説明責任を果たします。
92 | - **セキュリティ考慮**: 取引API通信では暗号化と認証によるセキュリティ対策を講じています。
   |   ^^
93 | - **A/Bテスト**: 複数の戦略実装を比較し、その効果を検証します。また、すべての取り組みを履歴DBに記録し、開発の透明性を確保します。
   |

invalid-syntax: Expected an expression
  --> generated_code/test_turn1.py:92:15
   |
90 | - **バージョン管理**: コードのバージョンを管理し、リリースノートを付けて変更履歴を記録します。
91 | - **説明責任コメント**: 各プロセスで目的とロジックを詳細に説明し、説明責任を果たします。
92 | - **セキュリティ考慮**: 取引API通信では暗号化と認証によるセキュリティ対策を講じています。
   |                       ^
93 | - **A/Bテスト**: 複数の戦略実装を比較し、その効果を検証します。また、すべての取り組みを履歴DBに記録し、開発の透明性を確保します。
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/test_turn1.py:92:50
   |
90 | - **バージョン管理**: コードのバージョンを管理し、リリースノートを付けて変更履歴を記録します。
91 | - **説明責任コメント**: 各プロセスで目的とロジックを詳細に説明し、説明責任を果たします。
92 | - **セキュリティ考慮**: 取引API通信では暗号化と認証によるセキュリティ対策を講じています。
   |                                                                                        ^^
93 | - **A/Bテスト**: 複数の戦略実装を比較し、その効果を検証します。また、すべての取り組みを履歴DBに記録し、開発の透明性を確保します。
   |

invalid-syntax: Expected a statement
  --> generated_code/test_turn1.py:92:51
   |
90 | - **バージョン管理**: コードのバージョンを管理し、リリースノートを付けて変更履歴を記録します。
91 | - **説明責任コメント**: 各プロセスで目的とロジックを詳細に説明し、説明責任を果たします。
92 | - **セキュリティ考慮**: 取引API通信では暗号化と認証によるセキュリティ対策を講じています。
   |                                                                                          ^
93 | - **A/Bテスト**: 複数の戦略実装を比較し、その効果を検証します。また、すべての取り組みを履歴DBに記録し、開発の透明性を確保します。
   |

invalid-syntax: Invalid annotated assignment target
  --> generated_code/test_turn1.py:93:1
   |
91 | - **説明責任コメント**: 各プロセスで目的とロジックを詳細に説明し、説明責任を果たします。
92 | - **セキュリティ考慮**: 取引API通信では暗号化と認証によるセキュリティ対策を講じています。
93 | - **A/Bテスト**: 複数の戦略実装を比較し、その効果を検証します。また、すべての取り組みを履歴DBに記録し、開発の透明性を確保します。
   | ^^^^^^^^^^^^^^^
94 |
95 | この設計が、トレンドに追随しつつ効率的な取引を可能にするための基盤を築き、将来的なシステム拡張やクラウドへの移行を容易にします。ガイド                                                                  …
   |

invalid-syntax: Expected an expression
  --> generated_code/test_turn1.py:93:3
   |
91 | - **説明責任コメント**: 各プロセスで目的とロジックを詳細に説明し、説明責任を果たします。
92 | - **セキュリティ考慮**: 取引API通信では暗号化と認証によるセキュリティ対策を講じています。
93 | - **A/Bテスト**: 複数の戦略実装を比較し、その効果を検証します。また、すべての取り組みを履歴DBに記録し、開発の透明性を確保します。
   |   ^^
94 |
95 | この設計が、トレンドに追随しつつ効率的な取引を可能にするための基盤を築き、将来的なシステム拡張やクラウドへの移行を容易にします。ガイド                                                                  …
   |

invalid-syntax: Expected an expression
  --> generated_code/test_turn1.py:93:13
   |
91 | - **説明責任コメント**: 各プロセスで目的とロジックを詳細に説明し、説明責任を果たします。
92 | - **セキュリティ考慮**: 取引API通信では暗号化と認証によるセキュリティ対策を講じています。
93 | - **A/Bテスト**: 複数の戦略実装を比較し、その効果を検証します。また、すべての取り組みを履歴DBに記録し、開発の透明性を確保します。
   |                ^
94 |
95 | この設計が、トレンドに追随しつつ効率的な取引を可能にするための基盤を築き、将来的なシステム拡張やクラウドへの移行を容易にします。ガイド                                                                  …
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/test_turn1.py:93:26
   |
91 | - **説明責任コメント**: 各プロセスで目的とロジックを詳細に説明し、説明責任を果たします。
92 | - **セキュリティ考慮**: 取引API通信では暗号化と認証によるセキュリティ対策を講じています。
93 | - **A/Bテスト**: 複数の戦略実装を比較し、その効果を検証します。また、すべての取り組みを履歴DBに記録し、開発の透明性を確保します。
   |                                        ^^
94 |
95 | この設計が、トレンドに追随しつつ効率的な取引を可能にするための基盤を築き、将来的なシステム拡張やクラウドへの移行を容易にします。ガイド                                                                  …
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/test_turn1.py:93:37
   |
91 | - **説明責任コメント**: 各プロセスで目的とロジックを詳細に説明し、説明責任を果たします。
92 | - **セキュリティ考慮**: 取引API通信では暗号化と認証によるセキュリティ対策を講じています。
93 | - **A/Bテスト**: 複数の戦略実装を比較し、その効果を検証します。また、すべての取り組みを履歴DBに記録し、開発の透明性を確保します。
   |                                                              ^^
94 |
95 | この設計が、トレンドに追随しつつ効率的な取引を可能にするための基盤を築き、将来的なシステム拡張やクラウドへの移行を容易にします。ガイド                                                                  …
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/test_turn1.py:93:40
   |
91 | - **説明責任コメント**: 各プロセスで目的とロジックを詳細に説明し、説明責任を果たします。
92 | - **セキュリティ考慮**: 取引API通信では暗号化と認証によるセキュリティ対策を講じています。
93 | - **A/Bテスト**: 複数の戦略実装を比較し、その効果を検証します。また、すべての取り組みを履歴DBに記録し、開発の透明性を確保します。
   |                                                                    ^^
94 |
95 | この設計が、トレンドに追随しつつ効率的な取引を可能にするための基盤を築き、将来的なシステム拡張やクラウドへの移行を容易にします。ガイド                                                                  …
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/test_turn1.py:93:58
   |
91 | - **説明責任コメント**: 各プロセスで目的とロジックを詳細に説明し、説明責任を果たします。
92 | - **セキュリティ考慮**: 取引API通信では暗号化と認証によるセキュリティ対策を講じています。
93 | - **A/Bテスト**: 複数の戦略実装を比較し、その効果を検証します。また、すべての取り組みを履歴DBに記録し、開発の透明性を確保します。
   |                                                                                                      ^^
94 |
95 | この設計が、トレンドに追随しつつ効率的な取引を可能にするための基盤を築き、将来的なシステム拡張やクラウドへの移行を容易にします。ガイド                                                                  …
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/test_turn1.py:93:71
   |
91 | - **説明責任コメント**: 各プロセスで目的とロジックを詳細に説明し、説明責任を果たします。
92 | - **セキュリティ考慮**: 取引API通信では暗号化と認証によるセキュリティ対策を講じています。
93 | - **A/Bテスト**: 複数の戦略実装を比較し、その効果を検証します。また、すべての取り組みを履歴DBに記録し、開発の透明性を確保します。
   |                                                                                                                                ^^
94 |
95 | この設計が、トレンドに追随しつつ効率的な取引を可能にするための基盤を築き、将来的なシステム拡張やクラウドへの移行を容易にします。ガイド                                                                  …
   |

invalid-syntax: Expected a statement
  --> generated_code/test_turn1.py:93:72
   |
91 | …
92 | …
93 | …性を確保します。
   |                   ^
94 | …
95 | …。ガイドラインに従った一貫した設計により、プロセスの改善と透明性が確保されます。
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/test_turn1.py:95:6
   |
93 | - **A/Bテスト**: 複数の戦略実装を比較し、その効果を検証します。また、すべての取り組みを履歴DBに記録し、開発の透明性を確保します。
94 |
95 | この設計が、トレンドに追随しつつ効率的な取引を可能にするための基盤を築き、将来的なシステム拡張やクラウドへの移行を容易にします。ガイド                                                                  …
   |           ^^
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/test_turn1.py:95:37
   |
93 | - **A/Bテスト**: 複数の戦略実装を比較し、その効果を検証します。また、すべての取り組みを履歴DBに記録し、開発の透明性を確保します。
94 |
95 | この設計が、トレンドに追随しつつ効率的な取引を可能にするための基盤を築き、将来的なシステム拡張やクラウドへの移行を容易にします。ガイド                                                                  …
   |                                                                         ^^
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/test_turn1.py:95:64
   |
93 | - **A/Bテスト**: 複数の戦略実装を比較し、その効果を検証します。また、すべての取り組みを履歴DBに記録し、開発の透明性を確保します。
94 |
95 | この設計が、トレンドに追随しつつ効率的な取引を可能にするための基盤を築き、将来的なシステム拡張やクラウドへの移行を容易にします。ガイド                                                                  …
   |                                                                                                                               ^^
   |

invalid-syntax: Got unexpected token 、
  --> generated_code/test_turn1.py:95:84
   |
93 | …
94 | …
95 | …す。
^  |
   |

invalid-syntax: Got unexpected token 。
  --> generated_code/test_turn1.py:95:103
   |
93 | …
94 | …
95 | …
   ^^
   |

invalid-syntax: Expected a statement
  --> generated_code/test_turn1.py:95:104
   |
93 | …
94 | …
95 | …
   | ^
   |

invalid-syntax: Expected a statement
 --> mt5_test.py:1:1
  |
1 | <<<<<<< HEAD
  | ^^
2 | ﻿import MetaTrader5 as mt5
  |

invalid-syntax: Expected a statement
 --> mt5_test.py:1:3
  |
1 | <<<<<<< HEAD
  |   ^^
2 | ﻿import MetaTrader5 as mt5
  |

invalid-syntax: Expected a statement
 --> mt5_test.py:1:5
  |
1 | <<<<<<< HEAD
  |     ^^
2 | ﻿import MetaTrader5 as mt5
  |

invalid-syntax: Expected a statement
 --> mt5_test.py:1:7
  |
1 | <<<<<<< HEAD
  |       ^
2 | ﻿import MetaTrader5 as mt5
  |

invalid-syntax: Got unexpected token ﻿
 --> mt5_test.py:2:1
  |
1 | <<<<<<< HEAD
2 | ﻿import MetaTrader5 as mt5
  | ^
3 |
4 | # MetaTrader5への接続を初期化
  |

invalid-syntax: Expected a statement
  --> mt5_test.py:31:1
   |
29 | mt5.shutdown()
30 | print("MetaTrader5を終了しました。")
31 | =======
   | ^^
32 | ﻿import MetaTrader5 as mt5
   |

invalid-syntax: Expected a statement
  --> mt5_test.py:31:3
   |
29 | mt5.shutdown()
30 | print("MetaTrader5を終了しました。")
31 | =======
   |   ^^
32 | ﻿import MetaTrader5 as mt5
   |

invalid-syntax: Expected a statement
  --> mt5_test.py:31:5
   |
29 | mt5.shutdown()
30 | print("MetaTrader5を終了しました。")
31 | =======
   |     ^^
32 | ﻿import MetaTrader5 as mt5
   |

invalid-syntax: Expected a statement
  --> mt5_test.py:31:7
   |
29 | mt5.shutdown()
30 | print("MetaTrader5を終了しました。")
31 | =======
   |       ^
32 | ﻿import MetaTrader5 as mt5
   |

invalid-syntax: Expected a statement
  --> mt5_test.py:31:8
   |
29 | mt5.shutdown()
30 | print("MetaTrader5を終了しました。")
31 | =======
   |        ^
32 | ﻿import MetaTrader5 as mt5
   |

invalid-syntax: Got unexpected token ﻿
  --> mt5_test.py:32:1
   |
30 | print("MetaTrader5を終了しました。")
31 | =======
32 | ﻿import MetaTrader5 as mt5
   | ^
33 |
34 | # MetaTrader5への接続を初期化
   |

invalid-syntax: Expected a statement
  --> mt5_test.py:61:1
   |
59 | mt5.shutdown()
60 | print("MetaTrader5を終了しました。")
61 | >>>>>>> 572191d22755722942baf299a92693377c177f7a
   | ^^
   |

invalid-syntax: Expected a statement
  --> mt5_test.py:61:3
   |
59 | mt5.shutdown()
60 | print("MetaTrader5を終了しました。")
61 | >>>>>>> 572191d22755722942baf299a92693377c177f7a
   |   ^^
   |

invalid-syntax: Expected a statement
  --> mt5_test.py:61:5
   |
59 | mt5.shutdown()
60 | print("MetaTrader5を終了しました。")
61 | >>>>>>> 572191d22755722942baf299a92693377c177f7a
   |     ^^
   |

invalid-syntax: Expected a statement
  --> mt5_test.py:61:7
   |
59 | mt5.shutdown()
60 | print("MetaTrader5を終了しました。")
61 | >>>>>>> 572191d22755722942baf299a92693377c177f7a
   |       ^
   |

invalid-syntax: Simple statements must be separated by newlines or semicolons
  --> mt5_test.py:61:15
   |
59 | mt5.shutdown()
60 | print("MetaTrader5を終了しました。")
61 | >>>>>>> 572191d22755722942baf299a92693377c177f7a
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |

E402 Module level import not at top of file
  --> noctria_gui/backend/__init__.py:22:1
   |
20 |     sys.path.insert(0, str(src_dir))
21 |
22 | import importlib
   | ^^^^^^^^^^^^^^^^
23 | import pkgutil
24 | from fastapi import APIRouter
   |

E402 Module level import not at top of file
  --> noctria_gui/backend/__init__.py:23:1
   |
22 | import importlib
23 | import pkgutil
   | ^^^^^^^^^^^^^^
24 | from fastapi import APIRouter
25 | from typing import List
   |

E402 Module level import not at top of file
  --> noctria_gui/backend/__init__.py:24:1
   |
22 | import importlib
23 | import pkgutil
24 | from fastapi import APIRouter
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
25 | from typing import List
   |

E402 Module level import not at top of file
  --> noctria_gui/backend/__init__.py:25:1
   |
23 | import pkgutil
24 | from fastapi import APIRouter
25 | from typing import List
   | ^^^^^^^^^^^^^^^^^^^^^^^
26 |
27 | # ✅ router 一覧（FastAPI本体に登録されるルーター群）
   |

F841 Local variable `git_ok` is assigned to but never used
  --> noctria_gui/routes/adoptions.py:78:13
   |
76 |             git_ok = True
77 |         except Exception:
78 |             git_ok = False
   |             ^^^^^^
79 |
80 |     idx = _build_registry_index()
   |
help: Remove assignment to unused variable `git_ok`

E402 Module level import not at top of file
  --> noctria_gui/routes/ai_detail.py:26:1
   |
24 | # ───────────────────────────────
25 |
26 | from src.core.path_config import NOCTRIA_GUI_TEMPLATES_DIR, DATA_DIR
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
27 |
28 | # STATS_DIRを絶対パス化（dataディレクトリのstatsフォルダ）
   |

E402 Module level import not at top of file
  --> noctria_gui/routes/ai_routes.py:21:1
   |
19 |     sys.path.append(str(PROJECT_ROOT))
20 |
21 | from fastapi import APIRouter, Request
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
22 | from fastapi.responses import HTMLResponse
23 | from fastapi.templating import Jinja2Templates
   |

E402 Module level import not at top of file
  --> noctria_gui/routes/ai_routes.py:22:1
   |
21 | from fastapi import APIRouter, Request
22 | from fastapi.responses import HTMLResponse
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
23 | from fastapi.templating import Jinja2Templates
24 | from src.core.path_config import NOCTRIA_GUI_TEMPLATES_DIR, STATS_DIR
   |

E402 Module level import not at top of file
  --> noctria_gui/routes/ai_routes.py:23:1
   |
21 | from fastapi import APIRouter, Request
22 | from fastapi.responses import HTMLResponse
23 | from fastapi.templating import Jinja2Templates
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
24 | from src.core.path_config import NOCTRIA_GUI_TEMPLATES_DIR, STATS_DIR
   |

E402 Module level import not at top of file
  --> noctria_gui/routes/ai_routes.py:24:1
   |
22 | from fastapi.responses import HTMLResponse
23 | from fastapi.templating import Jinja2Templates
24 | from src.core.path_config import NOCTRIA_GUI_TEMPLATES_DIR, STATS_DIR
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
25 |
26 | router = APIRouter(prefix="/ai", tags=["AI"])
   |

F821 Undefined name `chat_manager`
  --> noctria_gui/routes/chat_api.py:28:5
   |
27 |     # ユーザーメッセージを履歴に追加
28 |     chat_manager.add_message("user", user_msg)
   |     ^^^^^^^^^^^^
29 |
30 |     # OpenAI API へ履歴を渡して応答を取得
   |

F821 Undefined name `chat_manager`
  --> noctria_gui/routes/chat_api.py:34:22
   |
32 |         lambda: client.chat.completions.create(
33 |             model="gpt-4o",
34 |             messages=chat_manager.get_history()
   |                      ^^^^^^^^^^^^
35 |         )
36 |     )
   |

F821 Undefined name `chat_manager`
  --> noctria_gui/routes/chat_api.py:40:5
   |
39 |     # アシスタント応答を履歴に追加
40 |     chat_manager.add_message("assistant", assistant_msg)
   |     ^^^^^^^^^^^^
41 |
42 |     return JSONResponse({"reply": assistant_msg})
   |

E402 Module level import not at top of file
  --> noctria_gui/routes/hermes.py:16:1
   |
14 |     sys.path.insert(0, src_path)  # insertが望ましい（優先度高い）
15 |
16 | from src.hermes.strategy_generator import build_prompt, generate_strategy_code, save_to_file, save_to_db
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
17 |
18 | router = APIRouter()
   |

E701 Multiple statements on one line (colon)
   --> noctria_gui/routes/king_routes.py:331:60
    |
330 |     # 3) 画面入力（最優先）
331 |     if (v := _maybe_cast(TOTAL_TIMESTEPS, int)) is not None: conf["TOTAL_TIMESTEPS"] = v
    |                                                            ^
332 |     if (v := _maybe_cast(learning_rate, float)) is not None: conf["learning_rate"] = v
333 |     if (v := _maybe_cast(n_steps, int)) is not None: conf["n_steps"] = v
    |

E701 Multiple statements on one line (colon)
   --> noctria_gui/routes/king_routes.py:332:60
    |
330 |     # 3) 画面入力（最優先）
331 |     if (v := _maybe_cast(TOTAL_TIMESTEPS, int)) is not None: conf["TOTAL_TIMESTEPS"] = v
332 |     if (v := _maybe_cast(learning_rate, float)) is not None: conf["learning_rate"] = v
    |                                                            ^
333 |     if (v := _maybe_cast(n_steps, int)) is not None: conf["n_steps"] = v
334 |     if (v := _maybe_cast(batch_size, int)) is not None: conf["batch_size"] = v
    |

E701 Multiple statements on one line (colon)
   --> noctria_gui/routes/king_routes.py:333:52
    |
331 |     if (v := _maybe_cast(TOTAL_TIMESTEPS, int)) is not None: conf["TOTAL_TIMESTEPS"] = v
332 |     if (v := _maybe_cast(learning_rate, float)) is not None: conf["learning_rate"] = v
333 |     if (v := _maybe_cast(n_steps, int)) is not None: conf["n_steps"] = v
    |                                                    ^
334 |     if (v := _maybe_cast(batch_size, int)) is not None: conf["batch_size"] = v
335 |     if (v := _maybe_cast(n_epochs, int)) is not None: conf["n_epochs"] = v
    |

E701 Multiple statements on one line (colon)
   --> noctria_gui/routes/king_routes.py:334:55
    |
332 |     if (v := _maybe_cast(learning_rate, float)) is not None: conf["learning_rate"] = v
333 |     if (v := _maybe_cast(n_steps, int)) is not None: conf["n_steps"] = v
334 |     if (v := _maybe_cast(batch_size, int)) is not None: conf["batch_size"] = v
    |                                                       ^
335 |     if (v := _maybe_cast(n_epochs, int)) is not None: conf["n_epochs"] = v
336 |     if (v := _maybe_cast(gamma, float)) is not None: conf["gamma"] = v
    |

E701 Multiple statements on one line (colon)
   --> noctria_gui/routes/king_routes.py:335:53
    |
333 |     if (v := _maybe_cast(n_steps, int)) is not None: conf["n_steps"] = v
334 |     if (v := _maybe_cast(batch_size, int)) is not None: conf["batch_size"] = v
335 |     if (v := _maybe_cast(n_epochs, int)) is not None: conf["n_epochs"] = v
    |                                                     ^
336 |     if (v := _maybe_cast(gamma, float)) is not None: conf["gamma"] = v
337 |     if (v := _maybe_cast(gae_lambda, float)) is not None: conf["gae_lambda"] = v
    |

E701 Multiple statements on one line (colon)
   --> noctria_gui/routes/king_routes.py:336:52
    |
334 |     if (v := _maybe_cast(batch_size, int)) is not None: conf["batch_size"] = v
335 |     if (v := _maybe_cast(n_epochs, int)) is not None: conf["n_epochs"] = v
336 |     if (v := _maybe_cast(gamma, float)) is not None: conf["gamma"] = v
    |                                                    ^
337 |     if (v := _maybe_cast(gae_lambda, float)) is not None: conf["gae_lambda"] = v
338 |     if (v := _maybe_cast(ent_coef, float)) is not None: conf["ent_coef"] = v
    |

E701 Multiple statements on one line (colon)
   --> noctria_gui/routes/king_routes.py:337:57
    |
335 |     if (v := _maybe_cast(n_epochs, int)) is not None: conf["n_epochs"] = v
336 |     if (v := _maybe_cast(gamma, float)) is not None: conf["gamma"] = v
337 |     if (v := _maybe_cast(gae_lambda, float)) is not None: conf["gae_lambda"] = v
    |                                                         ^
338 |     if (v := _maybe_cast(ent_coef, float)) is not None: conf["ent_coef"] = v
339 |     if (v := _maybe_cast(vf_coef, float)) is not None: conf["vf_coef"] = v
    |

E701 Multiple statements on one line (colon)
   --> noctria_gui/routes/king_routes.py:338:55
    |
336 |     if (v := _maybe_cast(gamma, float)) is not None: conf["gamma"] = v
337 |     if (v := _maybe_cast(gae_lambda, float)) is not None: conf["gae_lambda"] = v
338 |     if (v := _maybe_cast(ent_coef, float)) is not None: conf["ent_coef"] = v
    |                                                       ^
339 |     if (v := _maybe_cast(vf_coef, float)) is not None: conf["vf_coef"] = v
340 |     if (v := _maybe_cast(max_grad_norm, float)) is not None: conf["max_grad_norm"] = v
    |

E701 Multiple statements on one line (colon)
   --> noctria_gui/routes/king_routes.py:339:54
    |
337 |     if (v := _maybe_cast(gae_lambda, float)) is not None: conf["gae_lambda"] = v
338 |     if (v := _maybe_cast(ent_coef, float)) is not None: conf["ent_coef"] = v
339 |     if (v := _maybe_cast(vf_coef, float)) is not None: conf["vf_coef"] = v
    |                                                      ^
340 |     if (v := _maybe_cast(max_grad_norm, float)) is not None: conf["max_grad_norm"] = v
341 |     if (v := _maybe_cast(clip_range, float)) is not None: conf["clip_range"] = v
    |

E701 Multiple statements on one line (colon)
   --> noctria_gui/routes/king_routes.py:340:60
    |
338 |     if (v := _maybe_cast(ent_coef, float)) is not None: conf["ent_coef"] = v
339 |     if (v := _maybe_cast(vf_coef, float)) is not None: conf["vf_coef"] = v
340 |     if (v := _maybe_cast(max_grad_norm, float)) is not None: conf["max_grad_norm"] = v
    |                                                            ^
341 |     if (v := _maybe_cast(clip_range, float)) is not None: conf["clip_range"] = v
342 |     if (v := _maybe_cast(clip_range_vf, float)) is not None: conf["clip_range_vf"] = v
    |

E701 Multiple statements on one line (colon)
   --> noctria_gui/routes/king_routes.py:341:57
    |
339 |     if (v := _maybe_cast(vf_coef, float)) is not None: conf["vf_coef"] = v
340 |     if (v := _maybe_cast(max_grad_norm, float)) is not None: conf["max_grad_norm"] = v
341 |     if (v := _maybe_cast(clip_range, float)) is not None: conf["clip_range"] = v
    |                                                         ^
342 |     if (v := _maybe_cast(clip_range_vf, float)) is not None: conf["clip_range_vf"] = v
343 |     if (v := _maybe_cast(seed, int)) is not None: conf["seed"] = v
    |

E701 Multiple statements on one line (colon)
   --> noctria_gui/routes/king_routes.py:342:60
    |
340 |     if (v := _maybe_cast(max_grad_norm, float)) is not None: conf["max_grad_norm"] = v
341 |     if (v := _maybe_cast(clip_range, float)) is not None: conf["clip_range"] = v
342 |     if (v := _maybe_cast(clip_range_vf, float)) is not None: conf["clip_range_vf"] = v
    |                                                            ^
343 |     if (v := _maybe_cast(seed, int)) is not None: conf["seed"] = v
344 |     if (v := _maybe_cast(eval_n_episodes, int)) is not None: conf["eval_n_episodes"] = v
    |

E701 Multiple statements on one line (colon)
   --> noctria_gui/routes/king_routes.py:343:49
    |
341 |     if (v := _maybe_cast(clip_range, float)) is not None: conf["clip_range"] = v
342 |     if (v := _maybe_cast(clip_range_vf, float)) is not None: conf["clip_range_vf"] = v
343 |     if (v := _maybe_cast(seed, int)) is not None: conf["seed"] = v
    |                                                 ^
344 |     if (v := _maybe_cast(eval_n_episodes, int)) is not None: conf["eval_n_episodes"] = v
345 |     conf["eval_deterministic"] = _to_bool(eval_deterministic, True)
    |

E701 Multiple statements on one line (colon)
   --> noctria_gui/routes/king_routes.py:344:60
    |
342 |     if (v := _maybe_cast(clip_range_vf, float)) is not None: conf["clip_range_vf"] = v
343 |     if (v := _maybe_cast(seed, int)) is not None: conf["seed"] = v
344 |     if (v := _maybe_cast(eval_n_episodes, int)) is not None: conf["eval_n_episodes"] = v
    |                                                            ^
345 |     conf["eval_deterministic"] = _to_bool(eval_deterministic, True)
    |

F841 Local variable `result` is assigned to but never used
  --> noctria_gui/routes/logs_routes.py:34:9
   |
33 |     try:
34 |         result = subprocess.run(
   |         ^^^^^^
35 |             ["python3", str(script_path)],
36 |             capture_output=True,
   |
help: Remove assignment to unused variable `result`

E701 Multiple statements on one line (colon)
  --> noctria_gui/routes/pdca_api_details.py:33:13
   |
32 | def _parse_date(s: Optional[str]) -> Optional[date]:
33 |     if not s: return None
   |             ^
34 |     return date.fromisoformat(s)
   |

F401 `.statistics_dashboard.router` imported but unused; consider removing, adding to `__all__`, or using a redundant alias
 --> noctria_gui/routes/statistics/__init__.py:6:35
  |
4 | # 実際のURL処理は、statistics_dashboard.py に記述されています。
5 |
6 | from .statistics_dashboard import router
  |                                   ^^^^^^
7 |
8 | # 上記の1行により、アプリケーションの他の部分（main.pyなど）が
  |
help: Use an explicit re-export: `router as router`

F821 Undefined name `logger`
  --> noctria_gui/routes/statistics_detail.py:40:17
   |
38 |             except Exception as e:
39 |                 # 他のエラーはログに記録してスキップ
40 |                 logger.error(f"ログファイル {file} の読み込みに失敗しました: {e}")
   |                 ^^^^^^
41 |                 continue
42 |     return logs
   |

E701 Multiple statements on one line (colon)
   --> noctria_gui/routes/strategy_detail.py:192:39
    |
190 |                 if hasattr(obj, "compute_kpis"):
191 |                     k = obj.compute_kpis()
192 |                     if is_dataclass(k): k = asdict(k)
    |                                       ^
193 |                     if not isinstance(k, dict): k = dict(k)
194 |                     return k
    |

E701 Multiple statements on one line (colon)
   --> noctria_gui/routes/strategy_detail.py:193:47
    |
191 |                     k = obj.compute_kpis()
192 |                     if is_dataclass(k): k = asdict(k)
193 |                     if not isinstance(k, dict): k = dict(k)
    |                                               ^
194 |                     return k
195 |             except Exception:
    |

E701 Multiple statements on one line (colon)
   --> noctria_gui/routes/strategy_detail.py:203:35
    |
201 |             try:
202 |                 k = fn()
203 |                 if is_dataclass(k): k = asdict(k)
    |                                   ^
204 |                 if not isinstance(k, dict): k = dict(k)
205 |                 return k
    |

E701 Multiple statements on one line (colon)
   --> noctria_gui/routes/strategy_detail.py:204:43
    |
202 |                 k = fn()
203 |                 if is_dataclass(k): k = asdict(k)
204 |                 if not isinstance(k, dict): k = dict(k)
    |                                           ^
205 |                 return k
206 |             except Exception:
    |

E701 Multiple statements on one line (colon)
   --> noctria_gui/routes/strategy_detail.py:215:35
    |
213 |             if isinstance(ret, tuple) and len(ret) >= 1:
214 |                 k = ret[0]
215 |                 if is_dataclass(k): k = asdict(k)
    |                                   ^
216 |                 if not isinstance(k, dict): k = dict(k)
217 |                 return k
    |

E701 Multiple statements on one line (colon)
   --> noctria_gui/routes/strategy_detail.py:216:43
    |
214 |                 k = ret[0]
215 |                 if is_dataclass(k): k = asdict(k)
216 |                 if not isinstance(k, dict): k = dict(k)
    |                                           ^
217 |                 return k
218 |         except Exception:
    |

E702 Multiple statements on one line (semicolon)
   --> noctria_gui/routes/strategy_detail.py:289:30
    |
287 |             tags = s.get("tags") or []
288 |             if any(t in (tags or []) for t in current_tags):
289 |                 rel.append(s); seen.add(name)
    |                              ^
290 |             if len(rel) >= 4:
291 |                 break
    |

E701 Multiple statements on one line (colon)
  --> noctria_gui/routes/strategy_heatmap.py:60:28
   |
59 |             date_str = data.get("promoted_at") or data.get("timestamp")
60 |             if not date_str: continue
   |                            ^
61 |             
62 |             date_obj = datetime.fromisoformat(date_str.replace("Z", "+00:00"))
   |

E701 Multiple statements on one line (colon)
  --> noctria_gui/routes/strategy_heatmap.py:64:64
   |
62 |             date_obj = datetime.fromisoformat(date_str.replace("Z", "+00:00"))
63 |
64 |             if from_date and date_obj.date() < from_date.date(): continue
   |                                                                ^
65 |             if to_date and date_obj.date() > to_date.date(): continue
   |

E701 Multiple statements on one line (colon)
  --> noctria_gui/routes/strategy_heatmap.py:65:60
   |
64 |             if from_date and date_obj.date() < from_date.date(): continue
65 |             if to_date and date_obj.date() > to_date.date(): continue
   |                                                            ^
66 |
67 |             name = data.get("strategy", "").strip()
   |

E701 Multiple statements on one line (colon)
  --> noctria_gui/routes/strategy_heatmap.py:68:24
   |
67 |             name = data.get("strategy", "").strip()
68 |             if not name: continue
   |                        ^
69 |             if strategy_keyword and strategy_keyword.lower() not in name.lower(): continue
   |

E701 Multiple statements on one line (colon)
  --> noctria_gui/routes/strategy_heatmap.py:69:81
   |
67 |             name = data.get("strategy", "").strip()
68 |             if not name: continue
69 |             if strategy_keyword and strategy_keyword.lower() not in name.lower(): continue
   |                                                                                 ^
70 |
71 |             score = data.get("score", {})
   |

E701 Multiple statements on one line (colon)
  --> noctria_gui/routes/strategy_heatmap.py:76:45
   |
75 |             stats[name]["count"] += 1
76 |             if isinstance(win, (int, float)): stats[name]["win_rates"].append(win)
   |                                             ^
77 |             if isinstance(dd, (int, float)): stats[name]["drawdowns"].append(dd)
   |

E701 Multiple statements on one line (colon)
  --> noctria_gui/routes/strategy_heatmap.py:77:44
   |
75 |             stats[name]["count"] += 1
76 |             if isinstance(win, (int, float)): stats[name]["win_rates"].append(win)
77 |             if isinstance(dd, (int, float)): stats[name]["drawdowns"].append(dd)
   |                                            ^
78 |
79 |         except (json.JSONDecodeError, KeyError) as e:
   |

F841 Local variable `king` is assigned to but never used
  --> noctria_gui/services/dashboard_service.py:28:9
   |
26 |     try:
27 |         # 1. KingNoctriaや各臣下AIの最新統計を取得
28 |         king = KingNoctria()
   |         ^^^^
29 |         # 仮にKingNoctriaにstats()メソッドがある想定（要実装）
30 |         stats = {
   |
help: Remove assignment to unused variable `king`

E701 Multiple statements on one line (colon)
   --> noctria_gui/services/statistics_service.py:109:29
    |
108 |     def _summarize(filtered_logs):
109 |         if not filtered_logs: return {"count": 0, "avg_win_rate": 0}
    |                             ^
110 |         win_rates = [log.get("win_rate", 0) for log in filtered_logs]
111 |         return {
    |

E701 Multiple statements on one line (colon)
  --> scripts/build_context.py:31:45
   |
29 | def _norm_node(s: str) -> str:
30 |     s = s.strip()
31 |     if s.startswith('"') and s.endswith('"'): s = s[1:-1]
   |                                             ^
32 |     return s
   |

E701 Multiple statements on one line (colon)
  --> scripts/build_context.py:42:26
   |
40 |         a = _norm_node(m.group("a"))
41 |         b = _norm_node(m.group("b"))
42 |         if not a or not b: continue
   |                          ^
43 |         adj[a].add(b); rev[b].add(a)
44 |         nodes.add(a); nodes.add(b)
   |

E702 Multiple statements on one line (semicolon)
  --> scripts/build_context.py:43:22
   |
41 |         b = _norm_node(m.group("b"))
42 |         if not a or not b: continue
43 |         adj[a].add(b); rev[b].add(a)
   |                      ^
44 |         nodes.add(a); nodes.add(b)
45 |     return nodes, adj, rev
   |

E702 Multiple statements on one line (semicolon)
  --> scripts/build_context.py:44:21
   |
42 |         if not a or not b: continue
43 |         adj[a].add(b); rev[b].add(a)
44 |         nodes.add(a); nodes.add(b)
   |                     ^
45 |     return nodes, adj, rev
   |

E701 Multiple statements on one line (colon)
  --> scripts/build_context.py:54:32
   |
52 |     if name_or_path.endswith(".py"):
53 |         rel = name_or_path.replace("\\","/")
54 |         if rel.startswith("./"): rel = rel[2:]
   |                                ^
55 |         mod = rel[:-3].replace("/", ".")
56 |         base = rel
   |

E701 Multiple statements on one line (colon)
  --> scripts/build_context.py:67:19
   |
65 |         # best-effort: 部分一致で拾う
66 |         matches = [n for n in nodes if n.endswith(start) or n.endswith(start.replace("/","."))]
67 |         if matches: start = matches[0]
   |                   ^
68 |         else: return set([start])
69 |     seen = {start}
   |

E701 Multiple statements on one line (colon)
  --> scripts/build_context.py:68:13
   |
66 |         matches = [n for n in nodes if n.endswith(start) or n.endswith(start.replace("/","."))]
67 |         if matches: start = matches[0]
68 |         else: return set([start])
   |             ^
69 |     seen = {start}
70 |     q = deque([(start,0)])
   |

E701 Multiple statements on one line (colon)
  --> scripts/build_context.py:73:23
   |
71 |     while q:
72 |         u,d = q.popleft()
73 |         if d == radius: continue
   |                       ^
74 |         for v in adj.get(u, ()):
75 |             if v not in seen:
   |

E702 Multiple statements on one line (semicolon)
  --> scripts/build_context.py:76:28
   |
74 |         for v in adj.get(u, ()):
75 |             if v not in seen:
76 |                 seen.add(v); q.append((v,d+1))
   |                            ^
77 |         for v in rev.get(u, ()):
78 |             if v not in seen:
   |

E702 Multiple statements on one line (semicolon)
  --> scripts/build_context.py:79:28
   |
77 |         for v in rev.get(u, ()):
78 |             if v not in seen:
79 |                 seen.add(v); q.append((v,d+1))
   |                            ^
80 |     return seen
   |

E701 Multiple statements on one line (colon)
   --> scripts/build_context.py:108:22
    |
106 |     for name in ("src", "app", "noctria_gui", "noctria_kernel"):
107 |         p = ROOT / name
108 |         if p.exists(): roots.append(p)
    |                      ^
109 |     # 重複除去
110 |     seen=set(); out=[]
    |

E702 Multiple statements on one line (semicolon)
   --> scripts/build_context.py:110:15
    |
108 |         if p.exists(): roots.append(p)
109 |     # 重複除去
110 |     seen=set(); out=[]
    |               ^
111 |     for r in roots:
112 |         rp = r.resolve()
    |

E701 Multiple statements on one line (colon)
   --> scripts/build_context.py:113:27
    |
111 |     for r in roots:
112 |         rp = r.resolve()
113 |         if str(rp) in seen: continue
    |                           ^
114 |         seen.add(str(rp)); out.append(rp)
115 |     return out
    |

E702 Multiple statements on one line (semicolon)
   --> scripts/build_context.py:114:26
    |
112 |         rp = r.resolve()
113 |         if str(rp) in seen: continue
114 |         seen.add(str(rp)); out.append(rp)
    |                          ^
115 |     return out
    |

E701 Multiple statements on one line (colon)
   --> scripts/build_context.py:169:23
    |
167 |     for p in files:
168 |         key = str(p.resolve())
169 |         if key in seen: continue
    |                       ^
170 |         seen.add(key); uniq.append(p)
    |

E702 Multiple statements on one line (semicolon)
   --> scripts/build_context.py:170:22
    |
168 |         key = str(p.resolve())
169 |         if key in seen: continue
170 |         seen.add(key); uniq.append(p)
    |                      ^
171 |
172 |     write_allowed(uniq)
    |

E701 Multiple statements on one line (colon)
  --> scripts/gen_graphs.py:39:8
   |
37 | # ================== Helpers ==================
38 | def _norm(p: Path) -> Path:
39 |     try: return p.resolve()
   |        ^
40 |     except Exception: return p.absolute()
   |

E701 Multiple statements on one line (colon)
  --> scripts/gen_graphs.py:40:21
   |
38 | def _norm(p: Path) -> Path:
39 |     try: return p.resolve()
40 |     except Exception: return p.absolute()
   |                     ^
41 |
42 | def _samepath(a: Path, b: Path) -> bool:
   |

E701 Multiple statements on one line (colon)
  --> scripts/gen_graphs.py:43:8
   |
42 | def _samepath(a: Path, b: Path) -> bool:
43 |     try: return os.path.samefile(a, b)
   |        ^
44 |     except FileNotFoundError: return False
45 |     except Exception: return _norm(a) == _norm(b)
   |

E701 Multiple statements on one line (colon)
  --> scripts/gen_graphs.py:44:29
   |
42 | def _samepath(a: Path, b: Path) -> bool:
43 |     try: return os.path.samefile(a, b)
44 |     except FileNotFoundError: return False
   |                             ^
45 |     except Exception: return _norm(a) == _norm(b)
   |

E701 Multiple statements on one line (colon)
  --> scripts/gen_graphs.py:45:21
   |
43 |     try: return os.path.samefile(a, b)
44 |     except FileNotFoundError: return False
45 |     except Exception: return _norm(a) == _norm(b)
   |                     ^
46 |
47 | def _safe_copy(src: Path, dst: Path):
   |

E701 Multiple statements on one line (colon)
  --> scripts/gen_graphs.py:48:27
   |
47 | def _safe_copy(src: Path, dst: Path):
48 |     if _samepath(src, dst): return
   |                           ^
49 |     dst.parent.mkdir(parents=True, exist_ok=True)
50 |     shutil.copy2(src, dst)
   |

E701 Multiple statements on one line (colon)
  --> scripts/gen_graphs.py:53:20
   |
52 | def _find_dot_file() -> Path | None:
53 |     if DOT.exists(): return DOT
   |                    ^
54 |     if DOT_ALT.exists(): return DOT_ALT
55 |     return None
   |

E701 Multiple statements on one line (colon)
  --> scripts/gen_graphs.py:54:24
   |
52 | def _find_dot_file() -> Path | None:
53 |     if DOT.exists(): return DOT
54 |     if DOT_ALT.exists(): return DOT_ALT
   |                        ^
55 |     return None
   |

E702 Multiple statements on one line (semicolon)
  --> scripts/gen_graphs.py:66:41
   |
64 |             _, _, w, h = map(float, vb.split())
65 |             return (w / h) if h else None
66 |         w = root.attrib.get("width", ""); h = root.attrib.get("height", "")
   |                                         ^
67 |         for s in ("pt","px"): w = w[:-len(s)] if w.endswith(s) else w
68 |         for s in ("pt","px"): h = h[:-len(s)] if h.endswith(s) else h
   |

E701 Multiple statements on one line (colon)
  --> scripts/gen_graphs.py:67:29
   |
65 |             return (w / h) if h else None
66 |         w = root.attrib.get("width", ""); h = root.attrib.get("height", "")
67 |         for s in ("pt","px"): w = w[:-len(s)] if w.endswith(s) else w
   |                             ^
68 |         for s in ("pt","px"): h = h[:-len(s)] if h.endswith(s) else h
69 |         return (float(w)/float(h)) if w and h else None
   |

E701 Multiple statements on one line (colon)
  --> scripts/gen_graphs.py:68:29
   |
66 |         w = root.attrib.get("width", ""); h = root.attrib.get("height", "")
67 |         for s in ("pt","px"): w = w[:-len(s)] if w.endswith(s) else w
68 |         for s in ("pt","px"): h = h[:-len(s)] if h.endswith(s) else h
   |                             ^
69 |         return (float(w)/float(h)) if w and h else None
70 |     except Exception:
   |

E702 Multiple statements on one line (semicolon)
  --> scripts/gen_graphs.py:83:34
   |
81 |         with Image.open(p) as im:
82 |             im = im.convert("L")
83 |             hist = im.histogram(); tot = float(sum(hist)) or 1.0
   |                                  ^
84 |             return (hist[0]/tot > 0.95) or (hist[-1]/tot > 0.95)
85 |     except Exception:
   |

E702 Multiple statements on one line (semicolon)
   --> scripts/gen_graphs.py:100:32
    |
 98 |         m = re.search(r'\bsubgraph\b[^{]*\{', txt[i:], flags=re.IGNORECASE)
 99 |         if not m:
100 |             out.append(txt[i:]); break
    |                                ^
101 |         start = i + m.start()
102 |         brace = i + m.end() - 1
    |

E701 Multiple statements on one line (colon)
   --> scripts/gen_graphs.py:108:28
    |
106 |             while j < n and depth > 0:
107 |                 c = txt[j]
108 |                 if c == '{': depth += 1
    |                            ^
109 |                 elif c == '}': depth -= 1
110 |                 j += 1
    |

E701 Multiple statements on one line (colon)
   --> scripts/gen_graphs.py:109:30
    |
107 |                 c = txt[j]
108 |                 if c == '{': depth += 1
109 |                 elif c == '}': depth -= 1
    |                              ^
110 |                 j += 1
111 |             out.append(txt[i:start])  # ヘッダ前は保持
    |

E702 Multiple statements on one line (semicolon)
   --> scripts/gen_graphs.py:114:39
    |
112 |             i = j
113 |         else:
114 |             out.append(txt[i:brace+1]); i = brace + 1
    |                                       ^
115 |     txt = ''.join(out)
    |

E701 Multiple statements on one line (colon)
   --> scripts/gen_graphs.py:124:13
    |
122 |         kept.append(ln)
123 |         m = re.match(r'\s*"?(?P<id>[\w\.:/\\-]+)"?\s*(\[|;)', ln)
124 |         if m: node_names.add(m.group("id"))
    |             ^
125 |     body = "\n".join(kept)
    |

E702 Multiple statements on one line (semicolon)
   --> scripts/gen_graphs.py:166:38
    |
164 |     nodes: set[str] = set()
165 |     for m in _EDGE_RE.finditer(dot_text):
166 |         a = _strip_id(m.group('lhs')); b = _strip_id(m.group('rhs'))
    |                                      ^
167 |         if not a or not b: continue
168 |         edges.add((a, b))
    |

E701 Multiple statements on one line (colon)
   --> scripts/gen_graphs.py:167:26
    |
165 |     for m in _EDGE_RE.finditer(dot_text):
166 |         a = _strip_id(m.group('lhs')); b = _strip_id(m.group('rhs'))
167 |         if not a or not b: continue
    |                          ^
168 |         edges.add((a, b))
169 |         nodes.add(a); nodes.add(b)
    |

E702 Multiple statements on one line (semicolon)
   --> scripts/gen_graphs.py:169:21
    |
167 |         if not a or not b: continue
168 |         edges.add((a, b))
169 |         nodes.add(a); nodes.add(b)
    |                     ^
170 |
171 |     if not nodes:
    |

E701 Multiple statements on one line (colon)
   --> scripts/gen_graphs.py:321:20
    |
319 |         for tmp in (src_for_dot, filtered_dot):
320 |             if tmp is not dot_file:
321 |                 try: tmp.unlink(missing_ok=True)
    |                    ^
322 |                 except Exception: pass
    |

E701 Multiple statements on one line (colon)
   --> scripts/gen_graphs.py:322:33
    |
320 |             if tmp is not dot_file:
321 |                 try: tmp.unlink(missing_ok=True)
322 |                 except Exception: pass
    |                                 ^
323 |
324 |     # 健全性チェック → だめなら非フィルタ&フォールバック
    |

E702 Multiple statements on one line (semicolon)
   --> scripts/gen_graphs.py:360:50
    |
358 | def svg_to_png():
359 |     if not SVG.exists():
360 |         print("! missing imports.svg (skip PNG)"); return
    |                                                  ^
361 |     PNG.parent.mkdir(parents=True, exist_ok=True)
362 |     tried_cairo = False
    |

E702 Multiple statements on one line (semicolon)
   --> scripts/gen_graphs.py:389:42
    |
387 |             "modules": {}, "adjacency": {}, "tests_map": {},
388 |             "allowlist_roots": ["src/"], "banned_paths": [], "critical_files": []
389 |         }, ensure_ascii=False, indent=2)); print(f"+ wrote {CTX}")
    |                                          ^
390 |     if not ALLOWED.exists():
391 |         ALLOWED.write_text("src/\n"); print(f"+ wrote {ALLOWED}")
    |

E702 Multiple statements on one line (semicolon)
   --> scripts/gen_graphs.py:391:37
    |
389 |         }, ensure_ascii=False, indent=2)); print(f"+ wrote {CTX}")
390 |     if not ALLOWED.exists():
391 |         ALLOWED.write_text("src/\n"); print(f"+ wrote {ALLOWED}")
    |                                     ^
392 |
393 | def _discover_static_roots() -> list[Path]:
    |

E702 Multiple statements on one line (semicolon)
   --> scripts/gen_graphs.py:403:15
    |
401 |     if default_static.exists() and not _samepath(default_static, ROOT):
402 |         roots.append(_norm(default_static))
403 |     seen=set(); return [p for p in roots if not (str(p) in seen or seen.add(str(p)))]
    |               ^
404 |
405 | def sync_to_static():
    |

E702 Multiple statements on one line (semicolon)
   --> scripts/gen_graphs.py:408:47
    |
406 |     STATIC_ROOTS = _discover_static_roots()
407 |     if not STATIC_ROOTS:
408 |         print("! static ルートが見つからないためコピーはスキップ"); return
    |                                                                   ^
409 |     src_root = _norm(GRAPHS.parent)
410 |     for sroot in STATIC_ROOTS:
    |

E702 Multiple statements on one line (semicolon)
   --> scripts/gen_graphs.py:413:60
    |
411 |         dst_root = _norm(sroot / "codex_reports")
412 |         if _samepath(dst_root, src_root) or (src_root in dst_root.parents):
413 |             print(f"! skip sync: invalid dst ({dst_root})"); continue
    |                                                            ^
414 |         for src_dir, _, files in os.walk(GRAPHS):
415 |             sd = Path(src_dir); rel = sd.relative_to(GRAPHS)
    |

E702 Multiple statements on one line (semicolon)
   --> scripts/gen_graphs.py:415:31
    |
413 |             print(f"! skip sync: invalid dst ({dst_root})"); continue
414 |         for src_dir, _, files in os.walk(GRAPHS):
415 |             sd = Path(src_dir); rel = sd.relative_to(GRAPHS)
    |                               ^
416 |             for f in files: _safe_copy(sd / f, dst_root / "graphs" / rel / f)
417 |         for src_dir, _, files in os.walk(CTXDIR):
    |

E701 Multiple statements on one line (colon)
   --> scripts/gen_graphs.py:416:27
    |
414 |         for src_dir, _, files in os.walk(GRAPHS):
415 |             sd = Path(src_dir); rel = sd.relative_to(GRAPHS)
416 |             for f in files: _safe_copy(sd / f, dst_root / "graphs" / rel / f)
    |                           ^
417 |         for src_dir, _, files in os.walk(CTXDIR):
418 |             sd = Path(src_dir); rel = sd.relative_to(CTXDIR)
    |

E702 Multiple statements on one line (semicolon)
   --> scripts/gen_graphs.py:418:31
    |
416 |             for f in files: _safe_copy(sd / f, dst_root / "graphs" / rel / f)
417 |         for src_dir, _, files in os.walk(CTXDIR):
418 |             sd = Path(src_dir); rel = sd.relative_to(CTXDIR)
    |                               ^
419 |             for f in files: _safe_copy(sd / f, dst_root / "context" / rel / f)
420 |         print(f"+ synced codex_reports -> {dst_root}")
    |

E701 Multiple statements on one line (colon)
   --> scripts/gen_graphs.py:419:27
    |
417 |         for src_dir, _, files in os.walk(CTXDIR):
418 |             sd = Path(src_dir); rel = sd.relative_to(CTXDIR)
419 |             for f in files: _safe_copy(sd / f, dst_root / "context" / rel / f)
    |                           ^
420 |         print(f"+ synced codex_reports -> {dst_root}")
    |

E702 Multiple statements on one line (semicolon)
   --> scripts/map_tests.py:123:15
    |
122 |     # 一意化
123 |     seen=set(); uniq=[]
    |               ^
124 |     for n in nodeids:
125 |         if n not in seen:
    |

E702 Multiple statements on one line (semicolon)
   --> scripts/map_tests.py:126:24
    |
124 |     for n in nodeids:
125 |         if n not in seen:
126 |             seen.add(n); uniq.append(n)
    |                        ^
127 |     return uniq
    |

E701 Multiple statements on one line (colon)
   --> scripts/map_tests.py:149:21
    |
147 |             scores[node] += 2
148 |         for k in kw_low:
149 |             if not k: continue
    |                     ^
150 |             cnt = low.count(k)
151 |             if cnt:
    |

E701 Multiple statements on one line (colon)
  --> scripts/noctria_dead_code_detector.py:63:29
   |
61 | def walk_files() -> List[Path]:
62 |     for base in SCAN_DIRS:
63 |         if not base.exists(): continue
   |                             ^
64 |         for p in base.rglob("*"):
65 |             if p.is_file():
   |

E701 Multiple statements on one line (colon)
  --> scripts/noctria_dead_code_detector.py:74:37
   |
73 | def load_canon(path: Optional[Path]) -> List[str]:
74 |     if not path or not path.exists(): return DEFAULT_CANON
   |                                     ^
75 |     globs: List[str] = []
76 |     for line in path.read_text(encoding="utf-8").splitlines():
   |

E701 Multiple statements on one line (colon)
  --> scripts/noctria_dead_code_detector.py:78:17
   |
76 |     for line in path.read_text(encoding="utf-8").splitlines():
77 |         s = line.strip()
78 |         if not s: continue
   |                 ^
79 |         if s.startswith("- "): s = s[2:].strip()
80 |         if s.startswith("#") or ":" in s: continue
   |

E701 Multiple statements on one line (colon)
  --> scripts/noctria_dead_code_detector.py:79:30
   |
77 |         s = line.strip()
78 |         if not s: continue
79 |         if s.startswith("- "): s = s[2:].strip()
   |                              ^
80 |         if s.startswith("#") or ":" in s: continue
81 |         if re.match(r"^[\w./*-]+$", s): globs.append(s)
   |

E701 Multiple statements on one line (colon)
  --> scripts/noctria_dead_code_detector.py:80:41
   |
78 |         if not s: continue
79 |         if s.startswith("- "): s = s[2:].strip()
80 |         if s.startswith("#") or ":" in s: continue
   |                                         ^
81 |         if re.match(r"^[\w./*-]+$", s): globs.append(s)
82 |     return globs or DEFAULT_CANON
   |

E701 Multiple statements on one line (colon)
  --> scripts/noctria_dead_code_detector.py:81:39
   |
79 |         if s.startswith("- "): s = s[2:].strip()
80 |         if s.startswith("#") or ":" in s: continue
81 |         if re.match(r"^[\w./*-]+$", s): globs.append(s)
   |                                       ^
82 |     return globs or DEFAULT_CANON
   |

E701 Multiple statements on one line (colon)
  --> scripts/noctria_dead_code_detector.py:87:19
   |
85 |     try:
86 |         out = subprocess.check_output(["git","log","-1","--format=%ct", rel(p)], cwd=ROOT).decode().strip()
87 |         if not out: return None
   |                   ^
88 |         t = int(out); return int((time.time()-t)//86400)
89 |     except Exception:
   |

E702 Multiple statements on one line (semicolon)
  --> scripts/noctria_dead_code_detector.py:88:21
   |
86 |         out = subprocess.check_output(["git","log","-1","--format=%ct", rel(p)], cwd=ROOT).decode().strip()
87 |         if not out: return None
88 |         t = int(out); return int((time.time()-t)//86400)
   |                     ^
89 |     except Exception:
90 |         return None
   |

E701 Multiple statements on one line (colon)
   --> scripts/noctria_dead_code_detector.py:101:25
    |
 99 |         self.text = text
100 |     def visit_Import(self, n: ast.Import):  # type: ignore[override]
101 |         for a in n.names: self.imports.add(a.name)
    |                         ^
102 |     def visit_ImportFrom(self, n: ast.ImportFrom):  # type: ignore[override]
103 |         self.imports.add(n.module or "")
    |

E701 Multiple statements on one line (colon)
   --> scripts/noctria_dead_code_detector.py:115:17
    |
113 |         if isinstance(n.func, ast.Name) and n.func.id == "TemplateResponse":
114 |             v = _tmpl_arg(n) 
115 |             if v: self.templates.add(v)
    |                 ^
116 |         if isinstance(n.func, ast.Attribute) and n.func.attr == "TemplateResponse":
117 |             v = _tmpl_arg(n) 
    |

E701 Multiple statements on one line (colon)
   --> scripts/noctria_dead_code_detector.py:118:17
    |
116 |         if isinstance(n.func, ast.Attribute) and n.func.attr == "TemplateResponse":
117 |             v = _tmpl_arg(n) 
118 |             if v: self.templates.add(v)
    |                 ^
119 |         self.generic_visit(n)
    |

E702 Multiple statements on one line (semicolon)
   --> scripts/noctria_dead_code_detector.py:126:15
    |
124 |         tree = ast.parse(t)
125 |     except Exception:
126 |         t = ""; tree = ast.parse("pass")
    |               ^
127 |     sig = PySignals(t); sig.visit(tree); return sig
    |

E702 Multiple statements on one line (semicolon)
   --> scripts/noctria_dead_code_detector.py:127:23
    |
125 |     except Exception:
126 |         t = ""; tree = ast.parse("pass")
127 |     sig = PySignals(t); sig.visit(tree); return sig
    |                       ^
128 |
129 | def build_module_index(py_files: List[Path]) -> Dict[str, Path]:
    |

E702 Multiple statements on one line (semicolon)
   --> scripts/noctria_dead_code_detector.py:127:40
    |
125 |     except Exception:
126 |         t = ""; tree = ast.parse("pass")
127 |     sig = PySignals(t); sig.visit(tree); return sig
    |                                        ^
128 |
129 | def build_module_index(py_files: List[Path]) -> Dict[str, Path]:
    |

E701 Multiple statements on one line (colon)
   --> scripts/noctria_dead_code_detector.py:150:25
    |
148 |             else:
149 |                 cands = [m for m in modules if imp == m or imp.startswith(m+".")]
150 |                 if cands: target = max(cands, key=len)
    |                         ^
151 |             if target and target != mod_from:
152 |                 deps[mod_from].add(target)
    |

E701 Multiple statements on one line (colon)
   --> scripts/noctria_dead_code_detector.py:154:23
    |
152 |                 deps[mod_from].add(target)
153 |                 rdeps[target] += 1
154 |         if sig.fastapi: fastapi.add(mod_from)
    |                       ^
155 |         if sig.airflow: airflow.add(mod_from)
156 |         for name in sig.templates:
    |

E701 Multiple statements on one line (colon)
   --> scripts/noctria_dead_code_detector.py:155:23
    |
153 |                 rdeps[target] += 1
154 |         if sig.fastapi: fastapi.add(mod_from)
155 |         if sig.airflow: airflow.add(mod_from)
    |                       ^
156 |         for name in sig.templates:
157 |             if name in tpl_index:
    |

E701 Multiple statements on one line (colon)
   --> scripts/noctria_dead_code_detector.py:175:21
    |
173 |     while dq:
174 |         u = dq.popleft()
175 |         if u in seen: continue
    |                     ^
176 |         seen.add(u)
177 |         for v in deps.get(u, ()):
    |

E701 Multiple statements on one line (colon)
   --> scripts/noctria_dead_code_detector.py:184:45
    |
182 | # ---------- coverage / tests / obs ----------
183 | def load_coverage_paths(xml_path: Optional[Path]) -> Set[str]:
184 |     if not xml_path or not xml_path.exists(): return set()
    |                                             ^
185 |     txt = xml_path.read_text(encoding="utf-8", errors="ignore")
186 |     # <class name="..." filename="src/plan_data/statistics.py" ...
    |

E701 Multiple statements on one line (colon)
   --> scripts/noctria_dead_code_detector.py:192:30
    |
190 | def tests_reference_name(target: Path) -> bool:
191 |     tests_dir = ROOT / "tests"
192 |     if not tests_dir.exists(): return False
    |                              ^
193 |     name = target.stem
194 |     pat = re.compile(rf'\b{re.escape(name)}\b')
    |

E701 Multiple statements on one line (colon)
   --> scripts/noctria_dead_code_detector.py:208:37
    |
206 |     など。path の集合だけ使う。
207 |     """
208 |     if not path or not path.exists(): return set()
    |                                     ^
209 |     try:
210 |         data = json.loads(path.read_text(encoding="utf-8"))
    |

E701 Multiple statements on one line (colon)
   --> scripts/noctria_dead_code_detector.py:214:17
    |
212 |         for row in data:
213 |             p = str(row.get("path","")).replace("\\","/")
214 |             if p: s.add(p)
    |                 ^
215 |         return s
216 |     except Exception:
    |

E702 Multiple statements on one line (semicolon)
   --> scripts/noctria_dead_code_detector.py:223:22
    |
221 |                   coverage_paths, obs_paths, stale_days_thresh: int):
222 |     rp = rel(p)
223 |     is_pyf = is_py(p); is_tplf = is_tpl(p)
    |                      ^
224 |     days = git_days_since_last_commit(p)
    |

E702 Multiple statements on one line (semicolon)
   --> scripts/noctria_dead_code_detector.py:251:28
    |
249 |         for a, outs in deps.items():
250 |             if rp in outs:
251 |                 used = True; break
    |                            ^
252 |         if not used:
253 |             categories.append("unused_template")
    |

E702 Multiple statements on one line (semicolon)
   --> scripts/noctria_dead_code_detector.py:307:24
    |
305 |     with csv_path.open("w", newline="", encoding="utf-8") as f:
306 |         w = csv.DictWriter(f, fieldnames=list(rows[0].keys()))
307 |         w.writeheader(); w.writerows(rows)
    |                        ^
308 |
309 |     # MD（要注目候補）
    |

E701 Multiple statements on one line (colon)
  --> src/codex/agents/proxy/tools/fs.py:20:30
   |
18 |         if act == "read_text":
19 |             p = self._abs(kwargs["path"])
20 |             if not p.exists(): return {"ok": False, "error": "not found"}
   |                              ^
21 |             return {"ok": True, "text": p.read_text(encoding="utf-8")}
22 |         return {"ok": False, "error": f"unknown fs action: {act}"}
   |

F821 Undefined name `cat`
 --> src/codex/agents/proxy/tools/pytest_runner.py:1:1
  |
1 | cat > codex/agents/proxy/tools/pytest_runner.py << 'PY'
  | ^^^
2 | from __future__ import annotations
  |

F821 Undefined name `codex`
 --> src/codex/agents/proxy/tools/pytest_runner.py:1:7
  |
1 | cat > codex/agents/proxy/tools/pytest_runner.py << 'PY'
  |       ^^^^^
2 | from __future__ import annotations
  |

F821 Undefined name `agents`
 --> src/codex/agents/proxy/tools/pytest_runner.py:1:13
  |
1 | cat > codex/agents/proxy/tools/pytest_runner.py << 'PY'
  |             ^^^^^^
2 | from __future__ import annotations
  |

F821 Undefined name `proxy`
 --> src/codex/agents/proxy/tools/pytest_runner.py:1:20
  |
1 | cat > codex/agents/proxy/tools/pytest_runner.py << 'PY'
  |                    ^^^^^
2 | from __future__ import annotations
  |

F821 Undefined name `tools`
 --> src/codex/agents/proxy/tools/pytest_runner.py:1:26
  |
1 | cat > codex/agents/proxy/tools/pytest_runner.py << 'PY'
  |                          ^^^^^
2 | from __future__ import annotations
  |

F821 Undefined name `pytest_runner`
 --> src/codex/agents/proxy/tools/pytest_runner.py:1:32
  |
1 | cat > codex/agents/proxy/tools/pytest_runner.py << 'PY'
  |                                ^^^^^^^^^^^^^
2 | from __future__ import annotations
  |

F404 `from __future__` imports must occur at the beginning of the file
 --> src/codex/agents/proxy/tools/pytest_runner.py:2:1
  |
1 | cat > codex/agents/proxy/tools/pytest_runner.py << 'PY'
2 | from __future__ import annotations
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
3 |
4 | import os
  |

E402 Module level import not at top of file
 --> src/codex/agents/proxy/tools/pytest_runner.py:2:1
  |
1 | cat > codex/agents/proxy/tools/pytest_runner.py << 'PY'
2 | from __future__ import annotations
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
3 |
4 | import os
  |

E402 Module level import not at top of file
 --> src/codex/agents/proxy/tools/pytest_runner.py:4:1
  |
2 | from __future__ import annotations
3 |
4 | import os
  | ^^^^^^^^^
5 | import subprocess
6 | from pathlib import Path
  |

E402 Module level import not at top of file
 --> src/codex/agents/proxy/tools/pytest_runner.py:5:1
  |
4 | import os
5 | import subprocess
  | ^^^^^^^^^^^^^^^^^
6 | from pathlib import Path
7 | from typing import Dict, Any
  |

E402 Module level import not at top of file
 --> src/codex/agents/proxy/tools/pytest_runner.py:6:1
  |
4 | import os
5 | import subprocess
6 | from pathlib import Path
  | ^^^^^^^^^^^^^^^^^^^^^^^^
7 | from typing import Dict, Any
  |

E402 Module level import not at top of file
 --> src/codex/agents/proxy/tools/pytest_runner.py:7:1
  |
5 | import subprocess
6 | from pathlib import Path
7 | from typing import Dict, Any
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |

F821 Undefined name `PY`
   --> src/codex/agents/proxy/tools/pytest_runner.py:107:1
    |
106 |         return {"ok": ok, "returncode": rc, "failed": failed, "status": status, "cmd": " ".join(cmd)}
107 | PY
    | ^^
    |

F841 Local variable `pytest_args` is assigned to but never used
  --> src/codex/mini_loop.py:75:9
   |
73 |     if allowed_tests:
74 |         # pytest に渡すためスペース区切りの文字列に変換
75 |         pytest_args = " ".join(allowed_tests)
   |         ^^^^^^^^^^^
76 |
77 |     # 1) pytest 実行
   |
help: Remove assignment to unused variable `pytest_args`

E402 Module level import not at top of file
  --> src/codex/run_codex_cycle.py:34:1
   |
33 | # ===== 依存（ローカル静的版のエージェント）=====
34 | from codex.agents.inventor import propose_fixes, InventorOutput  # type: ignore
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
35 | from codex.agents.harmonia import review, ReviewResult            # type: ignore
   |

E402 Module level import not at top of file
  --> src/codex/run_codex_cycle.py:35:1
   |
33 | # ===== 依存（ローカル静的版のエージェント）=====
34 | from codex.agents.inventor import propose_fixes, InventorOutput  # type: ignore
35 | from codex.agents.harmonia import review, ReviewResult            # type: ignore
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |

E741 Ambiguous variable name: `l`
  --> src/codex/tools/patch_gen.py:46:48
   |
44 |         return ""
45 |     lines = t.splitlines()
46 |     has_headers = any(l.startswith("--- ") for l in lines) and any(l.startswith("+++ ") for l in lines)
   |                                                ^
47 |     if has_headers:
48 |         return t + "\n"
   |

E741 Ambiguous variable name: `l`
  --> src/codex/tools/patch_gen.py:46:93
   |
44 |         return ""
45 |     lines = t.splitlines()
46 |     has_headers = any(l.startswith("--- ") for l in lines) and any(l.startswith("+++ ") for l in lines)
   |                                                                                             ^
47 |     if has_headers:
48 |         return t + "\n"
   |

E402 Module level import not at top of file
  --> src/codex/tools/review_pipeline.py:57:1
   |
55 |         _sys.path.insert(0, _sp)
56 |
57 | import datetime as _dt
   | ^^^^^^^^^^^^^^^^^^^^^^
58 | import json
59 | import os
   |

E402 Module level import not at top of file
  --> src/codex/tools/review_pipeline.py:58:1
   |
57 | import datetime as _dt
58 | import json
   | ^^^^^^^^^^^
59 | import os
60 | import re
   |

E402 Module level import not at top of file
  --> src/codex/tools/review_pipeline.py:59:1
   |
57 | import datetime as _dt
58 | import json
59 | import os
   | ^^^^^^^^^
60 | import re
61 | import difflib
   |

E402 Module level import not at top of file
  --> src/codex/tools/review_pipeline.py:60:1
   |
58 | import json
59 | import os
60 | import re
   | ^^^^^^^^^
61 | import difflib
62 | import subprocess
   |

E402 Module level import not at top of file
  --> src/codex/tools/review_pipeline.py:61:1
   |
59 | import os
60 | import re
61 | import difflib
   | ^^^^^^^^^^^^^^
62 | import subprocess
63 | from pathlib import Path
   |

E402 Module level import not at top of file
  --> src/codex/tools/review_pipeline.py:62:1
   |
60 | import re
61 | import difflib
62 | import subprocess
   | ^^^^^^^^^^^^^^^^^
63 | from pathlib import Path
64 | from typing import Dict, Any, List, Tuple, Optional
   |

E402 Module level import not at top of file
  --> src/codex/tools/review_pipeline.py:63:1
   |
61 | import difflib
62 | import subprocess
63 | from pathlib import Path
   | ^^^^^^^^^^^^^^^^^^^^^^^^
64 | from typing import Dict, Any, List, Tuple, Optional
   |

E402 Module level import not at top of file
  --> src/codex/tools/review_pipeline.py:64:1
   |
62 | import subprocess
63 | from pathlib import Path
64 | from typing import Dict, Any, List, Tuple, Optional
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
65 |
66 | from codex.tools.json_parse import load_json, build_pytest_result_for_inventor
   |

E402 Module level import not at top of file
  --> src/codex/tools/review_pipeline.py:66:1
   |
64 | from typing import Dict, Any, List, Tuple, Optional
65 |
66 | from codex.tools.json_parse import load_json, build_pytest_result_for_inventor
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
67 |
68 | # 既存 Inventor / Harmonia(API) インターフェース
   |

E402 Module level import not at top of file
  --> src/codex/tools/review_pipeline.py:69:1
   |
68 | # 既存 Inventor / Harmonia(API) インターフェース
69 | from codex.agents.inventor import propose_fixes, InventorOutput, PatchSuggestion
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
70 | from codex.agents.harmonia import review, ReviewResult  # ← API版レビュー
   |

E402 Module level import not at top of file
  --> src/codex/tools/review_pipeline.py:70:1
   |
68 | # 既存 Inventor / Harmonia(API) インターフェース
69 | from codex.agents.inventor import propose_fixes, InventorOutput, PatchSuggestion
70 | from codex.agents.harmonia import review, ReviewResult  # ← API版レビュー
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
71 |
72 | # オフライン Harmonia（存在しなければ後述のフォールバックを使用）
   |

E701 Multiple statements on one line (colon)
  --> src/codex_reports/dead_code/quarantine.py:36:20
   |
34 |         rts  = (row.get("runtime_seen") or "0").strip()
35 |
36 |         if not path: continue
   |                    ^
37 |         if not any(k in cats for k in ("orphaned","unreferenced","unused_template")): continue
38 |         if cov=="1" or rts=="1": continue
   |

E701 Multiple statements on one line (colon)
  --> src/codex_reports/dead_code/quarantine.py:37:85
   |
36 |         if not path: continue
37 |         if not any(k in cats for k in ("orphaned","unreferenced","unused_template")): continue
   |                                                                                     ^
38 |         if cov=="1" or rts=="1": continue
39 |         if os.path.basename(path) == "__init__.py":
   |

E701 Multiple statements on one line (colon)
  --> src/codex_reports/dead_code/quarantine.py:38:32
   |
36 |         if not path: continue
37 |         if not any(k in cats for k in ("orphaned","unreferenced","unused_template")): continue
38 |         if cov=="1" or rts=="1": continue
   |                                ^
39 |         if os.path.basename(path) == "__init__.py":
40 |             print(f"[skip] {path} (__init__.py)"); continue
   |

E702 Multiple statements on one line (semicolon)
  --> src/codex_reports/dead_code/quarantine.py:40:50
   |
38 |         if cov=="1" or rts=="1": continue
39 |         if os.path.basename(path) == "__init__.py":
40 |             print(f"[skip] {path} (__init__.py)"); continue
   |                                                  ^
41 |
42 |         dest = os.path.join(GRAVEYARD, path)
   |

E702 Multiple statements on one line (semicolon)
  --> src/codex_reports/dead_code/quarantine.py:44:52
   |
42 |         dest = os.path.join(GRAVEYARD, path)
43 |         if os.path.exists(dest):
44 |             print(f"[skip] {path} (already moved)"); continue
   |                                                    ^
45 |
46 |         os.makedirs(os.path.dirname(dest), exist_ok=True)
   |

E402 Module level import not at top of file
  --> src/core/data_loader.py:12:1
   |
10 | )
11 |
12 | import requests
   | ^^^^^^^^^^^^^^^
13 | import numpy as np
14 | import logging
   |

E402 Module level import not at top of file
  --> src/core/data_loader.py:13:1
   |
12 | import requests
13 | import numpy as np
   | ^^^^^^^^^^^^^^^^^^
14 | import logging
15 | import pandas as pd
   |

E402 Module level import not at top of file
  --> src/core/data_loader.py:14:1
   |
12 | import requests
13 | import numpy as np
14 | import logging
   | ^^^^^^^^^^^^^^
15 | import pandas as pd
16 | import json
   |

E402 Module level import not at top of file
  --> src/core/data_loader.py:15:1
   |
13 | import numpy as np
14 | import logging
15 | import pandas as pd
   | ^^^^^^^^^^^^^^^^^^^
16 | import json
17 | from src.core.path_config import DATA_DIR   # パス定数をimport
   |

E402 Module level import not at top of file
  --> src/core/data_loader.py:16:1
   |
14 | import logging
15 | import pandas as pd
16 | import json
   | ^^^^^^^^^^^
17 | from src.core.path_config import DATA_DIR   # パス定数をimport
18 | from statsmodels.tsa.holtwinters import ExponentialSmoothing
   |

E402 Module level import not at top of file
  --> src/core/data_loader.py:17:1
   |
15 | import pandas as pd
16 | import json
17 | from src.core.path_config import DATA_DIR   # パス定数をimport
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
18 | from statsmodels.tsa.holtwinters import ExponentialSmoothing
19 | from typing import Optional, List, Dict, Any
   |

E402 Module level import not at top of file
  --> src/core/data_loader.py:18:1
   |
16 | import json
17 | from src.core.path_config import DATA_DIR   # パス定数をimport
18 | from statsmodels.tsa.holtwinters import ExponentialSmoothing
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
19 | from typing import Optional, List, Dict, Any
20 | from pathlib import Path  # buffer_pathでstr型が渡される場合に備えて残す（外部指定ありの場合のみ）
   |

E402 Module level import not at top of file
  --> src/core/data_loader.py:19:1
   |
17 | from src.core.path_config import DATA_DIR   # パス定数をimport
18 | from statsmodels.tsa.holtwinters import ExponentialSmoothing
19 | from typing import Optional, List, Dict, Any
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
20 | from pathlib import Path  # buffer_pathでstr型が渡される場合に備えて残す（外部指定ありの場合のみ）
   |

E402 Module level import not at top of file
  --> src/core/data_loader.py:20:1
   |
18 | from statsmodels.tsa.holtwinters import ExponentialSmoothing
19 | from typing import Optional, List, Dict, Any
20 | from pathlib import Path  # buffer_pathでstr型が渡される場合に備えて残す（外部指定ありの場合のみ）
   | ^^^^^^^^^^^^^^^^^^^^^^^^
21 |
22 | DEFAULT_BUFFER_PATH = DATA_DIR / "market_data_buffer.json"  # バッファはdata配下に統一
   |

F821 Undefined name `Path`
   --> src/core/meta_ai.py:121:12
    |
119 |     # 実際のパスに合わせて要調整
120 |     df_path = "data/sample_test_data.csv"
121 |     if not Path(df_path).exists():
    |            ^^^^
122 |         # ダミーデータ作成
123 |         dates = pd.date_range(start="2024-01-01", periods=200)
    |

F841 Local variable `dd_diff` is assigned to but never used
  --> src/core/pdca_log_parser.py:94:9
   |
92 |         avg_dd_before = sum(dd_before_vals) / len(group) if group else 0.0
93 |         avg_dd_after = sum(dd_after_vals) / len(group) if group else 0.0
94 |         dd_diff = round(avg_dd_before - avg_dd_after, 2)
   |         ^^^^^^^
95 |
96 |         adopted = any(g["status"] == "adopted" for g in group)
   |
help: Remove assignment to unused variable `dd_diff`

F811 Redefinition of unused `simulate_strategy_adjusted` from line 17
  --> src/core/strategy_optimizer_adjusted.py:51:5
   |
49 |     return risk_control.current_capital
50 |
51 | def simulate_strategy_adjusted(strategy_path: str, market_data: pd.DataFrame) -> dict:
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ `simulate_strategy_adjusted` redefined here
52 |     try:
53 |         namespace = {}
   |
  ::: src/core/strategy_optimizer_adjusted.py:17:5
   |
15 |         return None
16 |
17 | def simulate_strategy_adjusted(prices, entry_threshold, exit_threshold, initial_capital=1000000):
   |     -------------------------- previous definition of `simulate_strategy_adjusted` here
18 |     risk_control = RiskControl(initial_capital)
19 |     position = 0
   |
help: Remove definition: `simulate_strategy_adjusted`

F841 Local variable `state` is assigned to but never used
  --> src/core/task_scheduler.py:21:9
   |
19 |         """市場データをAIへ適用し、最適戦略を動的選定"""
20 |
21 |         state = np.array([market_data["price_change"], market_data["volatility"], market_data["liquidity_index"], market_data["news_se…
   |         ^^^^^
22 |         strategy_scores = {}
   |
help: Remove assignment to unused variable `state`

F821 Undefined name `initial_capital`
  --> src/execution/simulate_official_strategy.py:64:25
   |
62 |         capital = self.initial_capital
63 |         position = 0  # 0: No position, 1: Long, -1: Short
64 |         equity_curve = [initial_capital]
   |                         ^^^^^^^^^^^^^^^
65 |
66 |         for i in range(1, len(self.data)):
   |

F821 Undefined name `json`
   --> src/execution/simulate_official_strategy.py:154:13
    |
153 |         with open(report_path.with_suffix('.json'), 'w') as f:
154 |             json.dump(metrics, f, indent=2)
    |             ^^^^
155 |         logger.info(f"📋 パフォーマンスレポートを保存しました: {report_path.with_suffix('.json')}")
    |

F821 Undefined name `datetime`
   --> src/execution/simulate_official_strategy.py:188:55
    |
186 |     logger.info(f"🏆 シミュレーション結果: {metrics}")
187 |     
188 |     report_file_path = log_dir / f"simulation_report_{datetime.now().strftime('%Y%m%d_%H%M%S')}"
    |                                                       ^^^^^^^^
189 |     Backtester.generate_report(equity_curve, metrics, report_file_path)
    |

E402 Module level import not at top of file
 --> src/execution/trade_analysis.py:3:1
  |
1 | print("=== Trade Analysis Script Started ===")
2 |
3 | import pandas as pd
  | ^^^^^^^^^^^^^^^^^^^
4 | import matplotlib.pyplot as plt
5 | import glob
  |

E402 Module level import not at top of file
 --> src/execution/trade_analysis.py:4:1
  |
3 | import pandas as pd
4 | import matplotlib.pyplot as plt
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
5 | import glob
6 | import os
  |

E402 Module level import not at top of file
 --> src/execution/trade_analysis.py:5:1
  |
3 | import pandas as pd
4 | import matplotlib.pyplot as plt
5 | import glob
  | ^^^^^^^^^^^
6 | import os
  |

E402 Module level import not at top of file
 --> src/execution/trade_analysis.py:6:1
  |
4 | import matplotlib.pyplot as plt
5 | import glob
6 | import os
  | ^^^^^^^^^
7 |
8 | print("[INFO] Checking logs directory for trade history CSVs...")
  |

invalid-syntax: Got unexpected token `
 --> src/plan_data/kpi_minidemo.py:2:1
  |
1 | #### 📂 src/plan_data/kpi_minidemo.py
2 | ```python
  | ^
3 | # -*- coding: utf-8 -*-
4 | """
  |

invalid-syntax: Got unexpected token `
 --> src/plan_data/kpi_minidemo.py:2:2
  |
1 | #### 📂 src/plan_data/kpi_minidemo.py
2 | ```python
  |  ^
3 | # -*- coding: utf-8 -*-
4 | """
  |

invalid-syntax: Got unexpected token `
 --> src/plan_data/kpi_minidemo.py:2:3
  |
1 | #### 📂 src/plan_data/kpi_minidemo.py
2 | ```python
  |   ^
3 | # -*- coding: utf-8 -*-
4 | """
  |

invalid-syntax: Got unexpected token `
  --> src/plan_data/kpi_minidemo.py:59:1
   |
57 |     for k, v in kpis.items():
58 |         print(f"  {k}: {v}")
59 | ```
   | ^
60 |
61 | ---
   |

invalid-syntax: Got unexpected token `
  --> src/plan_data/kpi_minidemo.py:59:2
   |
57 |     for k, v in kpis.items():
58 |         print(f"  {k}: {v}")
59 | ```
   |  ^
60 |
61 | ---
   |

invalid-syntax: Got unexpected token `
  --> src/plan_data/kpi_minidemo.py:59:3
   |
57 |     for k, v in kpis.items():
58 |         print(f"  {k}: {v}")
59 | ```
   |   ^
60 |
61 | ---
   |

invalid-syntax: Expected a statement
  --> src/plan_data/kpi_minidemo.py:59:4
   |
57 |     for k, v in kpis.items():
58 |         print(f"  {k}: {v}")
59 | ```
   |    ^
60 |
61 | ---
   |

invalid-syntax: Expected an expression
  --> src/plan_data/kpi_minidemo.py:61:4
   |
59 | ```
60 |
61 | ---
   |    ^
   |

F841 Local variable `trace_id` is assigned to but never used
   --> src/plan_data/quality_gate.py:168:5
    |
166 |     features: Dict[str, Any] = _get_attr(bundle, "features", {}) or {}
167 |     context: Dict[str, Any] = _get_attr(bundle, "context", {}) or {}
168 |     trace_id: str = _get_attr(bundle, "trace_id", "") or ""
    |     ^^^^^^^^
169 |
170 |     # -------- 実測/推定値の計算 --------
    |
help: Remove assignment to unused variable `trace_id`

F403 `from core.path_config import *` used; unable to detect undefined names
 --> src/scripts/meta_ai_tensorboard_train.py:1:1
  |
1 | from core.path_config import *
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2 | #!/usr/bin/env python3
3 | # coding: utf-8
  |

F841 Local variable `np` is assigned to but never used
  --> src/scripts/optimize_params_with_optuna.py:76:5
   |
74 | def make_objective(cfg: OptunaConfig):
75 |     mods = _lazy_imports()
76 |     np = mods["np"]
   |     ^^
77 |     gym = mods["gym"]
78 |     PPO = mods["PPO"]
   |
help: Remove assignment to unused variable `np`

F841 Local variable `optuna_mod` is assigned to but never used
  --> src/scripts/optimize_params_with_optuna.py:81:5
   |
79 |     DummyVecEnv = mods["DummyVecEnv"]
80 |     evaluate_policy = mods["evaluate_policy"]
81 |     optuna_mod = mods["optuna"]
   |     ^^^^^^^^^^
82 |
83 |     # env factory（直インスタンス or gym.make）
   |
help: Remove assignment to unused variable `optuna_mod`

F821 Undefined name `optuna`
  --> src/scripts/optimize_params_with_optuna.py:90:27
   |
88 |         return gym.make(cfg.env_id)
89 |
90 |     def objective(trial: "optuna.trial.Trial") -> float:
   |                           ^^^^^^
91 |         # Hyperparameter Search Space
92 |         learning_rate = trial.suggest_float("learning_rate", 1e-5, 1e-3, log=True)
   |

F821 Undefined name `optuna`
   --> src/scripts/optimize_params_with_optuna.py:175:15
    |
174 |     # Sampler
175 |     sampler: "optuna.samplers.BaseSampler"
    |               ^^^^^^
176 |     if cfg.sampler.lower() == "tpe":
177 |         sampler = optuna_mod.samplers.TPESampler(seed=cfg.seed)
    |

F821 Undefined name `optuna`
   --> src/scripts/optimize_params_with_optuna.py:184:23
    |
183 |     # Pruner
184 |     pruner: Optional["optuna.pruners.BasePruner"]
    |                       ^^^^^^
185 |     if cfg.pruner.lower() == "median":
186 |         pruner = optuna_mod.pruners.MedianPruner(n_startup_trials=5, n_warmup_steps=cfg.allow_prune_after)
    |

F841 Local variable `prompt` is assigned to but never used
  --> src/strategies/hermes_cognitor.py:49:9
   |
47 |         reason: Optional[str] = None
48 |     ) -> str:
49 |         prompt = self._build_prompt(features, labels, feature_order, reason)
   |         ^^^^^^
50 |         logging.info("HermesCognitor: プロンプト組み立て完了")
51 |         # ※本番ではOpenAI API等で要約を生成（省略）
   |
help: Remove assignment to unused variable `prompt`

F841 Local variable `cov_matrix` is assigned to but never used
  --> src/strategies/portfolio_optimizer.py:11:9
   |
 9 |     def optimize(self, asset_returns):
10 |         """資産のリターンを分析し、最適なポートフォリオ比率を計算"""
11 |         cov_matrix = np.cov(asset_returns, rowvar=False)
   |         ^^^^^^^^^^
12 |         avg_returns = np.mean(asset_returns, axis=0)
   |
help: Remove assignment to unused variable `cov_matrix`

E402 Module level import not at top of file
  --> src/strategies/prometheus_oracle.py:39:1
   |
37 |     gym = None  # type: ignore
38 |
39 | from src.core.path_config import VERITAS_MODELS_DIR, ORACLE_FORECAST_JSON, DATA_DIR
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
40 | from src.plan_data.standard_feature_schema import STANDARD_FEATURE_ORDER
   |

E402 Module level import not at top of file
  --> src/strategies/prometheus_oracle.py:40:1
   |
39 | from src.core.path_config import VERITAS_MODELS_DIR, ORACLE_FORECAST_JSON, DATA_DIR
40 | from src.plan_data.standard_feature_schema import STANDARD_FEATURE_ORDER
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
41 |
42 | log = logging.getLogger(__name__)
   |

F821 Undefined name `pr`
  --> src/tools/dependency_analyzer.py:46:5
   |
45 | def main():
46 |     pr
   |     ^^
   |

F601 Dictionary key literal `'from strategies.noctus_sentinella import'` repeated
  --> src/tools/fix_import_paths.py:14:5
   |
12 |     'from scripts.apply_best_params_to_metaai import': 'from scripts.apply_best_params_to_metaai import',
13 |     # 念のため strategies から直接も置換
14 |     'from strategies.noctus_sentinella import': 'from strategies.noctus_sentinella import',
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
15 | }
   |
help: Remove repeated key literal `'from strategies.noctus_sentinella import'`

E741 Ambiguous variable name: `l`
  --> src/tools/fix_path_violations.py:49:60
   |
47 |     if modified:
48 |         # import path_config が含まれていなければ追加
49 |         if not any("from core.path_config import" in l for l in new_lines):
   |                                                            ^
50 |             new_lines.insert(0, IMPORT_LINE + "\n")
51 |         with open(file_path, "w", encoding="utf-8") as f:
   |

F841 Local variable `keep` is assigned to but never used
  --> src/tools/generate_cleanup_script.py:34:13
   |
32 |             # 原則として1つを残し、他は削除（要レビュー）
33 |             paths = issue["paths"]
34 |             keep = paths[0]
   |             ^^^^
35 |             for path in paths[1:]:
36 |                 cmds.append(f"# ⚠️ 重複: '{issue['name']}' → 一方を残す\n")
   |
help: Remove assignment to unused variable `keep`

E722 Do not use bare `except`
  --> src/tools/push_official_strategy_to_github.py:41:9
   |
39 |                 if isinstance(data, dict):
40 |                     logs.append((file, data))
41 |         except:
   |         ^^^^^^
42 |             continue
43 |     return logs
   |

E402 Module level import not at top of file
  --> src/tools/show_timeline.py:52:1
   |
51 | # We reuse observability helpers (for ensure_* only).
52 | from plan_data.observability import ensure_tables, ensure_views, refresh_materialized  # type: ignore
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |

E402 Module level import not at top of file
  --> src/tools/structure_refactor.py:14:1
   |
13 | # === 各種モジュールインポート ===
14 | from tools.hardcoded_path_replacer import replace_paths
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
15 | from tools.structure_auditor import audit_structure  # ← 明示的に audit_structure を呼ぶ
   |

E402 Module level import not at top of file
  --> src/tools/structure_refactor.py:15:1
   |
13 | # === 各種モジュールインポート ===
14 | from tools.hardcoded_path_replacer import replace_paths
15 | from tools.structure_auditor import audit_structure  # ← 明示的に audit_structure を呼ぶ
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
16 |
17 | # === 対象ディレクトリ（v3.0構成）===
   |

F841 Local variable `entry_price` is assigned to but never used
  --> src/veritas/generate/templates/strategy_template.py:23:13
   |
21 |         if position == 0 and rsi > 50 and spread < 2:
22 |             position = capital / price
23 |             entry_price = price
   |             ^^^^^^^^^^^
24 |
25 |         elif position > 0 and (rsi < 50 or spread > 2):
   |
help: Remove assignment to unused variable `entry_price`

E402 Module level import not at top of file
  --> src/veritas/strategy_generator.py:11:1
   |
 9 |     sys.path.insert(0, str(src_path))
10 |
11 | import os
   | ^^^^^^^^^
12 | import torch
13 | import psycopg2
   |

E402 Module level import not at top of file
  --> src/veritas/strategy_generator.py:12:1
   |
11 | import os
12 | import torch
   | ^^^^^^^^^^^^
13 | import psycopg2
14 | from datetime import datetime
   |

E402 Module level import not at top of file
  --> src/veritas/strategy_generator.py:13:1
   |
11 | import os
12 | import torch
13 | import psycopg2
   | ^^^^^^^^^^^^^^^
14 | from datetime import datetime
   |

E402 Module level import not at top of file
  --> src/veritas/strategy_generator.py:14:1
   |
12 | import torch
13 | import psycopg2
14 | from datetime import datetime
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
15 |
16 | from core.path_config import VERITAS_MODELS_DIR, STRATEGIES_DIR, LOGS_DIR
   |

E402 Module level import not at top of file
  --> src/veritas/strategy_generator.py:16:1
   |
14 | from datetime import datetime
15 |
16 | from core.path_config import VERITAS_MODELS_DIR, STRATEGIES_DIR, LOGS_DIR
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
17 | from core.logger import setup_logger
   |

E402 Module level import not at top of file
  --> src/veritas/strategy_generator.py:17:1
   |
16 | from core.path_config import VERITAS_MODELS_DIR, STRATEGIES_DIR, LOGS_DIR
17 | from core.logger import setup_logger
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
18 |
19 | from veritas.models.ml_model.simple_model import SimpleModel
   |

E402 Module level import not at top of file
  --> src/veritas/strategy_generator.py:19:1
   |
17 | from core.logger import setup_logger
18 |
19 | from veritas.models.ml_model.simple_model import SimpleModel
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
20 |
21 | logger = setup_logger("VeritasGenerator", LOGS_DIR / "veritas" / "generator.log")
   |

F841 Local variable `model` is assigned to but never used
  --> src/veritas/strategy_generator.py:68:9
   |
66 |     """
67 |     try:
68 |         model = load_ml_model()
   |         ^^^^^
69 |         # TODO: 入力ベクトル・推論ロジックを本番仕様で置き換え
70 |         import random
   |
help: Remove assignment to unused variable `model`

F841 Local variable `actions_tensor` is assigned to but never used
  --> tests/backtesting/dqn_backtest.py:35:13
   |
33 |             states_tensor = torch.tensor(states, dtype=torch.float32)
34 |             next_states_tensor = torch.tensor(next_states, dtype=torch.float32)
35 |             actions_tensor = torch.tensor(actions, dtype=torch.int64)
   |             ^^^^^^^^^^^^^^
36 |             rewards_tensor = torch.tensor(rewards, dtype=torch.float32)
37 |             dones_tensor = torch.tensor(dones, dtype=torch.float32)
   |
help: Remove assignment to unused variable `actions_tensor`

F841 Local variable `rewards_tensor` is assigned to but never used
  --> tests/backtesting/dqn_backtest.py:36:13
   |
34 |             next_states_tensor = torch.tensor(next_states, dtype=torch.float32)
35 |             actions_tensor = torch.tensor(actions, dtype=torch.int64)
36 |             rewards_tensor = torch.tensor(rewards, dtype=torch.float32)
   |             ^^^^^^^^^^^^^^
37 |             dones_tensor = torch.tensor(dones, dtype=torch.float32)
   |
help: Remove assignment to unused variable `rewards_tensor`

F841 Local variable `dones_tensor` is assigned to but never used
  --> tests/backtesting/dqn_backtest.py:37:13
   |
35 |             actions_tensor = torch.tensor(actions, dtype=torch.int64)
36 |             rewards_tensor = torch.tensor(rewards, dtype=torch.float32)
37 |             dones_tensor = torch.tensor(dones, dtype=torch.float32)
   |             ^^^^^^^^^^^^
38 |
39 |             # Q値の計算
   |
help: Remove assignment to unused variable `dones_tensor`

E402 Module level import not at top of file
  --> tests/conftest.py:41:1
   |
40 | # --- Fixtures ---------------------------------------------------------------
41 | import logging
   | ^^^^^^^^^^^^^^
42 | import typing as t
43 | import json as _json
   |

E402 Module level import not at top of file
  --> tests/conftest.py:42:1
   |
40 | # --- Fixtures ---------------------------------------------------------------
41 | import logging
42 | import typing as t
   | ^^^^^^^^^^^^^^^^^^
43 | import json as _json
44 | import pytest
   |

E402 Module level import not at top of file
  --> tests/conftest.py:43:1
   |
41 | import logging
42 | import typing as t
43 | import json as _json
   | ^^^^^^^^^^^^^^^^^^^^
44 | import pytest
   |

E402 Module level import not at top of file
  --> tests/conftest.py:44:1
   |
42 | import typing as t
43 | import json as _json
44 | import pytest
   | ^^^^^^^^^^^^^
   |

F403 `from core.path_config import *` used; unable to detect undefined names
 --> tests/execute_order_test.py:1:1
  |
1 | from core.path_config import *
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2 |
3 | from order_execution import OrderExecution  # execution/order_execution.py
  |

F403 `from core.path_config import *` used; unable to detect undefined names
 --> tests/forward_test_meta_ai.py:1:1
  |
1 | from core.path_config import *
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2 | #!/usr/bin/env python3
3 | # coding: utf-8
  |

F405 `PROCESSED_DATA_DIR` may be undefined, or defined from star imports
  --> tests/forward_test_meta_ai.py:21:31
   |
20 |     # 実際の市場データ（MT5からダウンロードしたデータなど）
21 |     real_time_data_path = str(PROCESSED_DATA_DIR / "preprocessed_usdjpy_with_fundamental.csv")
   |                               ^^^^^^^^^^^^^^^^^^
22 |     real_time_data = load_real_time_data(real_time_data_path)
   |

F403 `from core.path_config import *` used; unable to detect undefined names
 --> tests/run_ai_trading_loop.py:1:1
  |
1 | from core.path_config import *
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2 | # tests/run_ai_trading_loop.py
  |

F841 Local variable `observation` is assigned to but never used
  --> tests/test_meta_ai_rl_longrun.py:27:5
   |
25 |     # 例: 実際のヒストリカルデータファイルから観測データ生成（省略可）
26 |     # ここではランダム観測データを利用
27 |     observation = np.random.rand(12)
   |     ^^^^^^^^^^^
28 |
29 |     # 環境の初期化
   |
help: Remove assignment to unused variable `observation`

F841 Local variable `obs` is assigned to but never used
  --> tests/test_meta_ai_rl_longrun.py:30:5
   |
29 |     # 環境の初期化
30 |     obs = meta_ai.reset()
   |     ^^^
31 |
32 |     # 例: 50,000ステップの長期学習
   |
help: Remove assignment to unused variable `obs`

F841 Local variable `mock_market_data` is assigned to but never used
  --> tests/test_noctria.py:15:9
   |
13 |     def test_strategy_execution(self):
14 |         """市場データを適用し、戦略精度を評価"""
15 |         mock_market_data = {
   |         ^^^^^^^^^^^^^^^^
16 |             "price": 1.245, "volume": 1500, "sentiment": 0.75, "trend_strength": 0.6,
17 |             "volatility": 0.18, "order_block": 0.5, "institutional_flow": 0.85,
   |
help: Remove assignment to unused variable `mock_market_data`

E402 Module level import not at top of file
  --> tests/test_noctus_gate_block.py:17:1
   |
15 | StrategyProposal = sa.StrategyProposal
16 |
17 | from plan_data.adapter_to_decision import run_strategy_and_decide
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |

F841 Local variable `policy` is assigned to but never used
 --> tests/test_policy_guard.py:7:5
  |
6 | def test_inventor_can_propose_patch_basic():
7 |     policy = load_policy()
  |     ^^^^^^
8 |     ctx = {
9 |         "changed_files": 2,
  |
help: Remove assignment to unused variable `policy`

Found 2512 errors (422 fixed, 2090 remaining).
No fixes available (65 hidden fixes can be enabled with the `--unsafe-fixes` option).

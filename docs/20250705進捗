# 📘 Noctria Kingdom 開発状況・ブラッシュアップまとめ（Veritas以外優先）

---

## ✅ 現在の開発フェーズ

> **Veritasの自律処理（戦略生成・PDCAループ）はgpusoroban課金対象のため後回しとし、  
Airflow・MetaAI・評価・実行・ログ周辺などVeritas以外の全体強化を優先中。**

---

## 🔧 直近で実施した修正・対応

### 1. `risk_management` → `risk_manager` 名称不整合の修正
- `core/risk_management.py` → `core/risk_manager.py` にファイル名統一
- 全DAG/戦略ファイル内の `from core.risk_management import RiskManager` を一括で `risk_manager` に修正

### 2. `setup_logger()` の形式統一
- 引数形式の不統一による `ValueError("Unknown level")` を修正
- ログレベルとファイルパスを混同していた記述を一括修正
- 対象ファイル（例）:
  - `core/noctria.py`
  - `strategies/*.py`
  - `dags/noctria_kingdom_dag.py` など

### 3. `apply_best_params_to_kingdom.py` の実装不足エラーに対処
- `scripts/` にファイルがなかったため、`noctria_kingdom_pdca_dag.py` の import 部分を一時的にコメントアウト対応（今後実装）

### 4. Airflow動作エラーの修正
- `docker compose down -v` によるボリューム削除後、`airflow db init` 実施
- `.env` と `docker-compose.yaml` のホスト・ボリュームパスを全て `/opt/airflow` に統一
- `/core/`, `/scripts/`, `/strategies/` など明示マウント済

---

## 🧱 現在の構成方針（v2.0・v2.1）

| 項目 | 内容 |
|------|------|
| **パス管理** | `core/path_config.py` による絶対パス統一管理 |
| **Airflowの責務** | ロジックを持たず、全て外部スクリプトを呼び出す「伝令役」に徹する |
| **ディレクトリ統一** | `/opt/airflow` を Airflow 内の唯一のベースパスとする（Docker・WSL・GitHubで統一） |
| **ログ設計** | `setup_logger(name, log_file)` を明示し、Airflow内でも一貫したログ保存構造を持つ |
| **自動生成 vs 手動編集** | `veritas_generated/` 配下の戦略は手動編集禁止、GitHub管理と分離運用する方針 |

---

## ⏳ 今後の開発優先方針（Veritas除く）

- ✅ **MetaAI最適化処理（Optuna〜apply）** の改善・テスト
- ✅ **戦略評価ロジック**（Backtest → Metrics → 採用判定）のブラッシュアップ
- ✅ **Execution層** の統一＆自動実行構成（例：`execution/runner.py`）
- ✅ **ログ保存の一元化と可視化準備**
- ✅ **DAGの再構成（Veritas用PDCA含め統合化）**
- ✅ **GitHub反映の再整備（自動コミットスクリプト強化）**

---

## 🚫 Veritas関連の今後の実行タイミング（後回し）

| 項目 | 状況 |
|------|------|
| Veritas戦略生成（LLM推論） | gpusorobanで課金が発生するため後回しに保留 |
| `veritas_master_dag.py` 系 | DAG構造・戦略保存先などは保留対象 |
| `veritas_generate_dag.py` | DAG構築済みだが未起動で良い |

---

## 📝 備考

- GitHubは `main` ブランチが基準。手動 push / commit の整備も完了
- `tools/fix_logger_usage.py` など内部自動整備スクリプト群も整理中
- `.env`, `docker-compose.yaml`, `requirements_airflow.txt` 等の設計は `/opt/airflow` 前提で安定運用可

---

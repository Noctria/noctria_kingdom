%% CHECK層 詳細図（実績評価・監視・集計）
flowchart TD

  %% 入力（Do層からの結果/イベント）
  subgraph INPUTS["上流入力 (from DO)"]
    EXECRES["exec_result.json\n(約定/損益/コスト)"]
    RISEVT["risk_event.json\n(損失/連敗/異常)"]
    AUDIT["audit_order.json\n(完全監査ログ)"]
  end

  %% CHECK層
  subgraph CHECK["🔍 Check層 (src/check)"]
    MON["challenge_monitor.py\n・DD監視/連敗監視\n・ルール逸脱検知\n・アラート生成"]
    EVAL["evaluation.py\n・日次/戦略別KPI\n・勝率/最大DD/取引数/平均R"]
    AGG["aggregator.py\n・期間集計/AI別/シンボル別\n・ランキング/タグ別比較"]
    STORE["/data/pdca_logs/**/*.json\n・評価・監視・指標の永続化"]
  end

  %% 出力（Act/GUI）
  subgraph OUTPUTS["下流出力 (to ACT/GUI)"]
    KPI["kpi_summary.json\n(戦略別KPIのスナップショット)"]
    ALERT["alert_payload.json\n(通知/抑制フラグ付き)"]
  end

  %% 統治
  subgraph ORCH["統治/運用"]
    GUICHECK["GUI: /pdca/check\n(モニタ & 評価一覧)"]
    DAGCHECK["Airflow DAG: pdca_check_flow.py\n(定期評価/閾値判定)"]
    NOTIFY["notifier.py\n(Slack/メール/Webhook)"]
  end

  %% フロー
  EXECRES --> EVAL
  RISEVT --> MON
  AUDIT --> AGG
  EVAL --> AGG --> STORE
  MON --> ALERT --> NOTIFY
  AGG --> KPI

  %% 管理
  GUICHECK --> DAGCHECK
  DAGCHECK --> EVAL
  DAGCHECK --> MON

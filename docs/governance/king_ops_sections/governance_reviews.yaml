# =======================================================
# ガバナンスレビュー（ハイブリッド運用）
# =======================================================
governance_reviews:
  schema_version: "1.1"

  modes:
    lightweight_daily:
      goal: "重複/矛盾/表記ゆれの小掃除（変更の有無で自動スキップ）"
      schedule: { frequency: "daily", time_utc: "08:30" }
      reviewer_rotation: ["king","prometheus","aurus"]     # 追加: 当番ローテ
      sla_minutes: 20                                       # 追加: 上限作業時間（過剰最適化防止）
      triggers:
        change_detect:
          paths: ["docs/governance/king_ops_prompt.yaml","scripts/**","noctria_kingdom/**"]
          min_diff_lines: 8
          max_days_without_review: 3
          churn_window_days: 7                              # 追加: 直近の変更密度で優先度づけ
        manual_override: true
      skip_rules:
        - "変更検出ゼロ AND 前回レビュー<=24h"
        - "週末 AND kpi_alerts.none"
        - "CI赤い（testing.smoke 失敗）"                    # 追加: 不安定時は触らない
      checks:
        - "セクション重複/競合キー検出"
        - "未参照scripts/未定義jobsの洗い出し"
        - "表記統一（メトリクス名・時刻表記・ディレクトリ表記）"
        - "リンク/!include の死活チェック"                 # 追加
        - "yamlアンカー/エイリアスの循環検出"               # 追加
      outputs:
        - "docs/governance/review/{YYYY-MM-DD}_summary.md"
        - "docs/governance/review/{YYYY-MM-DD}_king_ops_prompt.cleaned.yaml"
        - "docs/governance/review/{YYYY-MM-DD}_churn_hotspots.md"  # 追加: 変更集中箇所
      approval:
        required: true
        approver: "human_pm"
        apply_note: "approvedなら次回大掃除までに採用"
      apply_policy:
        dry_run_only: true                                   # 追加: dailyは原則DRY（提案止まり）
        require_green_ci: true                               # 追加
        max_lines_changed: 200                               # 追加: 大鉈は禁止

    weekly_consolidation:
      goal: "1週間の小掃除候補を統合し、重複排除と章立て再配置"
      schedule: { frequency: "weekly", day_utc: "Sun", time_utc: "09:00" }
      inputs_glob: "docs/governance/review/*_king_ops_prompt.cleaned.yaml"
      checks:
        - "章の順序最適化（宣言→KPI→SLO→運用→変更管理→付録）"
        - "リンク切れ/参照先存在チェック"
        - "テンプレと実データの齟齬（例: scripts 参照 → scripts.* があるか）"
        - "用語集(glossary)との表記整合"                    # 追加
      impact_estimation:                                     # 追加: 影響度見積り
        metrics: ["changed_sections","diff_lines","touched_roles","broken_links_fixed"]
        risk_hint_rules:
          - "diff_lines > 500 → risk=high"
          - "changed_sections ∋ decision_rules → risk=high"
      outputs:
        - "docs/governance/review/weekly/{YYYY-WW}_merged.diff.md"
        - "docs/governance/review/weekly/{YYYY-WW}_proposed.yaml"
      approval: { required: true, approver: "human_pm" }
      pr_automation:
        create_pr: true                                      # 追加: 自動PR化
        target_branch: "governance/weekly-{YYYY-WW}"
        labels: ["governance","autogenerated"]

    monthly_refactor:
      goal: "大規模整理（用語集更新・Deprecated項目の廃止・章の再編）"
      schedule: { frequency: "monthly", day_utc: "MonthEnd", time_utc: "10:00" }
      deprecate_rules:
        - "90日間未使用のscripts/jobsは候補"
        - "重複方針（最新版以外）を付録へ退避"
      safety_checks:                                         # 追加: 月次の強めガード
        require_two_phase: true
        require_rollforward_plan: true
        forbid_policy_changes_without_change_draft: true
      outputs:
        - "docs/governance/review/monthly/{YYYY-MM}_refactor_plan.md"
        - "docs/governance/review/monthly/{YYYY-MM}_final_proposed.yaml"
      approval: { required: true, approver: "human_pm", two_phase: true }

  quality_gates:
    - "yaml構文OK"
    - "参照整合性OK（存在しないキーやファイル参照がない）"
    - "決裁ポイントは明確（require_human_ack を侵さない）"
    - "testing.regression_min を侵さない"                   # 追加
    - "observability.traces.enabled が変わる場合はsecurityレビュー" # 追加

  telemetry:
    metrics: ["governance_suggestions_count","accepted_ratio_pct","cleanup_delta_lines","skipped_daily_reviews","hotspot_sections"]
    report_path: "docs/governance/review/metrics/{YYYY-MM}.md"
    audit:
      log_path: "docs/audit/governance/{YYYY}/{YYYYMMDD}.log" # 追加: 監査ログ
      events:
        - "who: <actor> | action: propose | file: <path> | at: <UTC>"
        - "who: <actor> | action: approve | pr: <id> | at: <UTC>"
        - "who: <actor> | action: merge | sha: <git_sha> | at: <UTC>"

{
  "root": "/mnt/d/noctria_kingdom",
  "workflows": [
    {
      "path": ".github/workflows/adopt_auto_pr.yml",
      "name": "Adopt Auto PR",
      "trigger_hint": "on:"
    },
    {
      "path": ".github/workflows/adopt_backtest.yml",
      "name": "Backtest on Adopt PR (self-hosted)",
      "trigger_hint": "on:"
    },
    {
      "path": ".github/workflows/airflow_backtest_local.yml",
      "name": "Airflow Backtest (Local)",
      "trigger_hint": "on:"
    },
    {
      "path": ".github/workflows/airflow_backtest_on_merge.yml",
      "name": "Airflow Backtest on Adopt PR Merge",
      "trigger_hint": "on:"
    },
    {
      "path": ".github/workflows/codex_quality.yml",
      "name": "Codex Quality Gate",
      "trigger_hint": "on:"
    },
    {
      "path": ".github/workflows/docker-pytest.yml",
      "name": "Docker Pytest Workflow",
      "trigger_hint": "on:"
    },
    {
      "path": ".github/workflows/handoff_rollup.yml",
      "name": "Handoff Rollup",
      "trigger_hint": "on:"
    },
    {
      "path": ".github/workflows/inventor-pr-guard.yml",
      "name": "Inventor Decision Guard (PR only)",
      "trigger_hint": "on:"
    },
    {
      "path": ".github/workflows/merge_guard_labeler.yml",
      "name": "Merge Guard (labels)",
      "trigger_hint": "on:"
    },
    {
      "path": ".github/workflows/noctria_policy_check.yml",
      "name": "noctria_policy_check",
      "trigger_hint": "on:"
    },
    {
      "path": ".github/workflows/pdca-agent.yml",
      "name": "PDCA Agent (recheck & adopt)",
      "trigger_hint": "on:"
    },
    {
      "path": ".github/workflows/pr-inventor-guard.yml",
      "name": "PR ‚Äî Inventor Guard (light tests)",
      "trigger_hint": "on:"
    },
    {
      "path": ".github/workflows/pytest.yml",
      "name": "üîç Run Pytest for Noctria Kingdom",
      "trigger_hint": "on:"
    },
    {
      "path": ".github/workflows/veritas_ci.yml",
      "name": "üß™ Veritas Official Strategy CI",
      "trigger_hint": "on:"
    }
  ],
  "airflow_dags": [
    {
      "path": "airflow_docker/dags/inventor_pipeline_dag.py",
      "dag_ids": [
        "inventor_pipeline"
      ]
    },
    {
      "path": "airflow_docker/dags/levia_strategy_dag.py",
      "dag_ids": [
        "levia_strategy_dag"
      ]
    },
    {
      "path": "airflow_docker/dags/metaai_apply_dag.py",
      "dag_ids": [
        "metaai_apply_dag"
      ]
    },
    {
      "path": "airflow_docker/dags/noctria_backtest_dag.py",
      "dag_ids": [
        "noctria_backtest_dag"
      ]
    },
    {
      "path": "airflow_docker/dags/noctria_kingdom_dag.py",
      "dag_ids": [
        "noctria_kingdom_royal_council_dag"
      ]
    },
    {
      "path": "airflow_docker/dags/noctria_kingdom_pdca_dag.py",
      "dag_ids": [
        "noctria_kingdom_pdca_dag"
      ]
    },
    {
      "path": "airflow_docker/dags/noctus_strategy_dag.py",
      "dag_ids": [
        "noctus_strategy_dag"
      ]
    },
    {
      "path": "airflow_docker/dags/pdca_plan_summary_dag.py",
      "dag_ids": [
        "pdca_plan_summary_dag"
      ]
    },
    {
      "path": "airflow_docker/dags/prometheus_strategy_dag.py",
      "dag_ids": [
        "prometheus_strategy_dag"
      ]
    },
    {
      "path": "airflow_docker/dags/simulate_strategy_dag.py",
      "dag_ids": [
        "simulate_strategy_dag"
      ]
    },
    {
      "path": "airflow_docker/dags/structure_check_dag.py",
      "dag_ids": [
        "structure_check_dag"
      ]
    },
    {
      "path": "airflow_docker/dags/train_prometheus_obs8_dag.py",
      "dag_ids": [
        "train_prometheus_obs8"
      ]
    },
    {
      "path": "airflow_docker/dags/verify_path_config_dag.py",
      "dag_ids": [
        "verify_path_config_dag"
      ]
    },
    {
      "path": "airflow_docker/dags/veritas_act_record_dag.py",
      "dag_ids": [
        "veritas_act_record_dag"
      ]
    },
    {
      "path": "airflow_docker/dags/veritas_eval_dag.py",
      "dag_ids": [
        "veritas_evaluation_pipeline"
      ]
    },
    {
      "path": "airflow_docker/dags/veritas_eval_single_dag.py",
      "dag_ids": [
        "veritas_eval_single_dag"
      ]
    },
    {
      "path": "airflow_docker/dags/veritas_generate_dag.py",
      "dag_ids": [
        "veritas_generate_dag"
      ]
    },
    {
      "path": "airflow_docker/dags/veritas_pdca_dag.py",
      "dag_ids": [
        "veritas_pdca_loop_v2"
      ]
    },
    {
      "path": "airflow_docker/dags/veritas_push_dag.py",
      "dag_ids": [
        "veritas_push_dag"
      ]
    },
    {
      "path": "airflow_docker/dags/veritas_recheck_dag.py",
      "dag_ids": [
        "veritas_recheck_dag"
      ]
    },
    {
      "path": "airflow_docker/dags/veritas_refactor_dag.py",
      "dag_ids": [
        "veritas_refactor_dag"
      ]
    },
    {
      "path": "airflow_docker/dags/veritas_replay_dag.py",
      "dag_ids": [
        "veritas_replay_dag"
      ]
    },
    {
      "path": "airflow_docker/dags/veritas_to_order_dag.py",
      "dag_ids": [
        "veritas_to_order_pipeline"
      ]
    }
  ],
  "pattern_hits": {
    "inventor": [
      "scripts/codex_progress_check.py",
      "scripts/pdca_agent.py",
      "scripts/repo_xray.py",
      "scripts/show_last_inventor_decision.py",
      "src/codex/agents/harmonia.py",
      "src/codex/agents/inventor.py",
      "src/codex/mini_loop.py",
      "src/codex/run_codex_cycle.py",
      "src/codex/tools/collect_failures.py",
      "src/codex/tools/json_parse.py",
      "src/codex/tools/patch_gen.py",
      "src/codex/tools/review_pipeline.py",
      "src/codex_reports/inventor_suggestions.md",
      "src/plan_data/adapter_to_decision.py",
      "src/plan_data/inventor.py",
      "src/plan_data/run_inventor.py"
    ],
    "harmonia": [
      "scripts/repo_xray.py",
      "src/codex/agents/harmonia.py",
      "src/codex/mini_loop.py",
      "src/codex/run_codex_cycle.py",
      "src/codex/tools/collect_failures.py",
      "src/codex/tools/review_pipeline.py",
      "src/codex_reports/harmonia_review.md",
      "src/plan_data/inventor.py",
      "src/plan_data/run_inventor.py"
    ],
    "pdca": [
      "scripts/codex_progress_check.py",
      "scripts/noctria_dead_code_detector.py",
      "scripts/pdca_agent.py",
      "scripts/repo_xray.py",
      "scripts/show_last_inventor_decision.py",
      "src/core/act_service.py",
      "src/core/decision_hooks.py",
      "src/core/decision_registry.py",
      "src/core/king_noctria.py",
      "src/core/path_config.py",
      "src/core/strategy_evaluator.py",
      "src/decision/decision_engine.py",
      "src/decision/quality_gate.py",
      "src/e2e/decision_minidemo.py",
      "src/execution/execution_manager.py",
      "src/execution/simulate_official_strategy.py",
      "src/noctria_ai/noctria.py",
      "src/plan_data/adapter_to_decision.py",
      "src/plan_data/adapter_to_decision_cli.py",
      "src/plan_data/contracts.py",
      "src/plan_data/inventor.py",
      "src/plan_data/observability.py",
      "src/plan_data/pdca_summary_service.py",
      "src/plan_data/plan_to_all_minidemo.py",
      "src/plan_data/plan_to_aurus_demo.py",
      "src/plan_data/plan_to_hermes_demo.py",
      "src/plan_data/plan_to_levia_demo.py",
      "src/plan_data/plan_to_noctus_demo.py",
      "src/plan_data/plan_to_prometheus_demo.py",
      "src/plan_data/plan_to_veritas_demo.py",
      "src/plan_data/profile_loader.py",
      "src/plan_data/run_inventor.py",
      "src/plan_data/run_with_profile.py",
      "src/plan_data/statistics.py",
      "src/scripts/apply_best_params_to_metaai.py",
      "src/scripts/generate_dummy_logs.py",
      "src/strategies/aurus_singularis.py",
      "src/strategies/auto_adjustment.py",
      "src/strategies/hermes_cognitor.py",
      "src/strategies/levia_tempest.py",
      "src/strategies/noctus_sentinella.py",
      "src/strategies/prometheus_oracle.py",
      "src/veritas/veritas_machina.py"
    ],
    "veritas": [
      "autogen_scripts/openai_noctria_dev.py",
      "scripts/backtest_runner.py",
      "scripts/check_imports.py",
      "scripts/generate_handoff.py",
      "scripts/repo_xray.py",
      "scripts/trigger_backtest_dag.py",
      "src/codex/agents/harmonia.py",
      "src/codex/agents/inventor.py",
      "src/core/act_service.py",
      "src/core/config.yaml",
      "src/core/decision_registry.py",
      "src/core/git_utils.py",
      "src/core/king_noctria.py",
      "src/core/meta_ai.py",
      "src/core/path_config.py",
      "src/core/pdca_log_parser.py",
      "src/core/strategy_evaluator.py",
      "src/core/strategy_optimizer_adjusted.py",
      "src/core/task_scheduler.py",
      "src/core/veritas_trigger_api.py",
      "src/decision/decision_engine.py",
      "src/execution/generate_order_json.py",
      "src/execution/simulate_official_strategy.py",
      "src/hermes/strategy_generator.py",
      "src/noctria_ai/noctria.py",
      "src/plan_data/adapter_to_decision.py",
      "src/plan_data/adapter_to_decision_cli.py",
      "src/plan_data/ai_adapter.py",
      "src/plan_data/anomaly_detector.py",
      "src/plan_data/contracts.py",
      "src/plan_data/feature_spec.py",
      "src/plan_data/inventor.py",
      "src/plan_data/kpi_minidemo.py",
      "src/plan_data/observability.py",
      "src/plan_data/pdca_summary_service.py",
      "src/plan_data/plan_to_all_minidemo.py",
      "src/plan_data/plan_to_hermes_demo.py",
      "src/plan_data/plan_to_veritas_demo.py",
      "src/plan_data/run_with_profile.py",
      "src/plan_data/strategy_adapter.py",
      "src/plan_data/test_plan_analyzer.py",
      "src/scripts/evaluate_single_strategy.py",
      "src/scripts/generate_dummy_logs.py",
      "src/scripts/github_push_adopted_strategies.py",
      "src/scripts/log_pdca_result.py",
      "src/scripts/meta_ai_tensorboard_train.py",
      "src/scripts/push_generated_strategy.py",
      "src/scripts/push_generated_strategy_to_github_dag.py",
      "src/scripts/recheck_runner.py",
      "src/scripts/tag_adoption_log.py",
      "src/strategies/aurus_singularis.py",
      "src/strategies/auto_adjustment.py",
      "src/strategies/hermes_cognitor.py",
      "src/strategies/prometheus_oracle.py",
      "src/strategies/reinforcement/exploration_strategy.py",
      "src/strategies/strategy_runner.py",
      "src/strategies/veritas_generated/Aurus_Singularis.py",
      "src/tools/apply_path_fixes.py",
      "src/tools/dependency_analyzer.py",
      "src/tools/diagnose_dependencies.py",
      "src/tools/export_all_logs.py",
      "src/tools/fix_logger_usage.py",
      "src/tools/fix_path_violations.py",
      "src/tools/generate_github_template_summary.py",
      "src/tools/generate_readme_summary.py",
      "src/tools/generate_refactor_plan.py",
      "src/tools/hardcoded_path_replacer.py",
      "src/tools/push_official_strategy_to_github.py",
      "src/tools/refactor_manager.py",
      "src/tools/scan_refactor_plan.py",
      "src/tools/strategy_classifier.py",
      "src/tools/structure_refactor.py",
      "src/tools/tag_summary_generator.py",
      "src/tools/verify_path_config_usage.py",
      "src/training/train_prometheus.py",
      "src/veritas/evaluate_veritas.py",
      "src/veritas/generate_strategy_file.py",
      "src/veritas/promote_accepted_strategies.py",
      "src/veritas/record_act_log.py",
      "src/veritas/strategy_generator.py",
      "src/veritas/veritas_airflow_executor.py",
      "src/veritas/veritas_generate_strategy.py",
      "src/veritas/veritas_machina.py",
      "tools/generate_import_map.py"
    ],
    "airflow": [
      "autogen_scripts/utils/cycle_logger.py",
      "scripts/generate_handoff.py",
      "scripts/noctria_dead_code_detector.py",
      "scripts/repo_xray.py",
      "scripts/show_last_inventor_decision.py",
      "scripts/trigger_backtest_dag.py",
      "src/codex/agents/harmonia.py",
      "src/codex/agents/inventor.py",
      "src/core/airflow_client.py",
      "src/core/dag_trigger.py",
      "src/core/db_logging.py",
      "src/core/decision_hooks.py",
      "src/core/env_config.py",
      "src/core/king_noctria.py",
      "src/core/path_config.py",
      "src/core/strategy_evaluator.py",
      "src/core/utils.py",
      "src/core/veritas_trigger_api.py",
      "src/execution/simulate_official_strategy.py",
      "src/hermes/strategy_generator.py",
      "src/plan_data/quality_gate.py",
      "src/plan_data/run_inventor.py",
      "src/scripts/apply_best_params_to_kingdom.py",
      "src/scripts/apply_best_params_to_metaai.py",
      "src/scripts/generate_path_mapping.py",
      "src/scripts/log_pdca_result.py",
      "src/scripts/optimize_params_with_optuna.py",
      "src/scripts/push_generated_strategy_to_github_dag.py",
      "src/tools/apply_path_fixes.py",
      "src/tools/fix_import_paths.py",
      "src/tools/scan_and_fix_paths.py",
      "src/tools/verify_imports.py",
      "src/utils/model_io.py",
      "src/veritas/strategy_generator.py",
      "src/veritas/veritas_airflow_executor.py",
      "tools/collect_autogen_devcycle_pg.py",
      "tools/scan_repo_to_mermaid.py"
    ]
  },
  "dir_ranking": [
    {
      "count": 60,
      "dir": "generated_code"
    },
    {
      "count": 59,
      "dir": "."
    },
    {
      "count": 57,
      "dir": "noctria_gui/routes"
    },
    {
      "count": 54,
      "dir": "_graveyard/2025-09-06/noctria_gui/routes"
    },
    {
      "count": 51,
      "dir": "noctria_gui/templates"
    },
    {
      "count": 34,
      "dir": "src/plan_data"
    },
    {
      "count": 32,
      "dir": "src/tools"
    },
    {
      "count": 30,
      "dir": "src/core"
    },
    {
      "count": 30,
      "dir": "_graveyard/2025-09-06/src/tools"
    },
    {
      "count": 29,
      "dir": "tests"
    },
    {
      "count": 28,
      "dir": "scripts"
    },
    {
      "count": 28,
      "dir": "airflow_docker/dags"
    },
    {
      "count": 25,
      "dir": "_graveyard/2025-09-06/airflow_docker/dags"
    },
    {
      "count": 19,
      "dir": "_graveyard/2025-09-06/noctria_gui/templates"
    },
    {
      "count": 18,
      "dir": "_graveyard/2025-09-06/src/plan_data"
    },
    {
      "count": 17,
      "dir": "data"
    },
    {
      "count": 17,
      "dir": "airflow_docker/scripts"
    },
    {
      "count": 16,
      "dir": "src/scripts"
    },
    {
      "count": 15,
      "dir": "src/execution"
    },
    {
      "count": 14,
      "dir": "docs/architecture/diagrams"
    }
  ]
}
# docker-compose.yaml (v3.5)
# Noctria Kingdom„ÅÆAirflowÁí∞Â¢É„ÇíÂÆöÁæ©„Åô„Çã

# ----------------------------------------
# ÂÖ±ÈÄöË®≠ÂÆöÔºàx-airflow-commonÔºâ
# ----------------------------------------
x-airflow-common: &airflow-common
  build:
    context: ..
    dockerfile: ./airflow_docker/docker/Dockerfile
  image: noctria-airflow:latest
  env_file: ../.env
  environment:
    - AIRFLOW__CORE__EXECUTOR=LocalExecutor
    - PYTHONPATH=/opt/airflow
    - AIRFLOW__WEBSERVER__EXPOSE_CONFIG=True
    - AIRFLOW__WEBSERVER__SESSION_BACKEND=securecookie
    - AIRFLOW__WEBSERVER__SECRET_KEY=NoctriaKingdomSecretKey_ChangeThisInProduction
  volumes:
    - ../dags:/opt/airflow/dags
    - ../logs:/opt/airflow/logs
    - ../plugins:/opt/airflow/plugins
    - ../src:/opt/airflow/src
    - ../data:/opt/airflow/data
  depends_on:
    postgres:
      condition: service_healthy
    redis:
      condition: service_started
  restart: always

services:
  # ======================================
  # üêò PostgreSQL „Éá„Éº„Çø„Éô„Éº„Çπ
  # ======================================
  postgres:
    image: postgres:13
    container_name: noctria_postgres
    env_file: ../.env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB:-airflow}
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
      - ./init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER:-airflow}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

  # ======================================
  # üîÅ Redis (Celery ExecutorÁî®„Å®„Åó„Å¶ÊÆã„Åô)
  # ======================================
  redis:
    image: redis:latest
    container_name: noctria_redis
    restart: always

  # ======================================
  # üåê Airflow Web UI
  # ======================================
  airflow-webserver:
    <<: *airflow-common # ÂÖ±ÈÄöË®≠ÂÆö„ÇíË™≠„ÅøËæº„ÇÄ
    container_name: noctria_airflow_webserver
    entrypoint: bash
    command:
      - -c
      - |
        airflow db upgrade
        airflow users create \
          --username admin \
          --password admin \
          --firstname Noctria \
          --lastname King \
          --role Admin \
          --email admin@noctria.com || true
        exec airflow webserver
    ports:
      - "8080:8080"

  # ======================================
  # üïì Airflow Scheduler
  # ======================================
  airflow-scheduler:
    <<: *airflow-common # ÂÖ±ÈÄöË®≠ÂÆö„ÇíË™≠„ÅøËæº„ÇÄ
    container_name: noctria_airflow_scheduler
    # ‚úÖ ÊúÄÁµÇ‰øÆÊ≠£: scheduler„ÇÇËµ∑ÂãïÂâç„Å´DBÂàùÊúüÂåñ„ÇíÂÆüË°å„Åô„Çã„Çà„ÅÜ„Å´Â§âÊõ¥
    entrypoint: bash
    command:
      - -c
      - "airflow db upgrade && exec airflow scheduler"

# ======================================
# üóÉ Ê∞∏Á∂ö„Éú„É™„É•„Éº„É†ÂÆöÁæ©
# ======================================
volumes:
  postgres-db-volume:
    driver: local

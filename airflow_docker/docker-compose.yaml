version: "3.6"

x-airflow-common: &airflow-common
  build:
    context: ..
    dockerfile: ./airflow_docker/docker/Dockerfile
  image: noctria-airflow:latest
  env_file: ../.env
  environment:
    - AIRFLOW__CORE__EXECUTOR=LocalExecutor
    - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres/${POSTGRES_DB}
    - AIRFLOW__WEBSERVER__SECRET_KEY=${AIRFLOW_WEBSERVER_SECRET_KEY:-YourSecretKeyForWebServerSession}
    - PYTHONPATH=/opt/airflow:/opt/airflow/src
  volumes:
    - ./dags:/opt/airflow/dags
    - ../logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - ../src:/opt/airflow/src
    - ../data:/opt/airflow/data
  depends_on:
    postgres:
      condition: service_healthy
  restart: always

services:
  postgres:
    image: postgres:13
    container_name: noctria_postgres
    env_file: ../.env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
      # ❗️ この行を削除しました。.envファイルの設定でDBを自動作成させるため、手動の初期化スクリプトは不要です。
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER:-airflow}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

  airflow-webserver:
    <<: *airflow-common
    container_name: noctria_airflow_webserver
    command: >
      bash -c "
        airflow db upgrade;
        airflow users create \
          --username admin \
          --password admin \
          --firstname Noctria \
          --lastname King \
          --role Admin \
          --email admin@noctria.com || true;
        exec airflow webserver
      "
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  airflow-scheduler:
    <<: *airflow-common
    container_name: noctria_airflow_scheduler
    command: scheduler
    healthcheck:
      test: ["CMD-SHELL", "airflow jobs check --job-type SchedulerJob --hostname \"$${HOSTNAME}\""]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  postgres-db-volume:
    driver: local

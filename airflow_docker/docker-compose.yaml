version: "3.8"

services:
  # ======================================
  # 🐘 PostgreSQL データベース
  # ======================================
  postgres:
    image: postgres:13
    container_name: postgres
    env_file: .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
      - ../tools:/docker-entrypoint-initdb.d  # ★ 初期化SQLを自動実行するために tools/ をマウント
    ports:
      - "5432:5432"
    restart: always

  # ======================================
  # 🔁 Redis（Celery Broker）
  # ======================================
  redis:
    image: redis:latest
    container_name: redis
    restart: always

  # ======================================
  # 🌐 Airflow Web UI
  # ======================================
  airflow-webserver:
    build:
      context: .  # ★ 相対パスでビルドコンテキスト指定
      dockerfile: ./docker/Dockerfile
    image: noctria-airflow
    container_name: airflow-webserver
    depends_on:
      - postgres
      - redis
    env_file: .env
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - PYTHONPATH=/opt/airflow/src  # ★ モジュール参照用
    ports:
      - "8080:8080"
    volumes:
      - ./dags:/opt/airflow/dags
      - ../logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ../src:/opt/airflow/src
      - ../data:/opt/airflow/data  # データ共有（任意）
    command: webserver
    restart: always

  # ======================================
  # 🕓 Airflow Scheduler
  # ======================================
  airflow-scheduler:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    image: noctria-airflow
    container_name: airflow-scheduler
    depends_on:
      - postgres
      - redis
    env_file: .env
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - PYTHONPATH=/opt/airflow/src
    volumes:
      - ./dags:/opt/airflow/dags
      - ../logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ../src:/opt/airflow/src
      - ../data:/opt/airflow/data
    command: scheduler
    restart: always

# ======================================
# 🗃 永続ボリューム定義（PostgreSQL用）
# ======================================
volumes:
  postgres-db-volume:

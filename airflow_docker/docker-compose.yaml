version: "3.8"

services:
  postgres:
    image: postgres:13
    env_file: .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    restart: always

  airflow-webserver:
    build:
      context: ./docker
    image: noctria-airflow
    depends_on:
      - postgres
    env_file: .env
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__WEBSERVER__RBAC: "True"
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "False"
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      PYTHONPATH: ${PYTHONPATH}
    volumes:
      - ${HOST_DAGS_PATH}:/noctria_kingdom/airflow_docker/dags
      - ${HOST_LOGS_PATH}:/noctria_kingdom/airflow_docker/logs
      - ${HOST_PLUGINS_PATH}:/noctria_kingdom/airflow_docker/plugins
      - ${HOST_SCRIPTS_PATH}:/noctria_kingdom/airflow_docker/scripts
      - ${HOST_CORE_PATH}:/noctria_kingdom/airflow_docker/core
      - ${HOST_STRATEGIES_PATH}:/noctria_kingdom/airflow_docker/strategies
      - ${HOST_DATA_PATH}:/noctria_kingdom/airflow_docker/data
      - ${HOST_MODELS_PATH}:/noctria_kingdom/airflow_docker/models
      - ${HOST_INSTITUTIONS_PATH}:/noctria_kingdom/airflow_docker/institutions
      - ${HOST_VERITAS_PATH}:/noctria_kingdom/veritas
    ports:
      - "8080:8080"
    command: webserver
    restart: always

  airflow-scheduler:
    build:
      context: ./docker
    image: noctria-airflow
    depends_on:
      - postgres
    env_file: .env
    environment:
      AIRFLOW__API__AUTH_BACKEND: airflow.api.auth.backend.basic_auth
      HF_TOKEN: ${HF_TOKEN}
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "False"
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      PYTHONPATH: ${PYTHONPATH}
    volumes:
      - ${HOST_DAGS_PATH}:/noctria_kingdom/airflow_docker/dags
      - ${HOST_LOGS_PATH}:/noctria_kingdom/airflow_docker/logs
      - ${HOST_PLUGINS_PATH}:/noctria_kingdom/airflow_docker/plugins
      - ${HOST_SCRIPTS_PATH}:/noctria_kingdom/airflow_docker/scripts
      - ${HOST_CORE_PATH}:/noctria_kingdom/airflow_docker/core
      - ${HOST_STRATEGIES_PATH}:/noctria_kingdom/airflow_docker/strategies
      - ${HOST_DATA_PATH}:/noctria_kingdom/airflow_docker/data
      - ${HOST_MODELS_PATH}:/noctria_kingdom/airflow_docker/models
      - ${HOST_INSTITUTIONS_PATH}:/noctria_kingdom/airflow_docker/institutions
      - ${HOST_VERITAS_PATH}:/noctria_kingdom/veritas
      - ${HOST_TOOLS_PATH}:/noctria_kingdom/tools
    command: scheduler
    restart: always

  airflow-worker:
    build:
      context: ./docker
    image: noctria-airflow
    depends_on:
      - postgres
    env_file: .env
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      PYTHONPATH: ${PYTHONPATH}
    volumes:
      - ${HOST_DAGS_PATH}:/noctria_kingdom/airflow_docker/dags
      - ${HOST_LOGS_PATH}:/noctria_kingdom/airflow_docker/logs
      - ${HOST_PLUGINS_PATH}:/noctria_kingdom/airflow_docker/plugins
      - ${HOST_SCRIPTS_PATH}:/noctria_kingdom/airflow_docker/scripts
      - ${HOST_CORE_PATH}:/noctria_kingdom/airflow_docker/core
      - ${HOST_STRATEGIES_PATH}:/noctria_kingdom/airflow_docker/strategies
      - ${HOST_DATA_PATH}:/noctria_kingdom/airflow_docker/data
      - ${HOST_MODELS_PATH}:/noctria_kingdom/airflow_docker/models
      - ${HOST_INSTITUTIONS_PATH}:/noctria_kingdom/airflow_docker/institutions
      - ${HOST_VERITAS_PATH}:/noctria_kingdom/veritas
      - ${HOST_TOOLS_PATH}:/noctria_kingdom/tools
    command: worker
    restart: always

volumes:
  postgres-db-volume:

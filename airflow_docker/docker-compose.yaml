version: "3"

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    restart: always

  airflow-webserver:
    build:
      context: ./docker
    image: noctria-airflow
    depends_on:
      - postgres
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: ${AIRFLOW__DATABASE__SQL_ALCHEMY_CONN}
      AIRFLOW__WEBSERVER__RBAC: "True"
      AIRFLOW__CORE__FERNET_KEY: ${AIRFLOW__CORE__FERNET_KEY}
      AIRFLOW__WEBSERVER__SECRET_KEY: ${AIRFLOW__WEBSERVER__SECRET_KEY}
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "False"
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      AIRFLOW__CORE__DAGS_FOLDER: ${AIRFLOW__CORE__DAGS_FOLDER}
      PYTHONPATH: ${PYTHONPATH}
    volumes:
      - ./dags:/noctria_kingdom/airflow_docker/dags
      - ./logs:/noctria_kingdom/airflow_docker/logs
      - ./plugins:/noctria_kingdom/airflow_docker/plugins
      - ./scripts:/noctria_kingdom/airflow_docker/scripts
      - ./core:/noctria_kingdom/airflow_docker/core
      - ./strategies:/noctria_kingdom/airflow_docker/strategies
      - ./data:/noctria_kingdom/airflow_docker/data
      - ./models:/noctria_kingdom/airflow_docker/models
      - ./institutions:/noctria_kingdom/airflow_docker/institutions
    ports:
      - "8080:8080"
    command: webserver
    restart: always

  airflow-scheduler:
    build:
      context: ./docker
    image: noctria-airflow
    depends_on:
      - postgres
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: ${AIRFLOW__DATABASE__SQL_ALCHEMY_CONN}
      AIRFLOW__CORE__FERNET_KEY: ${AIRFLOW__CORE__FERNET_KEY}
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "False"
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      AIRFLOW__CORE__DAGS_FOLDER: ${AIRFLOW__CORE__DAGS_FOLDER}
      PYTHONPATH: ${PYTHONPATH}
    volumes:
      - ./dags:/noctria_kingdom/airflow_docker/dags
      - ./logs:/noctria_kingdom/airflow_docker/logs
      - ./plugins:/noctria_kingdom/airflow_docker/plugins
      - ./scripts:/noctria_kingdom/airflow_docker/scripts
      - ./core:/noctria_kingdom/airflow_docker/core
      - ./strategies:/noctria_kingdom/airflow_docker/strategies
      - ./data:/noctria_kingdom/airflow_docker/data
      - ./models:/noctria_kingdom/airflow_docker/models
      - ./institutions:/noctria_kingdom/airflow_docker/institutions
    command: scheduler
    restart: always

volumes:
  postgres-db-volume:

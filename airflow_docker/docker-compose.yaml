services:
  postgres:
    image: postgres:13
    env_file: .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    restart: always

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    restart: always

  airflow-webserver:
    build:
      context: ./docker
    image: noctria-airflow
    depends_on:
      - postgres
      - redis
    env_file: .env
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__CELERY__BROKER_URL: redis://redis:6379/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres/${POSTGRES_DB}
      AIRFLOW__WEBSERVER__RBAC: "True"
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "False"
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      PYTHONPATH: ${PYTHONPATH}
    volumes:
      - ${HOST_DAGS_PATH}:/noctria_kingdom/airflow_docker/dags
      - ${HOST_LOGS_PATH}:/noctria_kingdom/airflow_docker/logs
      - ${HOST_PLUGINS_PATH}:/noctria_kingdom/airflow_docker/plugins
      - ${HOST_SCRIPTS_PATH}:/noctria_kingdom/airflow_docker/scripts
      - ${HOST_CORE_PATH}:/noctria_kingdom/core
      - ${HOST_STRATEGIES_PATH}:/noctria_kingdom/strategies
      - ${HOST_DATA_PATH}:/noctria_kingdom/data
      - ${HOST_MODELS_PATH}:/noctria_kingdom/models
      - ${HOST_INSTITUTIONS_PATH}:/noctria_kingdom/institutions
      - ${HOST_VERITAS_PATH}:/noctria_kingdom/veritas
      - ${HOST_TESTS_PATH}:/noctria_kingdom/tests
    ports:
      - "8080:8080"
    command: webserver
    restart: always

  airflow-scheduler:
    build:
      context: ./docker
    image: noctria-airflow
    depends_on:
      - postgres
      - redis
    env_file: .env
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__CELERY__BROKER_URL: redis://redis:6379/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres/${POSTGRES_DB}
      AIRFLOW__API__AUTH_BACKEND: airflow.api.auth.backend.basic_auth
      HF_TOKEN: ${HF_TOKEN}
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "False"
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      PYTHONPATH: ${PYTHONPATH}
    volumes:
      - ${HOST_DAGS_PATH}:/noctria_kingdom/airflow_docker/dags
      - ${HOST_LOGS_PATH}:/noctria_kingdom/airflow_docker/logs
      - ${HOST_PLUGINS_PATH}:/noctria_kingdom/airflow_docker/plugins
      - ${HOST_SCRIPTS_PATH}:/noctria_kingdom/airflow_docker/scripts
      - ${HOST_CORE_PATH}:/noctria_kingdom/core
      - ${HOST_STRATEGIES_PATH}:/noctria_kingdom/strategies
      - ${HOST_DATA_PATH}:/noctria_kingdom/data
      - ${HOST_MODELS_PATH}:/noctria_kingdom/models
      - ${HOST_INSTITUTIONS_PATH}:/noctria_kingdom/institutions
      - ${HOST_VERITAS_PATH}:/noctria_kingdom/veritas
      - ${HOST_TOOLS_PATH}:/noctria_kingdom/tools
      - ${HOST_TESTS_PATH}:/noctria_kingdom/tests
    command: scheduler
    restart: always

  airflow-worker:
    build:
      context: ./docker
    image: noctria-airflow
    depends_on:
      - postgres
      - redis
    env_file: .env
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__CELERY__BROKER_URL: redis://redis:6379/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres/${POSTGRES_DB}
      PYTHONPATH: ${PYTHONPATH}
    volumes:
      - ${HOST_DAGS_PATH}:/noctria_kingdom/airflow_docker/dags
      - ${HOST_LOGS_PATH}:/noctria_kingdom/airflow_docker/logs
      - ${HOST_PLUGINS_PATH}:/noctria_kingdom/airflow_docker/plugins
      - ${HOST_SCRIPTS_PATH}:/noctria_kingdom/airflow_docker/scripts
      - ${HOST_CORE_PATH}:/noctria_kingdom/core
      - ${HOST_STRATEGIES_PATH}:/noctria_kingdom/strategies
      - ${HOST_DATA_PATH}:/noctria_kingdom/data
      - ${HOST_MODELS_PATH}:/noctria_kingdom/models
      - ${HOST_INSTITUTIONS_PATH}:/noctria_kingdom/institutions
      - ${HOST_VERITAS_PATH}:/noctria_kingdom/veritas
      - ${HOST_TOOLS_PATH}:/noctria_kingdom/tools
      - ${HOST_TESTS_PATH}:/noctria_kingdom/tests
    command: celery worker
    restart: always

volumes:
  postgres-db-volume:

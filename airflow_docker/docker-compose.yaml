# docker-compose.yaml (v2.6)
# Noctria KingdomのAirflow環境を定義する
version: "3.8"

# ----------------------------------------
# 共通設定（x-airflow-common）
# ----------------------------------------
x-airflow-common: &airflow-common
  build:
    # ✅ 修正: ビルドの基準点をプロジェクトルートに変更 (..)
    context: ..
    # ✅ 修正: Dockerfileのパスを新しい基準点からの相対パスに修正
    dockerfile: ./airflow_docker/docker/Dockerfile
  image: noctria-airflow:latest
  env_file: ./airflow_docker/.env # .envファイルのパスも修正
  environment:
    - AIRFLOW__CORE__EXECUTOR=LocalExecutor
    - PYTHONPATH=/opt/airflow
    - AIRFLOW__WEBSERVER__EXPOSE_CONFIG=True
  volumes:
    # ✅ 修正: 各ボリュームのパスを新しい基準点からの相対パスに修正
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - ./src:/opt/airflow/src
    - ./data:/opt/airflow/data
  depends_on:
    postgres:
      condition: service_healthy
    redis:
      condition: service_started
  restart: always

services:
  # ======================================
  # 🐘 PostgreSQL データベース
  # ======================================
  postgres:
    image: postgres:13
    container_name: noctria_postgres
    env_file: ./airflow_docker/.env # .envファイルのパスも修正
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB:-airflow}
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
      - ./airflow_docker/docker/init:/docker-entrypoint-initdb.d # initスクリプトのパスも修正
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER:-airflow}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

  # ======================================
  # 🔁 Redis
  # ======================================
  redis:
    image: redis:latest
    container_name: noctria_redis
    restart: always

  # ======================================
  # 🌐 Airflow Web UI
  # ======================================
  airflow-webserver:
    <<: *airflow-common # 共通設定を読み込む
    container_name: noctria_airflow_webserver
    entrypoint: ["/entrypoint-webserver.sh"]
    ports:
      - "8080:8080"

  # ======================================
  # 🕓 Airflow Scheduler
  # ======================================
  airflow-scheduler:
    <<: *airflow-common # 共通設定を読み込む
    container_name: noctria_airflow_scheduler
    command: scheduler

# ======================================
# 🗃 永続ボリューム定義
# ======================================
volumes:
  postgres-db-volume:
    driver: local

version: "3.6"

x-airflow-common: &airflow-common
  build:
    context: ..                                  # airflow_docker/ で実行前提
    dockerfile: ./airflow_docker/docker/Dockerfile
  image: noctria-airflow:latest
  container_name: ""                              # 子で個別指定
  env_file: ../.env
  environment:
    # ---- Airflow core ----
    - AIRFLOW__CORE__EXECUTOR=LocalExecutor
    - AIRFLOW__CORE__LOAD_EXAMPLES=False
    - AIRFLOW__CORE__DAGBAG_IMPORT_TIMEOUT=180
    - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${POSTGRES_USER:-airflow}:${POSTGRES_PASSWORD:-airflow}@postgres/${POSTGRES_DB:-airflow}
    - AIRFLOW__WEBSERVER__SECRET_KEY=${AIRFLOW_WEBSERVER_SECRET_KEY:-YourSecretKeyForWebServerSession}
    # ---- Python path so that "from src...." works everywhere ----
    - PYTHONPATH=/opt/airflow/src:/opt/airflow
    # ---- Optuna RDB storage (Airflow上での既定). DAG内paramsで上書き可 ----
    - OPTUNA_STORAGE=postgresql+psycopg2://${POSTGRES_USER:-airflow}:${POSTGRES_PASSWORD:-airflow}@postgres:5432/${POSTGRES_DB:-airflow}
  volumes:
    - ./dags:/opt/airflow/dags
    - ../logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - ../src:/opt/airflow/src
    - ../data:/opt/airflow/data
  depends_on:
    postgres:
      condition: service_healthy
  restart: always

services:
  postgres:
    image: postgres:13
    container_name: noctria_postgres
    env_file: ../.env
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-airflow}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-airflow}
      - POSTGRES_DB=${POSTGRES_DB:-airflow}
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER:-airflow}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

  airflow-webserver:
    <<: *airflow-common
    container_name: noctria_airflow_webserver
    command: >
      bash -c "
        airflow db upgrade &&
        airflow users create
          --username ${AIRFLOW_USER:-admin}
          --password ${AIRFLOW_PASSWORD:-admin}
          --firstname Noctria
          --lastname King
          --role Admin
          --email admin@noctria.com || true;
        exec airflow webserver
      "
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  airflow-scheduler:
    <<: *airflow-common
    container_name: noctria_airflow_scheduler
    command: scheduler
    healthcheck:
      test: ["CMD-SHELL", "airflow jobs check --job-type SchedulerJob --hostname \"$${HOSTNAME}\""]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  postgres-db-volume:
    driver: local
